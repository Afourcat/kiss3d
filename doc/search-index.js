var searchIndex = {};
searchIndex["kiss3d"] = {"doc":"# Kiss3d","items":[[0,"window","kiss3d","The window, and things to handle the rendering loop and events.",null,null],[3,"Window","kiss3d::window","Structure representing a window and a 3D scene.",null,null],[3,"Event","","An event.",null,null],[12,"timestamp","","The event timestamp.",0,null],[12,"value","","The exact glfw event value. This can be modified to fool the other event handlers.",0,null],[12,"inhibited","","Set this to `true` to prevent the window or the camera from handling the event.",0,null],[3,"Events","","An iterator through events.",null,null],[3,"EventManager","","A stand-alone object that provides an iterator though glfw events.",null,null],[11,"should_close","","Indicates whether this window should be closed.",1,null],[11,"context","","Access the glfw context.",1,null],[11,"glfw_window","","Access the glfw window.",1,null],[11,"glfw_window_mut","","Mutably access the glfw window.",1,null],[11,"width","","The window width.",1,null],[11,"height","","The window height.",1,null],[11,"size","","The size of the window.",1,null],[11,"set_framerate_limit","","Sets the maximum number of frames per second. Cannot be 0. `None` means there is no limit.",1,null],[11,"set_title","","Set window title",1,null],[11,"close","","Closes the window.",1,null],[11,"hide","","Hides the window, without closing it. Use `show` to make it visible again.",1,null],[11,"show","","Makes the window visible. Use `hide` to hide it.",1,null],[11,"set_background_color","","Sets the background color.",1,null],[11,"draw_line","","Adds a line to be drawn during the next frame.",1,null],[11,"draw_point","","Adds a point to be drawn during the next frame.",1,null],[11,"draw_text","","Adds a string to be drawn during the next frame.",1,null],[11,"remove","","Removes an object from the scene.",1,null],[11,"add_group","","Adds a group to the scene.",1,null],[11,"add_obj","","Adds an obj model to the scene.",1,null],[11,"add_mesh","","Adds an unnamed mesh to the scene.",1,null],[11,"add_trimesh","","Creates and adds a new object using the geometry generated by a given procedural generator.\nCreates and adds a new object using a mesh descriptor.",1,null],[11,"add_geom_with_name","","Creates and adds a new object using the geometry registered as `geometry_name`.",1,null],[11,"add_cube","","Adds a cube to the scene. The cube is initially axis-aligned and centered at (0, 0, 0).",1,null],[11,"add_sphere","","Adds a sphere to the scene. The sphere is initially centered at (0, 0, 0).",1,null],[11,"add_cone","","Adds a cone to the scene. The cone is initially centered at (0, 0, 0) and points toward the\npositive `y` axis.",1,null],[11,"add_cylinder","","Adds a cylinder to the scene. The cylinder is initially centered at (0, 0, 0) and has its\nprincipal axis aligned with the `y` axis.",1,null],[11,"add_capsule","","Adds a capsule to the scene. The capsule is initially centered at (0, 0, 0) and has its\nprincipal axis aligned with the `y` axis.",1,null],[11,"add_quad","","Adds a double-sided quad to the scene. The quad is initially centered at (0, 0, 0). The\nquad itself is composed of a user-defined number of triangles regularly spaced on a grid.\nThis is the main way to draw height maps.",1,null],[11,"add_quad_with_vertices","","Adds a double-sided quad with the specified vertices.",1,null],[11,"is_closed","","Returns whether this window is closed or not.",1,null],[11,"set_light","","Sets the light mode. Only one light is supported.",1,null],[11,"new_hidden","","Opens a window, hide it then calls a user-defined procedure.",1,{"inputs":[{"name":"str"}],"output":{"name":"window"}}],[11,"new","","Opens a window then calls a user-defined procedure.",1,{"inputs":[{"name":"str"}],"output":{"name":"window"}}],[11,"new_with_size","","Opens a window with a custom size then calls a user-defined procedure.",1,{"inputs":[{"name":"str"},{"name":"u32"},{"name":"u32"}],"output":{"name":"window"}}],[11,"scene","","Reference to the scene associated with this window.",1,null],[11,"scene_mut","","Mutable reference to the scene associated with this window.",1,null],[11,"snap","","Read the pixels currently displayed to the screen.",1,null],[11,"snap_rect","","Read a section of pixels from the screen",1,null],[11,"snap_image","","Get the current screen as an image",1,null],[11,"events","","Gets the events manager that gives access to an event iterator.",1,null],[11,"render","","Renders the scene using the default camera.",1,null],[11,"render_with_effect","","Render using a specific post processing effect.",1,null],[11,"render_with_camera","","Render using a specific camera.",1,null],[11,"render_with_camera_and_effect","","Render using a specific camera and post processing effect.",1,null],[11,"render_with","","Draws the scene with the given camera and post-processing effect.",1,null],[11,"drop","","",0,null],[11,"next","","",2,null],[11,"new","","Creates a new event manager.",3,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"eventmanager"}}],[11,"iter","","Gets an iterator to the glfw events already collected.",3,null],[0,"scene","kiss3d","Everything related to the scene graph.",null,null],[3,"SceneNode","kiss3d::scene","A node of the scene graph.",null,null],[3,"SceneNodeData","","The datas contained by a `SceneNode`.",null,null],[3,"Object","","A 3d objects on the scene.",null,null],[3,"ObjectData","","Set of data identifying a scene node.",null,null],[11,"texture","","The texture of this object.",4,null],[11,"color","","The color of this object.",4,null],[11,"lines_width","","The width of the lines draw for this object.",4,null],[11,"points_size","","The size of the points draw for this object.",4,null],[11,"surface_rendering_active","","Whether this object has its surface rendered or not.",4,null],[11,"backface_culling_enabled","","Whether this object uses backface culling or not.",4,null],[11,"user_data","","An user-defined data.",4,null],[11,"data","","Gets the data of this object.",5,null],[11,"data_mut","","Gets the data of this object.",5,null],[11,"enable_backface_culling","","Enables or disables backface culling for this object.",5,null],[11,"set_user_data","","Attaches user-defined data to this object.",5,null],[11,"material","","Gets the material of this object.",5,null],[11,"set_material","","Sets the material of this object.",5,null],[11,"set_lines_width","","Sets the width of the lines drawn for this object.",5,null],[11,"lines_width","","Returns the width of the lines drawn for this object.",5,null],[11,"set_points_size","","Sets the size of the points drawn for this object.",5,null],[11,"points_size","","Returns the size of the points drawn for this object.",5,null],[11,"set_surface_rendering_activation","","Activate or deactivate the rendering of this object surface.",5,null],[11,"surface_rendering_activation","","Activate or deactivate the rendering of this object surface.",5,null],[11,"mesh","","This object&#39;s mesh.",5,null],[11,"modify_vertices","","Mutably access the object&#39;s vertices.",5,null],[11,"read_vertices","","Access the object&#39;s vertices.",5,null],[11,"recompute_normals","","Recomputes the normals of this object&#39;s mesh.",5,null],[11,"modify_normals","","Mutably access the object&#39;s normals.",5,null],[11,"read_normals","","Access the object&#39;s normals.",5,null],[11,"modify_faces","","Mutably access the object&#39;s faces.",5,null],[11,"read_faces","","Access the object&#39;s faces.",5,null],[11,"modify_uvs","","Mutably access the object&#39;s texture coordinates.",5,null],[11,"read_uvs","","Access the object&#39;s texture coordinates.",5,null],[11,"set_color","","Sets the color of the object.",5,null],[11,"set_texture_from_file","","Sets the texture of the object.",5,null],[11,"set_texture_with_name","","Sets the texture of the object.",5,null],[11,"set_texture","","Sets the texture of the object.",5,null],[11,"clone","","",6,null],[11,"has_object","","Whether this node contains an `Object`.",7,null],[11,"is_root","","Whether this node has no parent.",7,null],[11,"render","","Render the scene graph rooted by this node.",7,null],[11,"object","","A reference to the object possibly contained by this node.",7,null],[11,"object_mut","","A mutable reference to the object possibly contained by this node.",7,null],[11,"get_object","","A reference to the object possibly contained by this node.",7,null],[11,"get_object_mut","","A mutable reference to the object possibly contained by this node.",7,null],[11,"set_material","","Sets the material of the objects contained by this node and its children.",7,null],[11,"set_material_with_name","","Sets the material of the objects contained by this node and its children.",7,null],[11,"set_lines_width","","Sets the width of the lines drawn for the objects contained by this node and its children.",7,null],[11,"set_points_size","","Sets the size of the points drawn for the objects contained by this node and its children.",7,null],[11,"set_surface_rendering_activation","","Activates or deactivates the rendering of the surfaces of the objects contained by this node and its\nchildren.",7,null],[11,"enable_backface_culling","","Activates or deactivates backface culling for the objects contained by this node and its\nchildren.",7,null],[11,"modify_vertices","","Mutably accesses the vertices of the objects contained by this node and its children.",7,null],[11,"read_vertices","","Accesses the vertices of the objects contained by this node and its children.",7,null],[11,"recompute_normals","","Recomputes the normals of the meshes of the objects contained by this node and its\nchildren.",7,null],[11,"modify_normals","","Mutably accesses the normals of the objects contained by this node and its children.",7,null],[11,"read_normals","","Accesses the normals of the objects contained by this node and its children.",7,null],[11,"modify_faces","","Mutably accesses the faces of the objects contained by this node and its children.",7,null],[11,"read_faces","","Accesses the faces of the objects contained by this node and its children.",7,null],[11,"modify_uvs","","Mutably accesses the texture coordinates of the objects contained by this node and its\nchildren.",7,null],[11,"read_uvs","","Accesses the texture coordinates of the objects contained by this node and its children.",7,null],[11,"is_visible","","Get the visibility status of node.",7,null],[11,"set_visible","","Sets the visibility of this node.",7,null],[11,"set_color","","Sets the color of the objects contained by this node and its children.",7,null],[11,"set_texture_from_file","","Sets the texture of the objects contained by this node and its children.",7,null],[11,"set_texture_with_name","","Sets the texture of the objects contained by this node and its children.",7,null],[11,"set_texture","","Sets the texture of the objects contained by this node and its children.",7,null],[11,"apply_to_objects_mut","","Applies a closure to each object contained by this node and its children.",7,null],[11,"apply_to_objects","","Applies a closure to each object contained by this node and its children.",7,null],[11,"set_local_scale","","Sets the local scaling factors of the object.",7,null],[11,"local_scale","","Returns the scaling factors of the object.",7,null],[11,"reorient","","Move and orient the object such that it is placed at the point `eye` and have its `z` axis\noriented toward `at`.",7,null],[11,"local_transformation","","This node local transformation.",7,null],[11,"inverse_local_transformation","","Inverse of this node local transformation.",7,null],[11,"world_transformation","","This node world transformation.",7,null],[11,"inverse_world_transformation","","The inverse of this node world transformation.",7,null],[11,"append_transformation","","Appends a transformation to this node local transformation.",7,null],[11,"prepend_to_local_transformation","","Prepends a transformation to this node local transformation.",7,null],[11,"set_local_transformation","","Set this node local transformation.",7,null],[11,"local_translation","","This node local translation.",7,null],[11,"inverse_local_translation","","The inverse of this node local translation.",7,null],[11,"append_translation","","Appends a translation to this node local transformation.",7,null],[11,"prepend_to_local_translation","","Prepends a translation to this node local transformation.",7,null],[11,"set_local_translation","","Sets the local translation of this node.",7,null],[11,"local_rotation","","This node local rotation.",7,null],[11,"inverse_local_rotation","","The inverse of this node local rotation.",7,null],[11,"append_rotation","","Appends a rotation to this node local transformation.",7,null],[11,"append_rotation_wrt_center","","Appends a rotation to this node local transformation.",7,null],[11,"prepend_to_local_rotation","","Prepends a rotation to this node local transformation.",7,null],[11,"set_local_rotation","","Sets the local rotation of this node.",7,null],[11,"new","","Creates a new scene node that is not rooted.",6,{"inputs":[{"name":"vector3"},{"name":"isometry3"},{"name":"option"}],"output":{"name":"scenenode"}}],[11,"new_empty","","Creates a new empty, not rooted, node with identity transformations.",6,{"inputs":[],"output":{"name":"scenenode"}}],[11,"unlink","","Removes this node from its parent.",6,null],[11,"data","","The data of this scene node.",6,null],[11,"data_mut","","The data of this scene node.",6,null],[11,"add_group","","Adds a node without object to this node children.",6,null],[11,"add_child","","Adds a node as a child of `parent`.",6,null],[11,"add_object","","Adds a node containing an object to this node children.",6,null],[11,"add_cube","","Adds a cube as a children of this node. The cube is initially axis-aligned and centered\nat (0, 0, 0).",6,null],[11,"add_sphere","","Adds a sphere as a children of this node. The sphere is initially centered at (0, 0, 0).",6,null],[11,"add_cone","","Adds a cone to the scene. The cone is initially centered at (0, 0, 0) and points toward the\npositive `y` axis.",6,null],[11,"add_cylinder","","Adds a cylinder to this node children. The cylinder is initially centered at (0, 0, 0)\nand has its principal axis aligned with the `y` axis.",6,null],[11,"add_capsule","","Adds a capsule to this node children. The capsule is initially centered at (0, 0, 0) and\nhas its principal axis aligned with the `y` axis.",6,null],[11,"add_quad","","Adds a double-sided quad to this node children. The quad is initially centered at (0, 0,\n0). The quad itself is composed of a user-defined number of triangles regularly spaced on a\ngrid. This is the main way to draw height maps.",6,null],[11,"add_quad_with_vertices","","Adds a double-sided quad with the specified vertices.",6,null],[11,"add_geom_with_name","","Creates and adds a new object using the geometry registered as `geometry_name`.",6,null],[11,"add_mesh","","Creates and adds a new object to this node children using a mesh.",6,null],[11,"add_trimesh","","Creates and adds a new object using a mesh descriptor.",6,null],[11,"add_obj","","Creates and adds multiple nodes created from an obj file.",6,null],[11,"apply_to_scene_nodes_mut","","Applies a closure to each object contained by this node and its children.",6,null],[11,"apply_to_scene_nodes","","Applies a closure to each object contained by this node and its children.",6,null],[11,"render","","Render the scene graph rooted by this node.",6,null],[11,"set_material","","Sets the material of the objects contained by this node and its children.",6,null],[11,"set_material_with_name","","Sets the material of the objects contained by this node and its children.",6,null],[11,"set_lines_width","","Sets the width of the lines drawn for the objects contained by this node and its children.",6,null],[11,"set_points_size","","Sets the size of the points drawn for the objects contained by this node and its children.",6,null],[11,"set_surface_rendering_activation","","Activates or deactivates the rendering of the surfaces of the objects contained by this node and its\nchildren.",6,null],[11,"enable_backface_culling","","Activates or deactivates backface culling for the objects contained by this node and its\nchildren.",6,null],[11,"modify_vertices","","Mutably accesses the vertices of the objects contained by this node and its children.",6,null],[11,"read_vertices","","Accesses the vertices of the objects contained by this node and its children.",6,null],[11,"recompute_normals","","Recomputes the normals of the meshes of the objects contained by this node and its\nchildren.",6,null],[11,"modify_normals","","Mutably accesses the normals of the objects contained by this node and its children.",6,null],[11,"read_normals","","Accesses the normals of the objects contained by this node and its children.",6,null],[11,"modify_faces","","Mutably accesses the faces of the objects contained by this node and its children.",6,null],[11,"read_faces","","Accesses the faces of the objects contained by this node and its children.",6,null],[11,"modify_uvs","","Mutably accesses the texture coordinates of the objects contained by this node and its\nchildren.",6,null],[11,"read_uvs","","Accesses the texture coordinates of the objects contained by this node and its children.",6,null],[11,"is_visible","","Get the visibility status of node.",6,null],[11,"set_visible","","Sets the visibility of this node.",6,null],[11,"set_color","","Sets the color of the objects contained by this node and its children.",6,null],[11,"set_texture_from_file","","Sets the texture of the objects contained by this node and its children.",6,null],[11,"set_texture_with_name","","Sets the texture of the objects contained by this node and its children.",6,null],[11,"set_texture","","Sets the texture of the objects contained by this node and its children.",6,null],[11,"set_local_scale","","Sets the local scaling factors of the object.",6,null],[11,"reorient","","Move and orient the object such that it is placed at the point `eye` and have its `x` axis\noriented toward `at`.",6,null],[11,"append_transformation","","Appends a transformation to this node local transformation.",6,null],[11,"prepend_to_local_transformation","","Prepends a transformation to this node local transformation.",6,null],[11,"set_local_transformation","","Set this node local transformation.",6,null],[11,"append_translation","","Appends a translation to this node local transformation.",6,null],[11,"prepend_to_local_translation","","Prepends a translation to this node local transformation.",6,null],[11,"set_local_translation","","Sets the local translation of this node.",6,null],[11,"append_rotation","","Appends a rotation to this node local transformation.",6,null],[11,"append_rotation_wrt_center","","Appends a rotation to this node local transformation.",6,null],[11,"prepend_to_local_rotation","","Prepends a rotation to this node local transformation.",6,null],[11,"set_local_rotation","","Sets the local rotation of this node.",6,null],[0,"camera","kiss3d","Camera trait with some common implementations.",null,null],[3,"ArcBall","kiss3d::camera","Arc-ball camera mode.",null,null],[3,"FirstPerson","","First-person camera mode.",null,null],[3,"FirstPersonStereo","","First-person camera mode.",null,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"new","","Create a new arc-ball camera.",8,{"inputs":[{"name":"point3"},{"name":"point3"}],"output":{"name":"arcball"}}],[11,"new_with_frustrum","","Creates a new arc ball camera with default sensitivity values.",8,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"point3"},{"name":"point3"}],"output":{"name":"arcball"}}],[11,"at","","The point the arc-ball is looking at.",8,null],[11,"set_at","","Get a mutable reference to the point the camera is looking at.",8,null],[11,"yaw","","The arc-ball camera `yaw`.",8,null],[11,"set_yaw","","Sets the camera `yaw`. Change this to modify the rotation along the `up` axis.",8,null],[11,"pitch","","The arc-ball camera `pitch`.",8,null],[11,"set_pitch","","Sets the camera `pitch`.",8,null],[11,"dist","","The distance from the camera position to its view point.",8,null],[11,"set_dist","","Move the camera such that it is at a given distance from the view point.",8,null],[11,"look_at","","Move and orient the camera such that it looks at a specific point.",8,null],[11,"rotate_button","","The button used to rotate the ArcBall camera.",8,null],[11,"rebind_rotate_button","","Set the button used to rotate the ArcBall camera.\nUse None to disable rotation.",8,null],[11,"drag_button","","The button used to drag the ArcBall camera.",8,null],[11,"rebind_drag_button","","Set the button used to drag the ArcBall camera.\nUse None to disable dragging.",8,null],[11,"reset_key","","The key used to reset the ArcBall camera.",8,null],[11,"rebind_reset_key","","Set the key used to reset the ArcBall camera.\nUse None to disable reset.",8,null],[11,"clip_planes","","",8,null],[11,"view_transform","","",8,null],[11,"eye","","",8,null],[11,"handle_event","","",8,null],[11,"transformation","","",8,null],[11,"inverse_transformation","","",8,null],[11,"update","","",8,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"new","","Creates a first person camera with default sensitivity values.",9,{"inputs":[{"name":"point3"},{"name":"point3"}],"output":{"name":"firstperson"}}],[11,"new_with_frustrum","","Creates a new first person camera with default sensitivity values.",9,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"point3"},{"name":"point3"}],"output":{"name":"firstperson"}}],[11,"set_move_step","","Sets the translational increment per arrow press.",9,null],[11,"set_pitch_step","","Sets the pitch increment per mouse movement.",9,null],[11,"set_yaw_step","","Sets the yaw increment per mouse movement.",9,null],[11,"move_step","","Gets the translational increment per arrow press.",9,null],[11,"pitch_step","","Gets the pitch increment per mouse movement.",9,null],[11,"yaw_step","","Gets the yaw  increment per mouse movement.",9,null],[11,"look_at","","Changes the orientation and position of the camera to look at the specified point.",9,null],[11,"at","","The point the camera is looking at.",9,null],[11,"rotate_button","","The button used to rotate the FirstPerson camera.",9,null],[11,"rebind_rotate_button","","Set the button used to rotate the FirstPerson camera.\nUse None to disable rotation.",9,null],[11,"drag_button","","The button used to drag the FirstPerson camera.",9,null],[11,"rebind_drag_button","","Set the button used to drag the FirstPerson camera.\nUse None to disable dragging.",9,null],[11,"up_key","","The movement button for up.",9,null],[11,"down_key","","The movement button for down.",9,null],[11,"left_key","","The movement button for left.",9,null],[11,"right_key","","The movement button for right.",9,null],[11,"rebind_up_key","","Set the movement button for up.\nUse None to disable movement in this direction.",9,null],[11,"rebind_down_key","","Set the movement button for down.\nUse None to disable movement in this direction.",9,null],[11,"rebind_left_key","","Set the movement button for left.\nUse None to disable movement in this direction.",9,null],[11,"rebind_right_key","","Set the movement button for right.\nUse None to disable movement in this direction.",9,null],[11,"unbind_movement_keys","","Disable the movement buttons for up, down, left and right.",9,null],[11,"eye_dir","","The direction this camera is looking at.",9,null],[11,"move_dir","","The direction this camera is being moved by the keyboard keys for a given set of key states.",9,null],[11,"translate_mut","","Translates in-place this camera by `t`.",9,null],[11,"translate","","Translates this camera by `t`.",9,null],[11,"clip_planes","","",9,null],[11,"view_transform","","The camera view transformation (i-e transformation without projection).",9,null],[11,"handle_event","","",9,null],[11,"eye","","",9,null],[11,"transformation","","",9,null],[11,"inverse_transformation","","",9,null],[11,"update","","",9,null],[11,"fmt","","",10,null],[11,"new","","Creates a first person camera with default sensitivity values.",10,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"f32"}],"output":{"name":"firstpersonstereo"}}],[11,"new_with_frustrum","","Creates a new first person camera with default sensitivity values.",10,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"point3"},{"name":"point3"},{"name":"f32"}],"output":{"name":"firstpersonstereo"}}],[11,"look_at","","Changes the orientation and position of the camera to look at the specified point.",10,null],[11,"at","","The point the camera is looking at.",10,null],[11,"ipd","","return Inter Pupilary Distance",10,null],[11,"set_ipd","","change Inter Pupilary Distance",10,null],[11,"clip_planes","","",10,null],[11,"view_transform","","The imaginary middle eye camera view transformation (i-e transformation without projection).",10,null],[11,"handle_event","","",10,null],[11,"eye","","",10,null],[11,"transformation","","",10,null],[11,"inverse_transformation","","",10,null],[11,"update","","",10,null],[11,"upload","","",10,null],[11,"num_passes","","",10,null],[11,"start_pass","","",10,null],[11,"render_complete","","",10,null],[8,"Camera","","Trait every camera must implement.",null,null],[10,"handle_event","","Handle a mouse event.",11,null],[10,"eye","","The camera position.",11,null],[10,"view_transform","","The camera view transform.",11,null],[10,"transformation","","The transformation applied by the camera to transform a point in world coordinates to\na point in device coordinates.",11,null],[10,"inverse_transformation","","The transformation applied by the camera to transform point in device coordinates to a\npoint in world coordinate.",11,null],[10,"clip_planes","","The clipping planes, aka. (`znear`, `zfar`).",11,null],[10,"update","","Update the camera. This is called once at the beginning of the render loop.",11,null],[11,"upload","","Upload the camera transformation to the gpu. This can be called multiple times on the\nrender loop.",11,null],[11,"num_passes","","The number of passes required by this camera.",11,null],[11,"start_pass","","Indicates that a pass will begin.",11,null],[11,"render_complete","","Indicates that the scene has been rendered and the post-processing is being run.",11,null],[11,"project","","Converts a 3d point to 2d screen coordinates, assuming the screen has the size `size`.",11,null],[11,"unproject","","Converts a point in 2d screen coordinates to a ray (a 3d position and a direction).",11,null],[0,"light","kiss3d","Lights.",null,null],[4,"Light","kiss3d::light","The light configuration.",null,null],[13,"Absolute","","A light with an absolute world position.",12,null],[13,"StickToCamera","","A light superimposed with the camera position.",12,null],[11,"clone","","",12,null],[0,"loader","kiss3d","File loading.",null,null],[0,"obj","kiss3d::loader","Simplistic obj loader.",null,null],[5,"split_words","kiss3d::loader::obj","Returns an iterator through all the words of a string.",null,{"inputs":[{"name":"str"}],"output":{"name":"words"}}],[5,"parse_file","","Parses an obj file.",null,{"inputs":[{"name":"path"},{"name":"path"},{"name":"str"}],"output":{"name":"ioresult"}}],[5,"parse","","Parses a string representing an obj file.",null,{"inputs":[{"name":"str"},{"name":"path"},{"name":"str"}],"output":{"name":"vec"}}],[6,"Coord","","The type of vertex coordinates.",null,null],[6,"Normal","","The type of normals.",null,null],[6,"UV","","The type of texture coordinates.",null,null],[6,"Words","","Iterator through words.",null,null],[0,"mtl","kiss3d::loader","Simplistic mtl loader.",null,null],[3,"MtlMaterial","kiss3d::loader::mtl","Material informations read from a `.mtl` file.",null,null],[12,"name","","Name of the material.",13,null],[12,"ambiant_texture","","Path to the ambiant texture.",13,null],[12,"diffuse_texture","","Path to the diffuse texture.",13,null],[12,"specular_texture","","Path to the specular texture.",13,null],[12,"opacity_map","","Path to the opacity map.",13,null],[12,"ambiant","","The ambiant color.",13,null],[12,"diffuse","","The diffuse color.",13,null],[12,"specular","","The specular color.",13,null],[12,"shininess","","The shininess.",13,null],[12,"alpha","","Alpha blending.",13,null],[5,"parse_file","","Parses a mtl file.",null,{"inputs":[{"name":"path"}],"output":{"name":"ioresult"}}],[5,"parse","","Parses a string representing a mtl file.",null,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"clone","","",13,null],[11,"new_default","","Creates a new mtl material with a name and default values.",13,{"inputs":[{"name":"string"}],"output":{"name":"mtlmaterial"}}],[11,"new","","Creates a new mtl material.",13,{"inputs":[{"name":"string"},{"name":"f32"},{"name":"f32"},{"name":"vector3"},{"name":"vector3"},{"name":"vector3"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"mtlmaterial"}}],[0,"line_renderer","kiss3d","A batched line renderer.",null,null],[3,"LineRenderer","kiss3d::line_renderer","Structure which manages the display of short-living lines.",null,null],[7,"LINES_VERTEX_SRC","","Vertex shader used by the material to display line.",null,null],[7,"LINES_FRAGMENT_SRC","","Fragment shader used by the material to display line.",null,null],[11,"new","","Creates a new lines manager.",14,{"inputs":[],"output":{"name":"linerenderer"}}],[11,"needs_rendering","","Indicates whether some lines have to be drawn.",14,null],[11,"draw_line","","Adds a line to be drawn during the next frame. Lines are not persistent between frames.\nThis method must be called for each line to draw, and at each update loop iteration.",14,null],[11,"render","","Actually draws the lines.",14,null],[0,"point_renderer","kiss3d","A batched point renderer.",null,null],[3,"PointRenderer","kiss3d::point_renderer","Structure which manages the display of short-living points.",null,null],[7,"POINTS_VERTEX_SRC","","Vertex shader used by the material to display line.",null,null],[7,"POINTS_FRAGMENT_SRC","","Fragment shader used by the material to display line.",null,null],[11,"new","","Creates a new points manager.",15,{"inputs":[],"output":{"name":"pointrenderer"}}],[11,"needs_rendering","","Indicates whether some points have to be drawn.",15,null],[11,"draw_point","","Adds a line to be drawn during the next frame. Lines are not persistent between frames.\nThis method must be called for each line to draw, and at each update loop iteration.",15,null],[11,"render","","Actually draws the points.",15,null],[0,"builtin","kiss3d","Built-in geometries, shaders and effects.",null,null],[3,"ObjectMaterial","kiss3d::builtin","The default material used to draw objects.",null,null],[3,"NormalsMaterial","","A material that draws normals of an object.",null,null],[3,"UvsMaterial","","A material that draws normals of an object.",null,null],[11,"new","","Creates a new `ObjectMaterial`.",16,{"inputs":[],"output":{"name":"objectmaterial"}}],[11,"render","","",16,null],[11,"new","","Creates a new NormalsMaterial.",17,{"inputs":[],"output":{"name":"normalsmaterial"}}],[11,"render","","",17,null],[11,"new","","Creates a new UvsMaterial.",18,{"inputs":[],"output":{"name":"uvsmaterial"}}],[11,"render","","",18,null],[7,"OBJECT_VERTEX_SRC","","Vertex shader of the default object material.",null,null],[7,"OBJECT_FRAGMENT_SRC","","Fragment shader of the default object material.",null,null],[7,"NORMAL_VERTEX_SRC","","A vertex shader for coloring each point of an object depending on its normal.",null,null],[7,"NORMAL_FRAGMENT_SRC","","A fragment shader for coloring each point of an object depending on its normal.",null,null],[7,"UVS_VERTEX_SRC","","A vertex shader for coloring each point of an object depending on its texture coordinates.",null,null],[7,"UVS_FRAGMENT_SRC","","A fragment shader for coloring each point of an object depending on its texture coordinates.",null,null],[0,"post_processing","kiss3d","Post-processing effects.",null,null],[3,"Waves","kiss3d::post_processing","An useless post-processing effect mainly to test that everything works correctly.",null,null],[3,"Grayscales","","Post processing effect which turns everything in gray scales.",null,null],[3,"SobelEdgeHighlight","","Post processing effect which turns everything in grayscales.",null,null],[3,"OculusStereo","","An post-processing effect to support the oculus rift.",null,null],[0,"post_processing_effect","","Trait implemented by every post-processing effect.",null,null],[8,"PostProcessingEffect","kiss3d::post_processing::post_processing_effect","Trait of post processing effect.",null,null],[10,"update","","Updates the post processing effect.",19,null],[10,"draw","","Render the effect.",19,null],[11,"new","kiss3d::post_processing","Creates a new Waves post processing effect.",20,{"inputs":[],"output":{"name":"waves"}}],[11,"update","","",20,null],[11,"draw","","",20,null],[11,"new","","Creates a new `Grayscales` post processing effect.",21,{"inputs":[],"output":{"name":"grayscales"}}],[11,"update","","",21,null],[11,"draw","","",21,null],[11,"new","","Creates a new SobelEdgeHighlight post processing effect.",22,{"inputs":[{"name":"f32"}],"output":{"name":"sobeledgehighlight"}}],[11,"update","","",22,null],[11,"draw","","",22,null],[11,"new","","Creates a new OculusStereo post processing effect.",23,{"inputs":[],"output":{"name":"oculusstereo"}}],[11,"update","","",23,null],[11,"draw","","",23,null],[0,"resource","kiss3d","GPU resource managers",null,null],[3,"FramebufferManager","kiss3d::resource","A framebuffer manager. It is a simple to to switch between an off-screen framebuffer and the\ndefault (window) framebuffer.",null,null],[3,"OffscreenBuffers","","OpenGL identifiers to an off-screen buffer.",null,null],[3,"Texture","","A gpu texture. It contains the texture id provided by opengl and is automatically released.",null,null],[3,"TextureManager","","The texture manager.",null,null],[3,"MaterialManager","","The material manager.",null,null],[3,"MeshManager","","The mesh manager.",null,null],[3,"Shader","","Structure encapsulating a shader program.",null,null],[3,"ShaderAttribute","","Structure encapsulating an attribute.",null,null],[3,"ShaderUniform","","Structure encapsulating an uniform variable.",null,null],[3,"GPUVec","","A vector of elements that can be loaded to the GPU, on the RAM, or both.",null,null],[3,"Mesh","","Aggregation of vertices, indices, normals and texture coordinates.",null,null],[4,"RenderTarget","","The target to every rendering call.",null,null],[13,"Screen","","The screen (main framebuffer).",24,null],[13,"Offscreen","","An off-screen buffer.",24,null],[4,"BufferType","","Type of gpu buffer.",null,null],[13,"Array","","An array buffer bindable to a gl::ARRAY_BUFFER.",25,null],[13,"ElementArray","","An array buffer bindable to a gl::ELEMENT_ARRAY_BUFFER.",25,null],[4,"AllocationType","","Allocation type of gpu buffers.",null,null],[13,"StaticDraw","","STATIC_DRAW allocation type.",26,null],[13,"DynamicDraw","","DYNAMIC_DRAW allocation type.",26,null],[13,"StreamDraw","","STREAM_DRAW allocation type.",26,null],[11,"texture_id","","Returns an opengl handle to the off-screen texture buffer.",24,null],[11,"depth_id","","Returns an opengl handle to the off-screen depth buffer.",24,null],[11,"resize","","Resizes this render target.",24,null],[11,"new","","Creates a new framebuffer manager.",27,{"inputs":[],"output":{"name":"framebuffermanager"}}],[11,"new_render_target","","Creates a new render target. A render target is the combination of a color buffer and a\ndepth buffer.",27,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"rendertarget"}}],[11,"screen","","Returns the render target associated with the screen.",27,{"inputs":[],"output":{"name":"rendertarget"}}],[11,"select","","Selects a specific render target",27,null],[11,"drop","","",27,null],[11,"drop","","",28,null],[11,"new","","Allocates a new texture on the gpu. The texture is not configured.",29,{"inputs":[],"output":{"name":"rc"}}],[11,"id","","The opengl-provided texture id.",29,null],[11,"drop","","",29,null],[11,"new","","Creates a new texture manager.",30,{"inputs":[],"output":{"name":"texturemanager"}}],[11,"get_global_manager","","Mutably applies a function to the texture manager.",30,{"inputs":[{"name":"f"}],"output":{"name":"t"}}],[11,"get_default","","Gets the default, completely white, texture.",30,null],[11,"get","","Get a texture with the specified name. Returns `None` if the texture is not registered.",30,null],[11,"add_empty","","Allocates a new texture that is not yet configured.",30,null],[11,"add","","Allocates a new texture read from a file. If a texture with same name exists, nothing is\ncreated and the old texture is returned.",30,null],[11,"new","","Creates a new mesh manager.",31,{"inputs":[],"output":{"name":"meshmanager"}}],[11,"get_global_manager","","Mutably applies a function to the mesh manager.",31,{"inputs":[{"name":"f"}],"output":{"name":"t"}}],[11,"get","","Get a mesh with the specified name. Returns `None` if the mesh is not registered.",31,null],[11,"add","","Adds a mesh with the specified name to this cache.",31,null],[11,"add_trimesh","","Adds a mesh with the specified mesh descriptor and name.",31,null],[11,"remove","","Removes a mesh from this cache.",31,null],[11,"load_obj","","Loads the meshes described by an obj file.",31,{"inputs":[{"name":"path"},{"name":"path"},{"name":"str"}],"output":{"name":"ioresult"}}],[11,"new","","Creates a new material manager.",32,{"inputs":[],"output":{"name":"materialmanager"}}],[11,"get_global_manager","","Mutably applies a function to the material manager.",32,{"inputs":[{"name":"f"}],"output":{"name":"t"}}],[11,"get_default","","Gets the default material to draw objects.",32,null],[11,"get","","Get a material with the specified name. Returns `None` if the material is not registered.",32,null],[11,"add","","Adds a material with the specified name to this cache.",32,null],[11,"remove","","Removes a mesh from this cache.",32,null],[0,"material","","Trait implemented by materials.",null,null],[8,"Material","kiss3d::resource::material","Trait implemented by materials.",null,null],[10,"render","","Renders an object using this material.",33,null],[11,"new","kiss3d::resource","Creates a new `GPUVec` that is not yet uploaded to the GPU.",34,{"inputs":[{"name":"vec"},{"name":"buffertype"},{"name":"allocationtype"}],"output":{"name":"gpuvec"}}],[11,"len","","The length of this vector.",34,null],[11,"data_mut","","Mutably accesses the vector if it is available on RAM.",34,null],[11,"data","","Immutably accesses the vector if it is available on RAM.",34,null],[11,"is_on_gpu","","Returns `true` if this vector is already uploaded to the GPU.",34,null],[11,"trash","","Returns `true` if the cpu data and gpu data are out of sync.",34,null],[11,"is_on_ram","","Returns `true` if this vector is available on RAM.",34,null],[11,"load_to_gpu","","Loads the vector from the RAM to the GPU.",34,null],[11,"bind","","Binds this vector to the appropriate gpu array.",34,null],[11,"unbind","","Unbind this vector to the corresponding gpu buffer.",34,null],[11,"load_to_ram","","Loads the vector from the GPU to the RAM.",34,null],[11,"unload_from_gpu","","Unloads this resource from the GPU.",34,null],[11,"unload_from_ram","","Removes this resource from the RAM.",34,null],[11,"to_owned","","Returns this vector as an owned vector if it is available on RAM.",34,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"new","","Creates a new mesh.",35,{"inputs":[{"name":"vec"},{"name":"vec"},{"name":"option"},{"name":"option"},{"name":"bool"}],"output":{"name":"mesh"}}],[11,"from_trimesh","","Creates a new mesh from a mesh descr.",35,{"inputs":[{"name":"trimesh3"},{"name":"bool"}],"output":{"name":"mesh"}}],[11,"to_trimesh","","Creates a triangle mesh from this mesh.",35,null],[11,"new_with_gpu_vectors","","Creates a new mesh. Arguments set to `None` are automatically computed.",35,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"}],"output":{"name":"mesh"}}],[11,"bind_coords","","Binds this mesh vertex coordinates buffer to a vertex attribute.",35,null],[11,"bind_normals","","Binds this mesh vertex normals buffer to a vertex attribute.",35,null],[11,"bind_uvs","","Binds this mesh vertex uvs buffer to a vertex attribute.",35,null],[11,"bind_faces","","Binds this mesh vertex uvs buffer to a vertex attribute.",35,null],[11,"bind","","Binds this mesh buffers to vertex attributes.",35,null],[11,"unbind","","Unbind this mesh buffers to vertex attributes.",35,null],[11,"num_pts","","Number of points needed to draw this mesh.",35,null],[11,"recompute_normals","","Recompute this mesh normals.",35,null],[11,"faces","","This mesh faces.",35,null],[11,"normals","","This mesh normals.",35,null],[11,"coords","","This mesh vertex coordinates.",35,null],[11,"uvs","","This mesh texture coordinates.",35,null],[11,"compute_normals_array","","Computes normals from a set of faces.",35,null],[11,"compute_normals","","Computes normals from a set of faces.",35,null],[11,"new","","Creates a new shader program from two files containing the vertex and fragment shader.",36,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"new_from_str","","Creates a new shader program from strings of the vertex and fragment shader.",36,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"shader"}}],[11,"get_uniform","","Gets a uniform variable from the shader program.",36,null],[11,"get_attrib","","Gets an attribute from the shader program.",36,null],[11,"use_program","","Make this program active.",36,null],[11,"drop","","",36,null],[11,"upload","","Upload a value to this variable.",37,null],[11,"disable","","Disable this attribute.",38,null],[11,"enable","","Enable this attribute.",38,null],[11,"bind","","Binds this attribute to a gpu vector.",38,null],[11,"bind_sub_buffer","","Binds this attribute to non contiguous parts of a gpu vector.",38,null],[8,"GLPrimitive","","Trait implemented by structures that can be uploaded to a uniform or contained by a gpu array.",null,null],[10,"gl_type","","The opengl primitive type of this structure content.",39,{"inputs":[{"name":"option"}],"output":{"name":"gluint"}}],[10,"size","","The number of elements of type `self.gl_type()` this structure stores.",39,{"inputs":[{"name":"option"}],"output":{"name":"gluint"}}],[10,"upload","","Uploads the element to a gpu location.",39,null],[0,"text","kiss3d","Text rendering.",null,null],[3,"Glyph","kiss3d::text","A ttf glyph.",null,null],[3,"Font","","A ttf font.",null,null],[3,"TextRenderer","","A ttf text renderer.",null,null],[11,"new","","Creates a new empty glyph.",40,{"inputs":[{"name":"vector2"},{"name":"vector2"},{"name":"vector2"},{"name":"vector2"},{"name":"vec"}],"output":{"name":"glyph"}}],[11,"from_memory","","Loads a new ttf font from the memory.",41,null],[11,"new","","Loads a new ttf font from a file.",41,{"inputs":[{"name":"path"},{"name":"i32"}],"output":{"name":"rc"}}],[11,"do_new","","Loads a new ttf font from a file.",41,null],[11,"texture_atlas","","The opengl id to the texture atlas of this font.",41,null],[11,"atlas_dimensions","","The dimensions of the texture atlas of this font.",41,null],[11,"glyphs","","The glyphs of the this font.",41,null],[11,"height","","The height of this font.",41,null],[11,"drop","","",41,null],[11,"new","","Creates a new text renderer with `font` as the default font.",42,{"inputs":[],"output":{"name":"textrenderer"}}],[11,"draw_text","","Adds a piece of text to be drawn during the next frame. The text is not persistent between\nframes. This method must be called for each text to draw, and at each update loop\niteration.",42,null],[11,"render","","Actually draws the text.",42,null],[11,"upload","kiss3d::camera","Upload the camera transformation to the gpu. This can be called multiple times on the\nrender loop.",11,null],[11,"num_passes","","The number of passes required by this camera.",11,null],[11,"start_pass","","Indicates that a pass will begin.",11,null],[11,"render_complete","","Indicates that the scene has been rendered and the post-processing is being run.",11,null],[11,"project","","Converts a 3d point to 2d screen coordinates, assuming the screen has the size `size`.",11,null],[11,"unproject","","Converts a point in 2d screen coordinates to a ray (a 3d position and a direction).",11,null]],"paths":[[3,"Event"],[3,"Window"],[3,"Events"],[3,"EventManager"],[3,"ObjectData"],[3,"Object"],[3,"SceneNode"],[3,"SceneNodeData"],[3,"ArcBall"],[3,"FirstPerson"],[3,"FirstPersonStereo"],[8,"Camera"],[4,"Light"],[3,"MtlMaterial"],[3,"LineRenderer"],[3,"PointRenderer"],[3,"ObjectMaterial"],[3,"NormalsMaterial"],[3,"UvsMaterial"],[8,"PostProcessingEffect"],[3,"Waves"],[3,"Grayscales"],[3,"SobelEdgeHighlight"],[3,"OculusStereo"],[4,"RenderTarget"],[4,"BufferType"],[4,"AllocationType"],[3,"FramebufferManager"],[3,"OffscreenBuffers"],[3,"Texture"],[3,"TextureManager"],[3,"MeshManager"],[3,"MaterialManager"],[8,"Material"],[3,"GPUVec"],[3,"Mesh"],[3,"Shader"],[3,"ShaderUniform"],[3,"ShaderAttribute"],[8,"GLPrimitive"],[3,"Glyph"],[3,"Font"],[3,"TextRenderer"]]};
initSearch(searchIndex);
