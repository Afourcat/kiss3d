var searchIndex = {};
searchIndex['kiss3d'] = {"items":[[0,"","kiss3d","# Kiss3d"],[0,"window","","The window, and things to handle the rendering loop and events."],[1,"Window","kiss3d::window","Structure representing a window and a 3D scene."],[11,"events","","",0],[11,"glfw","","",0],[11,"window","","",0],[11,"max_ms_per_frame","","",0],[11,"scene","","",0],[11,"light_mode","","",0],[11,"background","","",0],[11,"line_renderer","","",0],[11,"point_renderer","","",0],[11,"text_renderer","","",0],[11,"framebuffer_manager","","",0],[11,"post_process_render_target","","",0],[11,"timer","","",0],[11,"curr_time","","",0],[1,"Event","","An event."],[11,"timestamp","","The event timestamp.",1],[11,"value","","The exact glfw event value. This can be modified to fool the other event handlers.",1],[11,"inhibited","","Set this to `true` to prevent the window or the camera from handling the event.",1],[11,"inhibitor","","",1],[1,"Events","","An iterator through events."],[11,"stream","","",2],[11,"inhibitor","","",2],[1,"EventManager","","A stand-alone object that provides an iterator though glfw events."],[11,"events","","",3],[11,"inhibitor","","",3],[1,"RenderFrames","","An iterator through render frames."],[11,"events","","",4],[11,"collector","","",4],[11,"window","","",4],[11,"camera","","",4],[1,"RenderFrame","","A frame that is going to be rendered."],[11,"events","","",5],[11,"collector","","",5],[11,"window","","",5],[11,"camera","","",5],[11,"post_processing","","",5],[11,"skip_draw","","",5],[11,"events_handled","","",5],[0,"scene","kiss3d","Everything related to the scene graph."],[1,"SceneNode","kiss3d::scene","A node of the scene graph."],[11,"data","","",6],[1,"SceneNodeData","","The datas contained by a `SceneNode`."],[11,"local_scale","","",7],[11,"local_transform","","",7],[11,"world_scale","","",7],[11,"world_transform","","",7],[11,"visible","","",7],[11,"up_to_date","","",7],[11,"children","","",7],[11,"object","","",7],[11,"parent","","",7],[1,"Object","","A 3d objects on the scene."],[11,"data","","",8],[11,"mesh","","",8],[1,"ObjectData","","Set of data identifying a scene node."],[11,"material","","",9],[11,"texture","","",9],[11,"color","","",9],[11,"wlines","","",9],[11,"wpoints","","",9],[11,"draw_surface","","",9],[11,"cull","","",9],[11,"user_data","","",9],[0,"camera","kiss3d","Camera trait with some common implementations."],[1,"ArcBall","kiss3d::camera","Arc-ball camera mode."],[11,"at","","The focus point.",10],[11,"yaw","","Yaw of the camera (rotation along the y axis).",10],[11,"pitch","","Pitch of the camera (rotation along the x axis).",10],[11,"dist","","Distance from the camera to the `at` focus point.",10],[11,"yaw_step","","Increment of the yaw per unit mouse movement. The default value is 0.005.",10],[11,"pitch_step","","Increment of the pitch per unit mouse movement. The default value is 0.005.",10],[11,"dist_step","","Increment of the distance per unit scrolling. The default value is 40.0.",10],[11,"fov","","",10],[11,"znear","","",10],[11,"zfar","","",10],[11,"projection","","",10],[11,"proj_view","","",10],[11,"inv_proj_view","","",10],[11,"last_cursor_pos","","",10],[1,"FirstPerson","","First-person camera mode."],[11,"eye","","",11],[11,"yaw","","",11],[11,"pitch","","",11],[11,"yaw_step","","",11],[11,"pitch_step","","",11],[11,"move_step","","",11],[11,"fov","","",11],[11,"znear","","",11],[11,"zfar","","",11],[11,"projection","","",11],[11,"proj_view","","",11],[11,"inv_proj_view","","",11],[11,"last_cursor_pos","","",11],[1,"FirstPersonStereo","","First-person camera mode."],[11,"eye","","The camera position",12],[11,"eye_left","","",12],[11,"eye_right","","",12],[11,"ipd","","Inter Pupilary Distance",12],[11,"yaw","","Yaw of the camera (rotation along the y axis).",12],[11,"pitch","","Pitch of the camera (rotation along the x axis).",12],[11,"yaw_step","","Increment of the yaw per unit mouse movement. The default value is 0.005.",12],[11,"pitch_step","","Increment of the pitch per unit mouse movement. The default value is 0.005.",12],[11,"move_step","","Increment of the translation per arrow press. The default value is 0.1.",12],[11,"fov","","Low level datas",12],[11,"znear","","",12],[11,"zfar","","",12],[11,"projection","","",12],[11,"proj_view","","",12],[11,"proj_view_left","","",12],[11,"proj_view_right","","",12],[11,"inv_proj_view","","",12],[11,"last_cursor_pos","","",12],[0,"light","kiss3d","Lights."],[2,"Light","kiss3d::light","The light configuration."],[12,"Absolute","","A light with an absolute world position.",13],[12,"StickToCamera","","A light superimposed with the camera position.",13],[10,"clone","","",13],[0,"loader","kiss3d","File loading."],[0,"obj","kiss3d::loader","Simplistic obj loader."],[3,"parse_file","kiss3d::loader::obj","Parses an obj file."],[3,"parse","","Parses a string representing an obj file."],[4,"Coord","",""],[4,"Normal","",""],[4,"UV","",""],[0,"mtl","kiss3d::loader","Simplistic mtl loader."],[1,"MtlMaterial","kiss3d::loader::mtl","Material informations read from a `.mtl` file."],[11,"name","","Name of the material.",14],[11,"ambiant_texture","","Path to the ambiant texture.",14],[11,"diffuse_texture","","Path to the diffuse texture.",14],[11,"specular_texture","","Path to the specular texture.",14],[11,"opacity_map","","Path to the opacity map.",14],[11,"ambiant","","The ambiant color.",14],[11,"diffuse","","The diffuse color.",14],[11,"specular","","The specular color.",14],[11,"shininess","","The shininess.",14],[11,"alpha","","Alpha blending.",14],[3,"parse_file","","Parses a mtl file."],[3,"parse","","Parses a string representing a mtl file."],[10,"clone","","",14],[10,"new_default","","Creates a new mtl material with a name and default values.",14],[10,"new","","Creates a new mtl material.",14],[0,"line_renderer","kiss3d","A batched line renderer."],[1,"LineRenderer","kiss3d::line_renderer","Structure which manages the display of short-living lines."],[11,"shader","","",15],[11,"pos","","",15],[11,"color","","",15],[11,"view","","",15],[11,"lines","","",15],[5,"LINES_VERTEX_SRC","","Vertex shader used by the material to display line."],[5,"LINES_FRAGMENT_SRC","","Fragment shader used by the material to display line."],[10,"new","","Creates a new lines manager.",15],[10,"needs_rendering","","Indicates whether some lines have to be drawn.",15],[10,"draw_line","","Adds a line to be drawn during the next frame. Lines are not persistent between frames.\nThis method must be called for each line to draw, and at each update loop iteration.",15],[10,"render","","Actually draws the lines.",15],[0,"point_renderer","kiss3d","A batched point renderer."],[1,"PointRenderer","kiss3d::point_renderer","Structure which manages the display of short-living points."],[11,"shader","","",16],[11,"pos","","",16],[11,"color","","",16],[11,"view","","",16],[11,"points","","",16],[5,"POINTS_VERTEX_SRC","","Vertex shader used by the material to display line."],[5,"POINTS_FRAGMENT_SRC","","Fragment shader used by the material to display line."],[10,"new","","Creates a new points manager.",16],[10,"needs_rendering","","Indicates whether some points have to be drawn.",16],[10,"draw_point","","Adds a line to be drawn during the next frame. Lines are not persistent between frames.\nThis method must be called for each line to draw, and at each update loop iteration.",16],[10,"render","","Actually draws the points.",16],[0,"builtin","kiss3d","Built-in geometries, shaders and effects."],[1,"ObjectMaterial","kiss3d::builtin","The default material used to draw objects."],[11,"shader","","",17],[11,"pos","","",17],[11,"normal","","",17],[11,"tex_coord","","",17],[11,"light","","",17],[11,"color","","",17],[11,"transform","","",17],[11,"scale","","",17],[11,"ntransform","","",17],[11,"view","","",17],[1,"NormalsMaterial","","A material that draws normals of an object."],[11,"shader","","",18],[11,"position","","",18],[11,"normal","","",18],[11,"view","","",18],[11,"transform","","",18],[11,"scale","","",18],[1,"UvsMaterial","","A material that draws normals of an object."],[11,"shader","","",19],[11,"position","","",19],[11,"uvs","","",19],[11,"view","","",19],[11,"transform","","",19],[11,"scale","","",19],[5,"OBJECT_VERTEX_SRC","","Vertex shader of the default object material."],[5,"OBJECT_FRAGMENT_SRC","","Fragment shader of the default object material."],[5,"NORMAL_VERTEX_SRC","",""],[5,"NORMAL_FRAGMENT_SRC","",""],[5,"UVS_VERTEX_SRC","",""],[5,"UVS_FRAGMENT_SRC","",""],[0,"post_processing","kiss3d","Post-processing effects."],[1,"Waves","kiss3d::post_processing","An useless post-processing effect mainly to test that everything works correctly."],[11,"shader","","",20],[11,"time","","",20],[11,"offset","","",20],[11,"fbo_texture","","",20],[11,"v_coord","","",20],[11,"fbo_vertices","","",20],[1,"Grayscales","","Post processing effect which turns everything in gray scales."],[11,"shader","","",21],[11,"fbo_texture","","",21],[11,"v_coord","","",21],[11,"fbo_vertices","","",21],[1,"SobelEdgeHighlight","","Post processing effect which turns everything in grayscales."],[11,"shiftx","","",22],[11,"shifty","","",22],[11,"zn","","",22],[11,"zf","","",22],[11,"threshold","","",22],[11,"shader","","",22],[11,"gl_nx","","",22],[11,"gl_ny","","",22],[11,"gl_fbo_depth","","",22],[11,"gl_fbo_texture","","",22],[11,"gl_znear","","",22],[11,"gl_zfar","","",22],[11,"gl_threshold","","",22],[11,"gl_v_coord","","",22],[11,"gl_fbo_vertices","","",22],[1,"OculusStereo","","An post-processing effect to support the oculus rift."],[11,"shader","","",23],[11,"fbo_vertices","","",23],[11,"fbo_texture","","",23],[11,"v_coord","","",23],[11,"kappa_0","","",23],[11,"kappa_1","","",23],[11,"kappa_2","","",23],[11,"kappa_3","","",23],[11,"scale","","",23],[11,"scale_in","","",23],[11,"w","","",23],[11,"h","","",23],[0,"post_processing_effect","","Trait implemented by every post-processing effect."],[6,"PostProcessingEffect","kiss3d::post_processing::post_processing_effect","Trait of post processing effect."],[9,"update","","Updates the post processing effect.",24],[9,"draw","","Render the effect.",24],[0,"resource","kiss3d","GPU resource managers"],[1,"FramebufferManager","kiss3d::resource","A framebuffer manager. It is a simple to to switch between an off-screen framebuffer and the\ndefault (window) framebuffer."],[11,"curr_fbo","","",25],[11,"curr_color","","",25],[11,"curr_depth","","",25],[11,"fbo","","",25],[1,"OffscreenBuffers","","OpenGL identifiers to an off-screen buffer."],[11,"texture","","",26],[11,"depth","","",26],[11,"ncpy","","",26],[1,"Texture","","A gpu texture. It contains the texture id provided by opengl and is automatically released."],[11,"id","","",27],[1,"TextureManager","","The texture manager."],[11,"default_texture","","",28],[11,"textures","","",28],[1,"MaterialManager","","The material manager."],[11,"default_material","","",29],[11,"materials","","",29],[1,"MeshManager","","The mesh manager."],[11,"meshes","","",30],[1,"Shader","","Structure encapsulating a shader program."],[11,"program","","",31],[11,"vshader","","",31],[11,"fshader","","",31],[11,"nocpy","","",31],[1,"ShaderAttribute","","Structure encapsulating an attribute."],[11,"id","","",32],[1,"ShaderUniform","","Structure encapsulating an uniform variable."],[11,"id","","",33],[1,"GPUVector","","A vector of elements that can be loaded to the GPU, on the RAM, or both."],[11,"trash","","",34],[11,"len","","",34],[11,"buf_type","","",34],[11,"alloc_type","","",34],[11,"handle","","",34],[11,"data","","",34],[1,"Mesh","","Aggregation of vertices, indices, normals and texture coordinates."],[11,"coords","","",35],[11,"faces","","",35],[11,"normals","","",35],[11,"uvs","","",35],[2,"RenderTarget","","The target to every rendering call."],[12,"Screen","","The screen (main framebuffer).",36],[12,"Offscreen","","An off-screen buffer.",36],[2,"BufferType","","Type of gpu buffer."],[12,"ArrayBuffer","","An array buffer bindable to a gl::ARRAY_BUFFER.",37],[12,"ElementArrayBuffer","","An array buffer bindable to a gl::ELEMENT_ARRAY_BUFFER.",37],[2,"AllocationType","","Allocation type of gpu buffers."],[12,"StaticDraw","","STATIC_DRAW allocation type.",38],[12,"DynamicDraw","","DYNAMIC_DRAW allocation type.",38],[12,"StreamDraw","","STREAM_DRAW allocation type.",38],[0,"material","","Trait implemented by materials."],[6,"Material","kiss3d::resource::material","Trait implemented by materials."],[9,"render","","Renders an object using this material.",39],[6,"GLPrimitive","kiss3d::resource","Trait implemented by structures that can be uploaded to a uniform or contained by a gpu array."],[9,"gl_type","","The opengl primitive type of this structure content.",40],[9,"size","","The number of elements of type `self.gl_type()` this structure stores.",40],[9,"upload","","Uploads the element to a gpu location.",40],[0,"text","kiss3d","Text rendering."],[1,"Glyph","kiss3d::text","A ttf glyph."],[11,"tex","","",41],[11,"advance","","",41],[11,"dimensions","","",41],[11,"offset","","",41],[11,"buffer","","",41],[1,"Font","","A ttf font."],[11,"library","","",42],[11,"face","","",42],[11,"texture_atlas","","",42],[11,"atlas_dimensions","","",42],[11,"glyphs","","",42],[11,"height","","",42],[11,"nocpy","","",42],[1,"TextRenderer","","A ttf text renderer."],[11,"shader","","",43],[11,"invsz","","",43],[11,"tex","","",43],[11,"color","","",43],[11,"pos","","",43],[11,"uvs","","",43],[11,"contexts","","",43],[11,"coords","","",43],[0,"utils","kiss3d","Various utilities not directly useful for rendering."],[1,"Recorder","kiss3d::utils","OpenGL rendering video recorder."],[11,"tmp_frame_buf","","",44],[11,"frame_buf","","",44],[11,"curr_frame_index","","",44],[11,"initialized","","",44],[11,"bit_rate","","",44],[11,"width","","",44],[11,"height","","",44],[11,"time_base","","",44],[11,"gop_size","","",44],[11,"max_b_frames","","",44],[11,"pix_fmt","","",44],[11,"tmp_frame","","",44],[11,"frame","","",44],[11,"context","","",44],[11,"format_context","","",44],[11,"video_st","","",44],[11,"scale_context","","",44],[11,"path","","",44]],"paths":[[1,"Window"],[1,"Event"],[1,"Events"],[1,"EventManager"],[1,"RenderFrames"],[1,"RenderFrame"],[1,"SceneNode"],[1,"SceneNodeData"],[1,"Object"],[1,"ObjectData"],[1,"ArcBall"],[1,"FirstPerson"],[1,"FirstPersonStereo"],[2,"Light"],[1,"MtlMaterial"],[1,"LineRenderer"],[1,"PointRenderer"],[1,"ObjectMaterial"],[1,"NormalsMaterial"],[1,"UvsMaterial"],[1,"Waves"],[1,"Grayscales"],[1,"SobelEdgeHighlight"],[1,"OculusStereo"],[6,"PostProcessingEffect"],[1,"FramebufferManager"],[1,"OffscreenBuffers"],[1,"Texture"],[1,"TextureManager"],[1,"MaterialManager"],[1,"MeshManager"],[1,"Shader"],[1,"ShaderAttribute"],[1,"ShaderUniform"],[1,"GPUVector"],[1,"Mesh"],[2,"RenderTarget"],[2,"BufferType"],[2,"AllocationType"],[6,"Material"],[6,"GLPrimitive"],[1,"Glyph"],[1,"Font"],[1,"TextRenderer"],[1,"Recorder"]]};
initSearch(searchIndex);
