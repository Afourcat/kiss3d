var searchIndex = {};
searchIndex['kiss3d'] = {"items":[[0,"","kiss3d","# Kiss3d"],[0,"window","","The window, and things to handle the rendering loop and events."],[1,"Window","kiss3d::window","Structure representing a window and a 3D scene."],[1,"Event","","An event."],[11,"timestamp","","The event timestamp.",0],[11,"value","","The exact glfw event value. This can be modified to fool the other event handlers.",0],[11,"inhibited","","Set this to `true` to prevent the window or the camera from handling the event.",0],[1,"Events","","An iterator through events."],[1,"EventManager","","A stand-alone object that provides an iterator though glfw events."],[0,"scene","kiss3d","Everything related to the scene graph."],[1,"SceneNode","kiss3d::scene","A node of the scene graph."],[1,"SceneNodeData","","The datas contained by a `SceneNode`."],[1,"Object","","A 3d objects on the scene."],[1,"ObjectData","","Set of data identifying a scene node."],[0,"camera","kiss3d","Camera trait with some common implementations."],[1,"ArcBall","kiss3d::camera","Arc-ball camera mode."],[1,"FirstPerson","","First-person camera mode."],[1,"FirstPersonStereo","","First-person camera mode."],[0,"light","kiss3d","Lights."],[2,"Light","kiss3d::light","The light configuration."],[12,"Absolute","","A light with an absolute world position.",1],[12,"StickToCamera","","A light superimposed with the camera position.",1],[10,"clone","","",1],[0,"loader","kiss3d","File loading."],[0,"obj","kiss3d::loader","Simplistic obj loader."],[3,"parse_file","kiss3d::loader::obj","Parses an obj file."],[3,"parse","","Parses a string representing an obj file."],[4,"Coord","",""],[4,"Normal","",""],[4,"UV","",""],[0,"mtl","kiss3d::loader","Simplistic mtl loader."],[1,"MtlMaterial","kiss3d::loader::mtl","Material informations read from a `.mtl` file."],[11,"name","","Name of the material.",2],[11,"ambiant_texture","","Path to the ambiant texture.",2],[11,"diffuse_texture","","Path to the diffuse texture.",2],[11,"specular_texture","","Path to the specular texture.",2],[11,"opacity_map","","Path to the opacity map.",2],[11,"ambiant","","The ambiant color.",2],[11,"diffuse","","The diffuse color.",2],[11,"specular","","The specular color.",2],[11,"shininess","","The shininess.",2],[11,"alpha","","Alpha blending.",2],[3,"parse_file","","Parses a mtl file."],[3,"parse","","Parses a string representing a mtl file."],[10,"clone","","",2],[10,"new_default","","Creates a new mtl material with a name and default values.",2],[10,"new","","Creates a new mtl material.",2],[0,"line_renderer","kiss3d","A batched line renderer."],[1,"LineRenderer","kiss3d::line_renderer","Structure which manages the display of short-living lines."],[5,"LINES_VERTEX_SRC","","Vertex shader used by the material to display line."],[5,"LINES_FRAGMENT_SRC","","Fragment shader used by the material to display line."],[10,"new","","Creates a new lines manager.",3],[10,"needs_rendering","","Indicates whether some lines have to be drawn.",3],[10,"draw_line","","Adds a line to be drawn during the next frame. Lines are not persistent between frames.\nThis method must be called for each line to draw, and at each update loop iteration.",3],[10,"render","","Actually draws the lines.",3],[0,"point_renderer","kiss3d","A batched point renderer."],[1,"PointRenderer","kiss3d::point_renderer","Structure which manages the display of short-living points."],[5,"POINTS_VERTEX_SRC","","Vertex shader used by the material to display line."],[5,"POINTS_FRAGMENT_SRC","","Fragment shader used by the material to display line."],[10,"new","","Creates a new points manager.",4],[10,"needs_rendering","","Indicates whether some points have to be drawn.",4],[10,"draw_point","","Adds a line to be drawn during the next frame. Lines are not persistent between frames.\nThis method must be called for each line to draw, and at each update loop iteration.",4],[10,"render","","Actually draws the points.",4],[0,"builtin","kiss3d","Built-in geometries, shaders and effects."],[1,"ObjectMaterial","kiss3d::builtin","The default material used to draw objects."],[1,"NormalsMaterial","","A material that draws normals of an object."],[1,"UvsMaterial","","A material that draws normals of an object."],[5,"OBJECT_VERTEX_SRC","","Vertex shader of the default object material."],[5,"OBJECT_FRAGMENT_SRC","","Fragment shader of the default object material."],[5,"NORMAL_VERTEX_SRC","",""],[5,"NORMAL_FRAGMENT_SRC","",""],[5,"UVS_VERTEX_SRC","",""],[5,"UVS_FRAGMENT_SRC","",""],[0,"post_processing","kiss3d","Post-processing effects."],[1,"Waves","kiss3d::post_processing","An useless post-processing effect mainly to test that everything works correctly."],[1,"Grayscales","","Post processing effect which turns everything in gray scales."],[1,"SobelEdgeHighlight","","Post processing effect which turns everything in grayscales."],[1,"OculusStereo","","An post-processing effect to support the oculus rift."],[0,"post_processing_effect","","Trait implemented by every post-processing effect."],[6,"PostProcessingEffect","kiss3d::post_processing::post_processing_effect","Trait of post processing effect."],[9,"update","","Updates the post processing effect.",5],[9,"draw","","Render the effect.",5],[0,"resource","kiss3d","GPU resource managers"],[1,"FramebufferManager","kiss3d::resource","A framebuffer manager. It is a simple to to switch between an off-screen framebuffer and the\ndefault (window) framebuffer."],[1,"OffscreenBuffers","","OpenGL identifiers to an off-screen buffer."],[1,"Texture","","A gpu texture. It contains the texture id provided by opengl and is automatically released."],[1,"TextureManager","","The texture manager."],[1,"MaterialManager","","The material manager."],[1,"MeshManager","","The mesh manager."],[1,"Shader","","Structure encapsulating a shader program."],[1,"ShaderAttribute","","Structure encapsulating an attribute."],[1,"ShaderUniform","","Structure encapsulating an uniform variable."],[1,"GPUVector","","A vector of elements that can be loaded to the GPU, on the RAM, or both."],[1,"Mesh","","Aggregation of vertices, indices, normals and texture coordinates."],[2,"RenderTarget","","The target to every rendering call."],[12,"Screen","","The screen (main framebuffer).",6],[12,"Offscreen","","An off-screen buffer.",6],[2,"BufferType","","Type of gpu buffer."],[12,"ArrayBuffer","","An array buffer bindable to a gl::ARRAY_BUFFER.",7],[12,"ElementArrayBuffer","","An array buffer bindable to a gl::ELEMENT_ARRAY_BUFFER.",7],[2,"AllocationType","","Allocation type of gpu buffers."],[12,"StaticDraw","","STATIC_DRAW allocation type.",8],[12,"DynamicDraw","","DYNAMIC_DRAW allocation type.",8],[12,"StreamDraw","","STREAM_DRAW allocation type.",8],[0,"material","","Trait implemented by materials."],[6,"Material","kiss3d::resource::material","Trait implemented by materials."],[9,"render","","Renders an object using this material.",9],[6,"GLPrimitive","kiss3d::resource","Trait implemented by structures that can be uploaded to a uniform or contained by a gpu array."],[9,"gl_type","","The opengl primitive type of this structure content.",10],[9,"size","","The number of elements of type `self.gl_type()` this structure stores.",10],[9,"upload","","Uploads the element to a gpu location.",10],[0,"text","kiss3d","Text rendering."],[1,"Glyph","kiss3d::text","A ttf glyph."],[1,"Font","","A ttf font."],[1,"TextRenderer","","A ttf text renderer."]],"paths":[[1,"Event"],[2,"Light"],[1,"MtlMaterial"],[1,"LineRenderer"],[1,"PointRenderer"],[6,"PostProcessingEffect"],[2,"RenderTarget"],[2,"BufferType"],[2,"AllocationType"],[6,"Material"],[6,"GLPrimitive"]]};
searchIndex['ncollide3df32'] = {"items":[[0,"","ncollide3df32","ncollide\n========"],[0,"bounding_volume","","Bounding volumes."],[1,"AABB","ncollide3df32::bounding_volume","An Axis Aligned Bounding Box."],[1,"BoundingSphere","","A Bounding Sphere."],[1,"SpacializedCone","","A normal cone with a bounding sphere."],[3,"implicit_shape_aabb","","Computes the AABB of an implicit shape."],[3,"point_cloud_aabb","","Computes the AABB of a set of point."],[3,"ball_aabb","","Computes the Axis-Aligned Bounding Box of a ball."],[3,"point_cloud_bounding_sphere_with_center","","Computes the bounding sphere of a set of point, given its center."],[3,"point_cloud_bounding_sphere","","Computes a bounding sphere of the specified set of point."],[6,"HasBoundingVolume","","Traits of objects having a bounding volume."],[9,"bounding_volume","","The object bounding volume.",0],[6,"BoundingVolume","","Trait of bounding volumes."],[9,"intersects","","Checks if this bounding volume intersect with another one.",1],[9,"contains","","Checks if this bounding volume contains another one.",1],[9,"merge","","Merges this bounding volume with another one. The merge is done in-place.",1],[9,"merged","","Merges this bounding volume with another one.",1],[6,"LooseBoundingVolume","","Trait of loose bounding volume."],[9,"loosen","","Enlarges this bounding volume.",2],[9,"loosened","","Creates a new, enlarged version, of this bounding volume.",2],[6,"HasAABB","","Trait of objects that can be bounded by an AABB."],[9,"aabb","","The objectâ€™s AABB.",3],[6,"HasBoundingSphere","","Trait implemented by objects having a bounding sphere."],[9,"bounding_sphere","","The object bounding sphere.",4],[0,"geom","ncollide3df32","Geometric primitives."],[1,"Ball","ncollide3df32::geom","A Ball geometry."],[1,"Plane","","Implicit description of a plane."],[1,"Cuboid","","Geometry of a box."],[1,"Capsule","","Implicit description of a capsule geometry with its principal axis aligned with the `y` axis."],[1,"Cone","","Implicit description of a cylinder geometry with its principal axis aligned with the `y` axis."],[1,"Cylinder","","Implicit description of a cylinder geometry with its principal axis aligned with the `y` axis."],[1,"Convex","","Set of point assumed to form a convex polytope."],[1,"MinkowskiSum","","Implicit representation of the Minkowski sum of two geometries."],[1,"AnnotatedMinkowskiSum","","Same as the MinkowskiSum but with a support mapping which keeps track of the\noriginal supports points from the two wrapped geometries."],[1,"Reflection","","Implicit representation of the reflection of a geometry."],[1,"Compound","","A compound geometry with an aabb bounding volume."],[1,"CompoundData","","Structure used to build a `Compound` geometry."],[1,"GeomWithMargin","","Extends the wrapped geometry with its margin."],[1,"Mesh","","Geometry commonly known as a 2d line strip or a 3d triangle mesh."],[1,"Segment","","A segment geometry."],[1,"Triangle","","A triangle geometry."],[1,"BezierSurface","","Procedural generator of non-rational BÃ©zier surfaces."],[1,"BezierSurfaceEvaluationCache","","Cache used to evaluate a bezier surface at a given parameter."],[1,"BezierCurve","","Procedural generator of non-rational BÃ©zier curve."],[1,"BezierCurveEvaluationCache","","Cache used to evaluate a bezier curve at a given parameter."],[1,"Torus","","A torus."],[4,"MeshPrimitive","","The primitive geometry used by a `Mesh`."],[6,"MeshElement","","Trait implemented by elements usable on the Mesh."],[9,"nvertices","","The number of vertices of this mesh element.",5],[9,"new_with_vertices_and_indices","","Creates a new mesh element from a set of vertices and indices and the margin.",5],[6,"Geom","","Trait (that should be) implemented by every geometry."],[9,"duplicate","","Duplicates (clones) this geometry.",6],[6,"ConcaveGeom","","Trait implemented by concave, composite geometries."],[9,"map_part_at","","Applies a function to each sub-geometry of this concave geometry.",7],[9,"map_transformed_part_at","","Applies a transformation matrix and a function to each sub-geometry of this concave\ngeometry.",7],[9,"approx_interferences_with_aabb","","Computes the indices of every sub-geometry which might intersect a given AABB.",7],[9,"approx_interferences_with_ray","","Computes the indices of every sub-geometry which might intersect a given Ray.",7],[9,"aabb_at","","Gets the AABB of the geometry identified by the index `i`.",7],[0,"ray","ncollide3df32","Ray casting utilities."],[1,"Ray","ncollide3df32::ray","A Ray."],[11,"orig","","Starting point of the ray.",8],[11,"dir","","Direction of the ray.",8],[1,"RayIntersection","","Structure containing the result of a successful ray cast."],[11,"toi","","The time of impact of the ray with the object.  The exact contact point can be computed\nwith: `orig + dir * toi` where `orig` is the origin of the ray; `dir` is its direction and\n`toi` is the value of this field.",9],[11,"normal","","The normal at the intersection point.",9],[11,"uvs","","The textures coordinates at the intersection point.  This is an `Option` because some shape\ndo not support texture coordinates.",9],[3,"plane_toi_with_ray","","Computes the toi of a ray with a plane described by its center and normal."],[3,"implicit_toi_and_normal_with_ray","","Cast a ray on a geometry using the GJK algorithm."],[3,"ball_toi_with_ray","","Computes the time of impact of a ray on a ball."],[3,"triangle_ray_intersection","","Computes the intersection between a triangle and a ray."],[6,"RayCast","","Traits of objects which can be tested for intersection with a ray."],[10,"toi_with_ray","","Computes the time of impact between this geometry and a ray",10],[9,"toi_and_normal_with_ray","","Computes the intersection point between this geometry and a ray.",10],[10,"toi_and_normal_and_uv_with_ray","","Computes the intersection point and normal between this geometry and a ray.",10],[10,"intersects_ray","","Tests whether a ray intersects this geometry.",10],[10,"toi_with_transform_and_ray","","Computes the time of impact between this transform geometry and a ray.",10],[10,"toi_and_normal_with_transform_and_ray","","Computes the time of impact, and normal between this transformed geometry and a ray.",10],[10,"toi_and_normal_and_uv_with_transform_and_ray","","Computes time of impact, normal, and texture coordinates (uv) between this transformed\ngeometry and a ray.",10],[10,"intersects_with_transform_and_ray","","Tests whether a ray intersects this transformed geometry.",10],[0,"narrow","ncollide3df32","Narrow phases."],[1,"Contact","ncollide3df32::narrow","Geometric description of a contact."],[11,"world1","","Position of the contact on the first object. The position is expressed in world space.",11],[11,"world2","","Position of the contact on the second object. The position is expressed in world space.",11],[11,"normal","","Contact normal",11],[11,"depth","","Penetration depth",11],[1,"Empty","","A collision detector that does nothing."],[1,"BallBall","","Collision detector between two balls."],[1,"PlaneImplicit","","Collision detector between a plane and a geometry implementing the `Implicit` trait."],[1,"ImplicitPlane","","Collision detector between a plane and a geometry implementing the `Implicit` trait."],[1,"ImplicitImplicit","","Persistent collision detector between two shapes having a support mapping function."],[1,"IncrementalContactManifoldGenerator","","Contact manifold generator which keeps track of several contacts."],[1,"OneShotContactManifoldGenerator","","Contact manifold generator producing a full manifold at the first update."],[1,"GeomGeomDispatcher","","Collision dispatcher between two `~Geom`."],[1,"ConcaveGeomGeom","","Collision detector between a concave geometry and another geometry."],[1,"GeomConcaveGeom","","Collision detector between a geometry and a concave geometry."],[1,"ConcaveGeomGeomFactory","","Structure implementing `CollisionDetectorFactory` in order to create a new `ConcaveGeomGeom`\ncollision detector."],[1,"GeomConcaveGeomFactory","","Structure implementing `CollisionDetectorFactory` in order to create a new `GeomConcaveGeom`\ncollision detector."],[1,"BallBezierSurface","","Collision detector between a ball and a bezier surface."],[1,"BezierSurfaceBall","","Collision detector between a bezier surface and a ball."],[1,"BezierSurfaceBezierSurface","","A collision detector between two bÃ©zier surfaces."],[0,"toi","","Functions to compute the time of impact between two geometries."],[3,"ball_ball","ncollide3df32::narrow::toi","Computes the Time Of Impact of two balls."],[3,"plane_implicit","","Computes the Time Of Impact of a geometry and a plane."],[3,"implicit_implicit","","Computes the Time Of Impact of two geometries."],[3,"implicit_implicit_and_normal","","Computes the Time Of Impact of two geometries."],[0,"collide","ncollide3df32::narrow","Functions to compute one contact point between two geometries."],[3,"ball_ball","ncollide3df32::narrow::collide","Computes the contact point between two balls."],[3,"plane_implicit","","Same as `update_collide_plane_implicit_shape` but the existing collision or `None`."],[3,"implicit_implicit","","Computes a contact point between two implicit geometries."],[0,"closest_points","ncollide3df32::narrow","Functions to compute the closest points between two geometries."],[3,"ball_ball","ncollide3df32::narrow::closest_points","Computes the closest points between two balls."],[0,"algorithm","ncollide3df32::narrow","Algorithms needed for distance and penetration depth computation."],[0,"simplex","ncollide3df32::narrow::algorithm","Abstract definition of a simplex usable by the GJK algorithm."],[6,"Simplex","ncollide3df32::narrow::algorithm::simplex","Trait of a simplex usable by the GJK algorithm."],[9,"reset","","Replace the point of the simplex by a single one. The simplex is reduced to be\n0-dimensional.",12],[9,"translate_by","","Translates each point of this simplex.",12],[9,"add_point","","Adds a point to the simplex.",12],[9,"project_origin_and_reduce","","Project the origin on the simplex and remove any sub-simplex which does not contain the\nprojection.",12],[9,"project_origin","","Projection the origin on the simplex. The simplex itself in unchanged, although it is mutable\nfor optimization purpose.",12],[9,"contains_point","","Checks whether a given point is already part of the simplex points.",12],[9,"dimension","","Dimension of the simplex. A simplex with `n` must be a `n - 1`-dimensional simplex.",12],[9,"max_sq_len","","The maximum among the simplex point squared lengths.",12],[0,"johnson_simplex","ncollide3df32::narrow::algorithm","Simplex using the Johnson subalgorithm to compute the projection of the origin on the simplex."],[1,"JohnsonSimplex","ncollide3df32::narrow::algorithm::johnson_simplex","Simplex using the Johnson subalgorithm to compute the projection of the origin on the simplex."],[1,"RecursionTemplate","","Set of indices to explain to the JohnsonSimplex how to do its work.\nBuilding this is very time consuming, and thus should be shared between all instances of the\nJohnson simplex."],[10,"clone","","",13],[10,"decode","","",14],[10,"encode","","",14],[10,"clone","","",14],[10,"eq","","",14],[10,"ne","","",14],[10,"new","","Creates a new set of Recursion simplex sharable between any Johnson simplex having a\ndimension inferior or equal to `dim`.",14],[10,"new","","Creates a new, empty, Johnson simplex.",13],[10,"new_w_tls","","Creates a new, empty Johnson simplex. The recursion template uses the thread-local one.",13],[10,"reset","","",13],[10,"dimension","","",13],[10,"max_sq_len","","",13],[10,"contains_point","","",13],[10,"add_point","","",13],[10,"project_origin_and_reduce","","",13],[10,"project_origin","","",13],[10,"translate_by","","",13],[0,"gjk","ncollide3df32::narrow::algorithm","The Gilbertâ€“Johnsonâ€“Keerthi distance algorithm."],[2,"GJKResult","ncollide3df32::narrow::algorithm::gjk","Results of the GJK algorithm."],[12,"Intersection","","Result of the GJK algorithm when the origin is inside of the polytope.",15],[12,"Projection","","Result of the GJK algorithm when a projection of the origin on the polytope is found.",15],[12,"NoIntersection","","Result of the GJK algorithm when the origin is to far away from the polytope.",15],[3,"closest_points","","Computes the closest points between two convex geometries unsing the GJK algorithm."],[3,"closest_points_without_margin","","Computes the closest points between two convex geometries without their margins unsing the GJK\nalgorithm."],[3,"closest_points_without_margin_with_max_dist","","Computes the closest points between two convex geometries without their margins unsing the GJK\nalgorithm."],[3,"project_origin","","Projects the origin on a geometry unsing the GJK algorithm."],[3,"project_origin_with_max_dist","","Projects the origin on a geometry using the Separating Axis GJK algorithm.\nThe algorithm will stop as soon as the polytope can be proven to be at least `max_dist` away\nfrom the origin."],[10,"clone","","",15],[10,"decode","","",15],[10,"encode","","",15],[0,"minkowski_sampling","ncollide3df32::narrow::algorithm","Penetration depth computation algorithm approximating the Minkowskis sum."],[3,"closest_points","ncollide3df32::narrow::algorithm::minkowski_sampling","Computes the closest points between two implicit inter-penetrating shapes. Returns None if the\nshapes are not in penetration. This can be used as a fallback algorithm for the GJK algorithm."],[0,"surface_selector","ncollide3df32::narrow","Heuristics to select surface containing the projection of a point."],[1,"YesSirSurfaceSelector","ncollide3df32::narrow::surface_selector","A selector that does not filter out any surface."],[1,"HyperPlaneSurfaceSelector","","A selector that tries to project the point on one of the extremal point of the surface."],[1,"TangentConesSurfaceSelector","","A selector that tests the orthogonality condition using the surface tangent cone."],[1,"TangentConesSurfaceSelectorTestData","","Data used by the `TangentconesSurfaceSelector` to test orthogonality and flatness."],[6,"SurfaceSelector","","Trait implemented by the heristics for surface selection during collision detection."],[9,"set_max_lmd","","Sets the maximum local minimal distance.",16],[9,"is_flat","","Tells whether a surface is flat enough to run a numerical resolution algorithm.",16],[9,"may_contain_a_closest_point","","Tells whether a surface might contain a closest point or not.",16],[9,"create_test_data","","Allocates data used to test flatnass and closest point containment.",16],[10,"clone","","",17],[10,"new","","Creates a new `YesSirSurfaceSelector`.",17],[10,"set_max_lmd","","",17],[10,"is_flat","","",17],[10,"may_contain_a_closest_point","","",17],[10,"create_test_data","","",17],[10,"clone","","",18],[10,"new","","Creates a new hyperplane-based surface selector.",18],[10,"set_max_lmd","","",18],[10,"is_flat","","",18],[10,"may_contain_a_closest_point","","",18],[10,"create_test_data","","",18],[10,"clone","","",19],[10,"new","","Creates a new tangent-cone based surface detector.",19],[10,"set_max_lmd","","",19],[10,"is_flat","","",19],[10,"may_contain_a_closest_point","","",19],[10,"create_test_data","","",19],[0,"surface_subdivision_tree","ncollide3df32::narrow","Tree used to cache subdivisions of surfaces."],[1,"SurfaceSubdivisionTreeRef","ncollide3df32::narrow::surface_subdivision_tree","A referenece to an element of the subdivision cache."],[1,"SurfaceSubdivisionTreeCache","","A cache that keeps track of parametric surface subdivision trees."],[1,"SurfaceSubdivisionTree","","A shareable binary tree with a pointer to its parent."],[10,"clone","","",20],[10,"is_the_subdivision_tree_of","","Tests if this references the subdivision tree of the bÃ©zier surface `b`.",20],[10,"deref","","",20],[10,"drop","","",20],[10,"new","","Creates a new surface subdivision tree cache.",21],[10,"clear","","Removes everything from this cache.",21],[10,"find_or_insert_with","","Gets from the cache `cache`, the subdivision tree for the surface `b`.",21],[10,"new_orphan","","Creates a new tree with no parent nor children.",22],[10,"surface","","The surface contained by this node.",22],[10,"data","","Reference to the data contained by this node.",22],[10,"data_mut","","Mutable reference to the data contained by this node.",22],[10,"timestamp","","The timestamp of this tree node.",22],[10,"set_timestamp","","Sets the timestamp of this tree node.",22],[10,"has_left_child","","Whether or not this node has a left child.",22],[10,"has_right_child","","Whether or not this node has a right child.",22],[10,"right_child","","A copy of this node right child.",22],[10,"left_child","","A copy of this node left child.",22],[10,"right_child_ref","","A reference to this node right child.",22],[10,"left_child_ref","","A reference to this node left child.",22],[10,"set_right_child","","Sets the right child of this node.",22],[10,"set_left_child","","Sets the left child of this node.",22],[10,"is_right_child","","Returns `true` if `child` is the right child of this node.",22],[10,"is_left_child","","Returns `true` if `child` is the left child of this node.",22],[10,"remove_right_child","","Removes the right child of this node.",22],[10,"remove_left_child","","Removes the left child of this node.",22],[6,"CollisionDetector","ncollide3df32::narrow","Trait of the algorithms executed during the so-called Narrow Phase."],[9,"update","","Runs the collision detection on two objects. It is assumed that the same\ncollision detector (the same structure) is always used with the same\npair of object.",23],[9,"num_colls","","The number of collision detected during the last update.",23],[9,"colls","","Collects the collisions detected during the last update.",23],[9,"toi","","Computes the time of impact of two objects.",23],[6,"DynamicCollisionDetector","","Trait to be implemented by collision detector using dynamic dispatch."],[6,"GeomGeomCollisionDetector","","Same as the `CollisionDetector` trait but using dynamic dispatch on the geometries."],[9,"update","","Runs the collision detection on two objects. It is assumed that the same\ncollision detector (the same structure) is always used with the same\npair of object.",24],[9,"num_colls","","The number of collision detected during the last update.",24],[9,"colls","","Collects the collisions detected during the last update.",24],[6,"CollisionDetectorFactory","","Trait of structures able do build a new collision detector."],[9,"build","","Builds a new collision detector.",25],[0,"broad","ncollide3df32","Broad phases."],[1,"NoIdDispatcher","ncollide3df32::broad","Dispatcher which disallows dispatches between identical pointers."],[1,"BruteForceBroadPhase","","Broad phase with quadratic complexity."],[1,"BruteForceBoundingVolumeBroadPhase","","Broad phase with quadratic complexity but sped up using loose bounding volumes."],[1,"DBVTBroadPhase","","Broad phase based on a Dynamic Bounding Volume Tree."],[6,"BroadPhase","","Trait all broad phase must implement."],[9,"add","","Adds an element to this broad phase.",26],[9,"remove","","Removes an element from this broad phase.",26],[9,"update","","Updates the collision pairs based on the objects bounding volumes.",26],[9,"update_object","","Updates the collision pairs involving one specific object.",26],[6,"InterferencesBroadPhase","","Thait of broad phases which check for pairwise interferences."],[9,"activate","","Marks and object as active.",27],[9,"deactivate","","Marks and object as inactive.",27],[9,"for_each_pair","","Execute a function on each interference detected by the broad phase.",27],[9,"for_each_pair_mut","","Execute a function on each interference detected by the broad phase.",27],[6,"BoundingVolumeBroadPhase","","Trait of broad phases working with bounding volume."],[9,"interferences_with_bounding_volume","","Collects every object which might intersect a given bounding volume.",28],[6,"RayCastBroadPhase","","Traits of broad phase able to run fast ray-cast queries."],[9,"interferences_with_ray","","Collects every object which might intersect a ray.",29],[6,"Dispatcher","","Trait of dispatcher."],[9,"dispatch","","Deduce the narrow phase from two bodies.",30],[9,"is_valid","","Tells whether a collision between two bodies can occur.",30],[0,"volumetric","ncollide3df32","Volume and inertia tensor computation."],[3,"ball_volume","ncollide3df32::volumetric","Computes the volume of a ball."],[3,"cuboid_volume","","Computes the volume of a cuboid."],[3,"cone_volume","","Computes the volume of a cone."],[3,"capsule_volume","","Computes the volume of a capsule."],[3,"cylinder_volume","","Computes the volume of a cylinder."],[0,"volumetric","","Traits to compute inertial properties."],[6,"InertiaTensor","ncollide3df32::volumetric::volumetric","Trait to be implemented by inertia tensors."],[9,"apply","","Applies this inertia tensor to a vector.",31],[9,"to_world_space","","Transforms this inertia tensor from local space to world space.",31],[9,"to_relative_wrt_point","","Computes this inertia tensor relative to a given point.",31],[6,"Volumetric","","Trait to be implemented by objects which have a mass, a center of mass, and an inertia tensor."],[9,"surface","","Computes the surface of this object.",32],[9,"volume","","Computes the volume of this object.",32],[9,"center_of_mass","","Computes the center of mass of this object.",32],[9,"unit_angular_inertia","","Computes the angular inertia tensor of this object.",32],[10,"mass","","Given its density, this computes the mass of this object.",32],[10,"angular_inertia","","Given its mass, this computes the angular inertia of this object.",32],[10,"mass_properties","","Given its density, this computes the mass, center of mass, and inertia tensor of this object.",32],[0,"implicit","ncollide3df32","Definition of support functions."],[3,"cso_support_point","ncollide3df32::implicit","Computes the support point of a CSO on a given direction."],[3,"cso_support_point_without_margin","","Computes the support point of a CSO on a given direction."],[3,"point_cloud_support_point","","Computes the support point of a cloud of points."],[6,"Implicit","","Traits of convex geometries representable by a support mapping function."],[10,"support_point","","Evaluates the support function of the object. A support function is a\nfunction associating a vector to the geometry point which maximizes their\ndot product.\n \n# Arguments:\n * `dir` - the input of the support function. It is not required for it to\n           be normalized.",33],[9,"support_point_without_margin","","Evaluates the support function of the object. A support function is a\nfunction associating a vector to the geometry point which maximizes their\ndot product. This does not include the `margin` of the object. Margins are\ngeometry-dependent. Use `support_point` to sample the complete geometry.\n \n# Arguments:\n * `dir` - the input of the support function. It is not required for it to\n           be normalized.",33],[6,"HasMargin","","Trait of geometries having a margin."],[9,"margin","","The geometry margin.",34],[6,"PreferedSamplingDirections","","Trait of geometries having prefered sampling directions for the Minkowski sampling algorithm."],[9,"sample","","Applies a function to this geometry with a given transform.",35],[0,"parametric","ncollide3df32","Definition of parametric surfaces."],[6,"ParametricSurface","ncollide3df32::parametric","Trait implemented by differentiable parametric surfaces."],[9,"at","","Evaluates the parametric surface.",36],[9,"at_u","","Evaluates the surface derivative wrt. `u`.",36],[9,"at_v","","Evaluates the surface derivative wrt. `v`.",36],[9,"at_uu","","Evaluates the surface second derivative wrt. `u`.",36],[9,"at_vv","","Evaluates the surface second derivative wrt. `v`.",36],[9,"at_uv","","Evaluates the surface second derivative wrt. `u` and `v`.",36],[10,"at_u_v","","Evaluates the parametric surface and its first derivatives.",36],[10,"at_u_v_uu_vv_uv","","Evaluates the parametric surface and its first and second derivatides.",36],[9,"at_uv_nk","","Evaluates the parametric surface and its derivative wrt. `u` `n` times and wrt. `v` `k` times.",36],[10,"at_uv_nk_all","","Evaluates all the partial derivatives of the surface, up to the `n`-th derivative.",36],[0,"partitioning","ncollide3df32","Spatial partitioning tools."],[1,"DBVT","ncollide3df32::partitioning","A Dynamic Bounding Volume Tree."],[1,"DBVTLeaf","","Leaf of a Dynamic Bounding Volume Tree."],[11,"bounding_volume","","The bounding volume of this node.",37],[11,"center","","The center of this node bounding volume.",37],[11,"object","","An user-defined object.",37],[11,"parent","","This node parent.",37],[1,"BVT","","AÂ Boundig Volume Tree."],[1,"RayInterferencesCollector","","Bounding Volume Tree visitor collecting interferences with a given ray."],[1,"BoundingVolumeInterferencesCollector","","Bounding Volume Tree visitor collecting interferences with a given bounding volume."],[2,"DBVTLeafState","","State of a leaf."],[12,"RightChildOf","","This leaf is the right child of another node.",38],[12,"LeftChildOf","","This leaf is the left child of another node.",38],[12,"Detached","","This leaf is detached from any tree.",38],[2,"BinaryPartition","","Result of a binary partition."],[12,"Part","","Result of the partitioning of one element.",39],[12,"Parts","","Result of the partitioning of several elements.",39],[2,"BVTNode","","A node of the bounding volume tree."],[12,"Internal","","An internal node.",40],[12,"Leaf","","A leaf.",40],[3,"kdtree_partitioner","","Construction function for a kdree to be used with `BVT::new_with_partitioner`."],[3,"kdtree_partitioner_with_centers","","Construction function for a kdree to be used with `BVT::new_with_partitioner`."],[6,"BVTVisitor","","Visitor of Bounding Volume Trees."],[9,"visit_internal","","Visits an internal node. Returns `true` if the internal node children have to be visited\ntoo.",41],[9,"visit_leaf","","Visits a leaf.",41],[10,"visit_internal_mut","","Visits an internal node. Returns `true` if the internal node children have to be visited\ntoo.",41],[10,"visit_leaf_mut","","Visits a leaf.",41],[6,"BVTTVisitor","","Visitor for the Bounding Volume Traversal Tree."],[9,"visit_internal_internal","","Visit two internal nodes.",42],[9,"visit_leaf_leaf","","Visit two leaves.",42],[9,"visit_internal_leaf","","Visit one internal node and one leaf.",42],[9,"visit_leaf_internal","","Visit one leaf and on internal node.",42],[0,"procedural","ncollide3df32","Procedural mesh generation."],[1,"TriMesh","ncollide3df32::procedural","Geometric description of a mesh."],[11,"coords","","Coordinates of the mesh vertices.",43],[11,"normals","","Coordinates of the mesh normals.",43],[11,"uvs","","Textures coordinates of the mesh.",43],[11,"indices","","Index buffer of the mesh.",43],[1,"Polyline","","Geometric description of a polyline."],[11,"coords","","Coordinates of the polyline vertices.",44],[11,"normals","","Coordinates of the polyline normals.",44],[2,"IndexBuffer","","Different representations of the index buffer."],[12,"UnifiedIndexBuffer","","The vertex, normal, and uvs share the same indices.",45],[12,"SplitIndexBuffer","","The vertex, normal, and uvs have different indices.",45],[3,"parametric_surface_uniform","","Meshing algorithm that uniformly triangulates the parametric space."],[3,"parametric_surface_uniform_with_distance_error","","Uniformly triangulates the parametric space."],[3,"bezier_surface","","Given a set of control points, generates a (non-rational) Bezier surface."],[3,"rational_bezier_surface","","Given a set of weighted control points, generates a rational Bezier surface."],[3,"bezier_curve","","Given a set of control points, generates a (non-rational) Bezier curve."],[3,"rational_bezier_curve","","Given a set of control points, generates a rational Bezier curve."],[3,"capsule","","Generates a capsule."],[3,"unit_cone","","Generates a cone with unit height and diameter."],[3,"cone","","Generates a cone with a given height and diameter."],[3,"cuboid","","Generates a cuboid geometry with a split index buffer."],[3,"unit_cuboid","","Generates a cuboid geometry with a split index buffer."],[3,"rectangle","","The contour of a cuboid lying on the x-y plane."],[3,"unit_rectangle","","The contour of a unit cuboid lying on the x-y plane."],[3,"unit_cylinder","","Generates a cylinder with unit height and diameter."],[3,"cylinder","","Generates a cylinder with a given height and diameter."],[3,"quad","","Adds a double-sided quad to the scene."],[3,"unit_quad","","Adds a double-sided quad with unit size to the scene."],[3,"quad_with_vertices","","Adds a double-sided quad with the specified grid of vertices."],[3,"sphere","","Generates a UV sphere."],[3,"unit_sphere","","Generates a UV sphere centered at the origin and with a unit diameter."],[3,"circle","","Creates a circle lying on the `(x,y)` plane."],[3,"unit_circle","","Creates a circle lying on the `(x,y)` plane."],[3,"convex_hull3d","","Computes the convex hull of a set of 3d points."],[3,"convex_hull2d","","Computes the convex hull of a set of 2d points."],[3,"convex_hull2d_idx","","Computes the convex hull of a set of 2d points and returns only the indices of the hull\nvertices."],[3,"hacd","","Approximate convex decomposition of a triangle mesh."],[0,"utils","","Utilities useful for various generations tasks."],[3,"push_circle","ncollide3df32::procedural::utils","Pushes a discretized counterclockwise circle to a buffer."],[3,"push_xy_arc","","Pushes a discretized counterclockwise circle to a buffer.\nThe circle is contained on the plane spanned by the `x` and `y` axis."],[3,"push_ring_indices","","Creates the faces from two circles with the same discretization."],[3,"push_open_ring_indices","","Creates the faces from two circles with the same discretization."],[3,"push_degenerate_top_ring_indices","","Creates the faces from a circle and a point that is shared by all triangle."],[3,"push_degenerate_open_top_ring_indices","","Creates the faces from a circle and a point that is shared by all triangle."],[3,"push_filled_circle_indices","","Pushes indices so that a circle is filled with triangles. Each triangle will have the\n`base_circle` point in common.\nPushes `nsubdiv - 2` elements to `out`."],[3,"push_rectangle_indices","","Given four corner points, pushes to two counterclockwise triangles to `out`."],[3,"reverse_clockwising","","Reverses the clockwising of a set of faces."],[3,"split_index_buffer","","Duplicates the indices of each triangle on the given index buffer."],[3,"split_index_buffer_and_recover_topology","","Duplicates the indices of each triangle on the given index buffer, giving the same id to each\nidentical vertex."],[0,"path","ncollide3df32::procedural","Path generation."],[1,"PolylinePattern","ncollide3df32::procedural::path","A pattern composed of polyline and two caps."],[1,"PolylinePath","","A path with its sample points given by a polyline."],[1,"ArrowheadCap","","A cap that looks like an arrow."],[1,"NoCap","","A cap that renders nothing."],[2,"PathSample","","A sample point and its associated tangent."],[12,"StartPoint","","A point that starts a new path.",46],[12,"InnerPoint","","A point that is inside of the path currently generated.",46],[12,"EndPoint","","A point that ends the path currently generated.",46],[12,"EndOfSample","","Used when the sampler does not have any other points to generate.",46],[6,"CurveSampler","","A curve sampler."],[9,"next","","Returns the next sample point.",47],[6,"StrokePattern","","A pattern that is replicated along a path."],[9,"stroke","","Generates the mesh using this pattern and the curve sampled by `sampler`.",48],[6,"PolylineCompatibleCap","","Trait to be implemented by caps compatible with a `PolylinePattern`."],[9,"gen_start_cap","","Generates the mesh for the cap at the beginning of a path.",49],[9,"gen_end_cap","","Generates the mesh for the cap at the end of a path.",49],[6,"ToTriMesh","ncollide3df32::procedural","Trait implemented by geometries that can be approximated by a triangle mesh."],[9,"to_trimesh","","Builds a triangle mesh from this geometry.",50],[6,"ToPolyline","","Trait implemented by geometries that can be approximated by a triangle mesh."],[9,"to_polyline","","Builds a triangle mesh from this geometry.",51],[0,"utils","ncollide3df32","Miscelaneous, unsorted generic geometric utilities."],[1,"BacktrackingLineSearch","ncollide3df32::utils","The backtracking line search method."],[1,"HashablePartialEq","","A structure that implements `Eq` and is hashable even if the wrapped data implements only\n`PartialEq`."],[3,"center","","Computes the center of a set of point."],[3,"triangulate","","Triangulates a set of point (sort of) lying on the same 2d plane."],[3,"project_homogeneous","","Project n-d point to a (n-1)-d space, dividing each vector by its `w` component."],[3,"project_homogeneous_to","","Project n-d point to a (n-1)-d space, dividing each vector by its `w` component."],[3,"circumcircle","","Computes the circumcircle of a triangle."],[3,"is_affinely_dependent_triangle","","Tests if three points are exactly aligned."],[3,"is_point_in_triangle","","Tests if a point is inside of a triangle."],[3,"triangle_area","","Computes the area of a triangle."],[3,"triangle_perimeter","","Computes the perimeter of a triangle."],[3,"tetrahedron_volume","","Computes the volume of a tetrahedron."],[3,"tetrahedron_signed_volume","","Computes the signed volume of a tetrahedron."],[3,"tetrahedron_center","","Computes the center of a tetrahedron."],[3,"remove_unused_points","","Given an index buffer, remove from `points` every point that is not indexed."],[3,"dcos","","Computes the n-th derivative of the cosinus function."],[3,"dsin","","Computes the n-th derivative of the sinus function."],[3,"binom","","Computes the binomial coefficient C^k_n (\"k among n\")."],[3,"maximize_with_newton","","Maximizes a real function using the Newton method."],[3,"newton","","Finds the root of a function using the Newton method."],[3,"minimize_with_bfgs","","Minimizes a function using the bfgs method."],[3,"bfgs","","Minimizes a function using the quasi-newton BFGS method."],[3,"cov","","Computes the convariance matrix of a set of points."],[3,"cov_and_center","","Computes the covariance matrix and center of a set of points."],[3,"center_reduce","","Centers and reduces a set of data."],[3,"sort3","","Sorts a set of three values in increasing order."],[0,"symbolic","","Basic symbolic computation system."],[1,"Deriv","ncollide3df32::utils::symbolic","The derivative of `A`."],[1,"DerivU","","The derivative of `A` wrt. `u`."],[1,"DerivV","","The derivative of `A` wrt. `v`."],[1,"SymComp","","The composition operator."],[1,"SymMult","","The multiplication operator."],[1,"SymAdd","","The addition operator."],[1,"SymSub","","The subtraction operator."],[1,"SymNeg","","The negation operator."],[1,"T","","A univariate function of `T`."],[1,"U","","A bivariate function of `U`."],[1,"V","","A bivariate function of `V`."],[1,"Sin","","The sinus function."],[1,"Cos","","The cosinus function."],[1,"Exp","","The exponential function."],[1,"Poly1","","A polynomial function."],[1,"Poly2","","A polynomial function."],[1,"Poly3","","A polynomial function."],[1,"Poly4","","A polynomial function."],[1,"Poly5","","A polynomial function."],[1,"Poly6","","A polynomial function."],[3,"deriv","","The derivative of `A`."],[3,"deriv_u","","The derivative of `A` wrt. `u`."],[3,"deriv_v","","The derivative of `A` wrt. `v`."],[3,"comp","","Symbolic representation of the composition of two functions."],[3,"mult","","Symbolic representation of the multiplication of two functions."],[3,"add","","Symbolic representation of the addition of two functions."],[3,"sub","","Symbolic representation of the subtraction of two functions."],[3,"neg","","Symbolic representation of the negation of a function."],[3,"t","","A univariate function of `t`."],[3,"u","","A bivariate function of `u`."],[3,"v","","A bivariate function of `v`."],[3,"sin","","The sinus function."],[3,"cos","","The cosinus function."],[3,"exp","","The exponential function."],[3,"t1","","A polynomial function."],[3,"t2","","A polynomial function."],[3,"t3","","A polynomial function."],[3,"t4","","A polynomial function."],[3,"t5","","A polynomial function."],[3,"t6","","A polynomial function."],[6,"UnivariateFn","","Trait implemented by smooth univariate functions."],[9,"d0","","Evaluates the function.",52],[10,"ueval","","Same as `d0`.",52],[9,"d1","","Evaluates the first derivative.",52],[9,"d2","","Evaluates the second derivative.",52],[9,"dn","","Evaluates the n-th derivative.",52],[10,"d0_1","","Evaluates the function and its first derivative.",52],[10,"d0_1_2","","Evaluates the function and its first two derivatives.",52],[10,"dn_all","","Evaluates the function and all its derivative, up to the n-th (included).",52],[6,"BivariateFn","","Trait implemented by smooth bivariate functions."],[9,"d0","","Evaluates the function.",53],[10,"beval","","Same as `d0`.",53],[9,"du","","Evaluates the first derivative wrt. `u`.",53],[9,"dv","","Evaluates the firt derivative wrt. `v`.",53],[9,"duu","","Evaluates the second derivative wrt. `u`.",53],[9,"dvv","","Evaluates the second derivative wrt. `v`.",53],[9,"duv","","Evaluates the second derivative wrt. `u` and `v`.",53],[9,"duv_nk","","Evaluate the n-th derivative wrt. `u` and k-th derivative wrt. `v`.",53],[10,"duv_nk_all","","Evaluate all the n-th derivative wrt. `u` and k-th derivative wrt. `v`.",53],[6,"LineSearch","ncollide3df32::utils","Trait for line search methods."],[9,"step_size","","Gets a near-optimal step size for the next descent.",54],[6,"AnyPrivate","",""],[9,"get_dyn_type_id","","The type id of `Self`.",55],[6,"AsBytes","","Trait that transforms thing to a slice of u8."],[9,"as_bytes","","",56],[0,"data","ncollide3df32","Data structure utilities."],[0,"pair","ncollide3df32::data","Hashable pair of objects implementing `HasUid`."],[1,"Pair","ncollide3df32::data::pair","An unordered pair of elements implementing `HasUid`."],[11,"first","","first object of the pair",57],[11,"second","","second object of the pair",57],[1,"PairTWHash","","Tomas Wang based hash function for a `Pair` object."],[10,"decode","","",57],[10,"encode","","",57],[10,"clone","","",57],[10,"new","","Builds a new `Pair`.",57],[10,"eq","","",57],[10,"decode","","",58],[10,"encode","","",58],[10,"new","","Creates a new PairTWHash",58],[10,"hash","","",58],[0,"hash","ncollide3df32::data","Trait for hash functions."],[1,"UintPairTWHash","ncollide3df32::data::hash","Hash function for pairs of `uint`, using the Tomas Wang hash."],[1,"UintTWHash","","Hash function for `uint`."],[3,"key_from_pair","","Combines two `uint` on a single one."],[3,"tomas_wang_hash","","Tomas Wang integer hash function."],[6,"HashFun","","Hash function."],[9,"hash","","Hash function.",59],[10,"decode","","",60],[10,"encode","","",60],[10,"clone","","",60],[10,"new","","Creates a new UintPairTWHash.",60],[10,"hash","","",60],[10,"decode","","",61],[10,"encode","","",61],[10,"clone","","",61],[10,"new","","Creates a new UintTWHash.",61],[10,"hash","","",61],[0,"hash_map","ncollide3df32::data","An hash map with a customizable hash function."],[1,"Entry","ncollide3df32::data::hash_map","Entry of an `HashMap`."],[11,"key","","The key of the entry.",62],[11,"value","","The value of the entry.",62],[1,"HashMap","","Alternative implementation of `HashMap`."],[10,"decode","","",62],[10,"encode","","",62],[10,"clone","","",62],[10,"decode","","",63],[10,"encode","","",63],[10,"clone","","",63],[10,"new","","Creates a new hash map.",63],[10,"new_with_capacity","","Creates a new hash map with a given capacity.",63],[10,"elements","","The elements added to this hash map.",63],[10,"elements_mut","","The elements added to this hash map.",63],[10,"remove_elem_at","","Removes the element at the specified position of the element array.",63],[10,"get_and_remove","","Removes an element and returns its value if it existed.",63],[10,"find_or_insert_lazy","","Same as `self.insert_or_replace(key, value, false)` but with `value` a function which is\ncalled iff. the value does not exist yet. If the functions returns `None`, nothing is\ninserted.",63],[10,"insert_or_replace","","Inserts or replace an element.",63],[10,"len","","",63],[10,"clear","","",63],[10,"contains_key","","",63],[10,"find","","",63],[10,"insert","","Inserts an element on the hash map.",63],[10,"remove","","Remove an element from the hash map.",63],[10,"find_mut","","Gets a mutable reference to an element of the hashmap.",63],[0,"owned_allocation_cache","ncollide3df32::data","Allocation cache for owned objects."],[1,"OwnedAllocationCache","ncollide3df32::data::owned_allocation_cache","Cache for owned objects."],[10,"new","","Initializes the cache.",64],[10,"alloc","","Box a value into a potentially already allocated box.",64],[10,"retain","","Retains a box which can be re-used by the `box` method.",64],[10,"clear","","Clears the cache, destroying any stored pointer.",64],[0,"has_uid","ncollide3df32::data","Objects with an unique identifier."],[6,"HasUid","ncollide3df32::data::has_uid","Trait of objects having an unique identifier."],[9,"uid","","An unique identifier. It should be O(1).",65],[10,"uid","std::gc","",66],[10,"uid","alloc::rc","",67],[10,"uid","alloc::arc","",68],[0,"vec_slice","ncollide3df32::data","Slicing on non-contiguous data."],[1,"VecSlice","ncollide3df32::data::vec_slice","A vector slice with a specific length and stride."],[1,"VecSliceMut","","A mutable vector slice with a specific length and stride."],[10,"len","","",69],[10,"is_empty","","",69],[10,"len","","",70],[10,"is_empty","","",70],[10,"new","","Creates a new immutable slice.",69],[10,"new_unsafe","","Creates a new immutable slice. The size of the data buffer is not checked.",69],[10,"get","","Gets the i-th element of the slice.",69],[10,"unsafe_get","","Gets the i-th element of the slice without bound-checking.",69],[10,"new","","Creates a new mutable slice.",70],[10,"new_unsafe","","Creates a new mutable slice. The size of the data buffer is not checked.",70],[10,"as_slice","","Creates an immutable slice from this mutable slice.",70],[10,"get","","Gets the i-th element of the slice.",70],[10,"get_mut","","Gets a mutable reference to the i-th element of the slice without bound-checking.",70],[10,"unsafe_get","","Gets the i-th element of the slice without bound-checking.",70],[10,"unsafe_get_mut","","Gets a mutable reference to the i-th element of the slice without bound-checking.",70],[10,"copy_from","","Copy the content of another slice.\nBoth slices must have the same length.",70],[0,"math","ncollide3df32","Compilation flags dependent aliases for mathematical types."],[4,"Scalar","ncollide3df32::math","The scalar type."],[4,"Vect","","The vector type."],[4,"Orientation","","The orientation type."],[4,"Matrix","","The transformation matrix type."],[4,"RotationMatrix","","The rotation matrix type."],[4,"AngularInertia","","The inertia tensor type."],[10,"apply","","",71],[10,"to_world_space","","",71],[10,"to_relative_wrt_point","","",71]],"paths":[[6,"HasBoundingVolume"],[6,"BoundingVolume"],[6,"LooseBoundingVolume"],[6,"HasAABB"],[6,"HasBoundingSphere"],[6,"MeshElement"],[6,"Geom"],[6,"ConcaveGeom"],[1,"Ray"],[1,"RayIntersection"],[6,"RayCast"],[1,"Contact"],[6,"Simplex"],[1,"JohnsonSimplex"],[1,"RecursionTemplate"],[2,"GJKResult"],[6,"SurfaceSelector"],[1,"YesSirSurfaceSelector"],[1,"HyperPlaneSurfaceSelector"],[1,"TangentConesSurfaceSelector"],[1,"SurfaceSubdivisionTreeRef"],[1,"SurfaceSubdivisionTreeCache"],[1,"SurfaceSubdivisionTree"],[6,"CollisionDetector"],[6,"GeomGeomCollisionDetector"],[6,"CollisionDetectorFactory"],[6,"BroadPhase"],[6,"InterferencesBroadPhase"],[6,"BoundingVolumeBroadPhase"],[6,"RayCastBroadPhase"],[6,"Dispatcher"],[6,"InertiaTensor"],[6,"Volumetric"],[6,"Implicit"],[6,"HasMargin"],[6,"PreferedSamplingDirections"],[6,"ParametricSurface"],[1,"DBVTLeaf"],[2,"DBVTLeafState"],[2,"BinaryPartition"],[2,"BVTNode"],[6,"BVTVisitor"],[6,"BVTTVisitor"],[1,"TriMesh"],[1,"Polyline"],[2,"IndexBuffer"],[2,"PathSample"],[6,"CurveSampler"],[6,"StrokePattern"],[6,"PolylineCompatibleCap"],[6,"ToTriMesh"],[6,"ToPolyline"],[6,"UnivariateFn"],[6,"BivariateFn"],[6,"LineSearch"],[6,"AnyPrivate"],[6,"AsBytes"],[1,"Pair"],[1,"PairTWHash"],[6,"HashFun"],[1,"UintPairTWHash"],[1,"UintTWHash"],[1,"Entry"],[1,"HashMap"],[1,"OwnedAllocationCache"],[6,"HasUid"],[1,"Gc"],[1,"Rc"],[1,"Arc"],[1,"VecSlice"],[1,"VecSliceMut"],[4,"AngularInertia"]]};

searchIndex['gl'] = {"items":[[0,"","gl",""],[1,"FnPtr","",""],[3,"ActiveShaderProgram","",""],[3,"ActiveTexture","",""],[3,"AttachShader","",""],[3,"BeginConditionalRender","",""],[3,"BeginQuery","",""],[3,"BeginQueryIndexed","",""],[3,"BeginTransformFeedback","",""],[3,"BindAttribLocation","",""],[3,"BindBuffer","",""],[3,"BindBufferBase","",""],[3,"BindBufferRange","",""],[3,"BindFragDataLocation","",""],[3,"BindFragDataLocationIndexed","",""],[3,"BindFramebuffer","",""],[3,"BindImageTexture","",""],[3,"BindProgramPipeline","",""],[3,"BindRenderbuffer","",""],[3,"BindSampler","",""],[3,"BindTexture","",""],[3,"BindTransformFeedback","",""],[3,"BindVertexArray","",""],[3,"BindVertexBuffer","",""],[3,"BlendColor","",""],[3,"BlendEquation","",""],[3,"BlendEquationSeparate","",""],[3,"BlendEquationSeparatei","",""],[3,"BlendEquationi","",""],[3,"BlendFunc","",""],[3,"BlendFuncSeparate","",""],[3,"BlendFuncSeparatei","",""],[3,"BlendFunci","",""],[3,"BlitFramebuffer","",""],[3,"BufferData","",""],[3,"BufferSubData","",""],[3,"CheckFramebufferStatus","",""],[3,"ClampColor","",""],[3,"Clear","",""],[3,"ClearBufferData","",""],[3,"ClearBufferSubData","",""],[3,"ClearBufferfi","",""],[3,"ClearBufferfv","",""],[3,"ClearBufferiv","",""],[3,"ClearBufferuiv","",""],[3,"ClearColor","",""],[3,"ClearDepth","",""],[3,"ClearDepthf","",""],[3,"ClearStencil","",""],[3,"ClientWaitSync","",""],[3,"ColorMask","",""],[3,"ColorMaski","",""],[3,"ColorP3ui","",""],[3,"ColorP3uiv","",""],[3,"ColorP4ui","",""],[3,"ColorP4uiv","",""],[3,"CompileShader","",""],[3,"CompressedTexImage1D","",""],[3,"CompressedTexImage2D","",""],[3,"CompressedTexImage3D","",""],[3,"CompressedTexSubImage1D","",""],[3,"CompressedTexSubImage2D","",""],[3,"CompressedTexSubImage3D","",""],[3,"CopyBufferSubData","",""],[3,"CopyImageSubData","",""],[3,"CopyTexImage1D","",""],[3,"CopyTexImage2D","",""],[3,"CopyTexSubImage1D","",""],[3,"CopyTexSubImage2D","",""],[3,"CopyTexSubImage3D","",""],[3,"CreateProgram","",""],[3,"CreateShader","",""],[3,"CreateShaderProgramv","",""],[3,"CullFace","",""],[3,"DebugMessageCallback","",""],[3,"DebugMessageControl","",""],[3,"DebugMessageInsert","",""],[3,"DeleteBuffers","",""],[3,"DeleteFramebuffers","",""],[3,"DeleteProgram","",""],[3,"DeleteProgramPipelines","",""],[3,"DeleteQueries","",""],[3,"DeleteRenderbuffers","",""],[3,"DeleteSamplers","",""],[3,"DeleteShader","",""],[3,"DeleteSync","",""],[3,"DeleteTextures","",""],[3,"DeleteTransformFeedbacks","",""],[3,"DeleteVertexArrays","",""],[3,"DepthFunc","",""],[3,"DepthMask","",""],[3,"DepthRange","",""],[3,"DepthRangeArrayv","",""],[3,"DepthRangeIndexed","",""],[3,"DepthRangef","",""],[3,"DetachShader","",""],[3,"Disable","",""],[3,"DisableVertexAttribArray","",""],[3,"Disablei","",""],[3,"DispatchCompute","",""],[3,"DispatchComputeIndirect","",""],[3,"DrawArrays","",""],[3,"DrawArraysIndirect","",""],[3,"DrawArraysInstanced","",""],[3,"DrawArraysInstancedBaseInstance","",""],[3,"DrawBuffer","",""],[3,"DrawBuffers","",""],[3,"DrawElements","",""],[3,"DrawElementsBaseVertex","",""],[3,"DrawElementsIndirect","",""],[3,"DrawElementsInstanced","",""],[3,"DrawElementsInstancedBaseInstance","",""],[3,"DrawElementsInstancedBaseVertex","",""],[3,"DrawElementsInstancedBaseVertexBaseInstance","",""],[3,"DrawRangeElements","",""],[3,"DrawRangeElementsBaseVertex","",""],[3,"DrawTransformFeedback","",""],[3,"DrawTransformFeedbackInstanced","",""],[3,"DrawTransformFeedbackStream","",""],[3,"DrawTransformFeedbackStreamInstanced","",""],[3,"Enable","",""],[3,"EnableVertexAttribArray","",""],[3,"Enablei","",""],[3,"EndConditionalRender","",""],[3,"EndQuery","",""],[3,"EndQueryIndexed","",""],[3,"EndTransformFeedback","",""],[3,"FenceSync","",""],[3,"Finish","",""],[3,"Flush","",""],[3,"FlushMappedBufferRange","",""],[3,"FramebufferParameteri","",""],[3,"FramebufferRenderbuffer","",""],[3,"FramebufferTexture","",""],[3,"FramebufferTexture1D","",""],[3,"FramebufferTexture2D","",""],[3,"FramebufferTexture3D","",""],[3,"FramebufferTextureLayer","",""],[3,"FrontFace","",""],[3,"GenBuffers","",""],[3,"GenFramebuffers","",""],[3,"GenProgramPipelines","",""],[3,"GenQueries","",""],[3,"GenRenderbuffers","",""],[3,"GenSamplers","",""],[3,"GenTextures","",""],[3,"GenTransformFeedbacks","",""],[3,"GenVertexArrays","",""],[3,"GenerateMipmap","",""],[3,"GetActiveAtomicCounterBufferiv","",""],[3,"GetActiveAttrib","",""],[3,"GetActiveSubroutineName","",""],[3,"GetActiveSubroutineUniformName","",""],[3,"GetActiveSubroutineUniformiv","",""],[3,"GetActiveUniform","",""],[3,"GetActiveUniformBlockName","",""],[3,"GetActiveUniformBlockiv","",""],[3,"GetActiveUniformName","",""],[3,"GetActiveUniformsiv","",""],[3,"GetAttachedShaders","",""],[3,"GetAttribLocation","",""],[3,"GetBooleani_v","",""],[3,"GetBooleanv","",""],[3,"GetBufferParameteri64v","",""],[3,"GetBufferParameteriv","",""],[3,"GetBufferPointerv","",""],[3,"GetBufferSubData","",""],[3,"GetCompressedTexImage","",""],[3,"GetDebugMessageLog","",""],[3,"GetDoublei_v","",""],[3,"GetDoublev","",""],[3,"GetError","",""],[3,"GetFloati_v","",""],[3,"GetFloatv","",""],[3,"GetFragDataIndex","",""],[3,"GetFragDataLocation","",""],[3,"GetFramebufferAttachmentParameteriv","",""],[3,"GetFramebufferParameteriv","",""],[3,"GetInteger64i_v","",""],[3,"GetInteger64v","",""],[3,"GetIntegeri_v","",""],[3,"GetIntegerv","",""],[3,"GetInternalformati64v","",""],[3,"GetInternalformativ","",""],[3,"GetMultisamplefv","",""],[3,"GetObjectLabel","",""],[3,"GetObjectPtrLabel","",""],[3,"GetProgramBinary","",""],[3,"GetProgramInfoLog","",""],[3,"GetProgramInterfaceiv","",""],[3,"GetProgramPipelineInfoLog","",""],[3,"GetProgramPipelineiv","",""],[3,"GetProgramResourceIndex","",""],[3,"GetProgramResourceLocation","",""],[3,"GetProgramResourceLocationIndex","",""],[3,"GetProgramResourceName","",""],[3,"GetProgramResourceiv","",""],[3,"GetProgramStageiv","",""],[3,"GetProgramiv","",""],[3,"GetQueryIndexediv","",""],[3,"GetQueryObjecti64v","",""],[3,"GetQueryObjectiv","",""],[3,"GetQueryObjectui64v","",""],[3,"GetQueryObjectuiv","",""],[3,"GetQueryiv","",""],[3,"GetRenderbufferParameteriv","",""],[3,"GetSamplerParameterIiv","",""],[3,"GetSamplerParameterIuiv","",""],[3,"GetSamplerParameterfv","",""],[3,"GetSamplerParameteriv","",""],[3,"GetShaderInfoLog","",""],[3,"GetShaderPrecisionFormat","",""],[3,"GetShaderSource","",""],[3,"GetShaderiv","",""],[3,"GetString","",""],[3,"GetStringi","",""],[3,"GetSubroutineIndex","",""],[3,"GetSubroutineUniformLocation","",""],[3,"GetSynciv","",""],[3,"GetTexImage","",""],[3,"GetTexLevelParameterfv","",""],[3,"GetTexLevelParameteriv","",""],[3,"GetTexParameterIiv","",""],[3,"GetTexParameterIuiv","",""],[3,"GetTexParameterfv","",""],[3,"GetTexParameteriv","",""],[3,"GetTransformFeedbackVarying","",""],[3,"GetUniformBlockIndex","",""],[3,"GetUniformIndices","",""],[3,"GetUniformLocation","",""],[3,"GetUniformSubroutineuiv","",""],[3,"GetUniformdv","",""],[3,"GetUniformfv","",""],[3,"GetUniformiv","",""],[3,"GetUniformuiv","",""],[3,"GetVertexAttribIiv","",""],[3,"GetVertexAttribIuiv","",""],[3,"GetVertexAttribLdv","",""],[3,"GetVertexAttribPointerv","",""],[3,"GetVertexAttribdv","",""],[3,"GetVertexAttribfv","",""],[3,"GetVertexAttribiv","",""],[3,"Hint","",""],[3,"InvalidateBufferData","",""],[3,"InvalidateBufferSubData","",""],[3,"InvalidateFramebuffer","",""],[3,"InvalidateSubFramebuffer","",""],[3,"InvalidateTexImage","",""],[3,"InvalidateTexSubImage","",""],[3,"IsBuffer","",""],[3,"IsEnabled","",""],[3,"IsEnabledi","",""],[3,"IsFramebuffer","",""],[3,"IsProgram","",""],[3,"IsProgramPipeline","",""],[3,"IsQuery","",""],[3,"IsRenderbuffer","",""],[3,"IsSampler","",""],[3,"IsShader","",""],[3,"IsSync","",""],[3,"IsTexture","",""],[3,"IsTransformFeedback","",""],[3,"IsVertexArray","",""],[3,"LineWidth","",""],[3,"LinkProgram","",""],[3,"LogicOp","",""],[3,"MapBuffer","",""],[3,"MapBufferRange","",""],[3,"MemoryBarrier","",""],[3,"MinSampleShading","",""],[3,"MultiDrawArrays","",""],[3,"MultiDrawArraysIndirect","",""],[3,"MultiDrawElements","",""],[3,"MultiDrawElementsBaseVertex","",""],[3,"MultiDrawElementsIndirect","",""],[3,"MultiTexCoordP1ui","",""],[3,"MultiTexCoordP1uiv","",""],[3,"MultiTexCoordP2ui","",""],[3,"MultiTexCoordP2uiv","",""],[3,"MultiTexCoordP3ui","",""],[3,"MultiTexCoordP3uiv","",""],[3,"MultiTexCoordP4ui","",""],[3,"MultiTexCoordP4uiv","",""],[3,"NormalP3ui","",""],[3,"NormalP3uiv","",""],[3,"ObjectLabel","",""],[3,"ObjectPtrLabel","",""],[3,"PatchParameterfv","",""],[3,"PatchParameteri","",""],[3,"PauseTransformFeedback","",""],[3,"PixelStoref","",""],[3,"PixelStorei","",""],[3,"PointParameterf","",""],[3,"PointParameterfv","",""],[3,"PointParameteri","",""],[3,"PointParameteriv","",""],[3,"PointSize","",""],[3,"PolygonMode","",""],[3,"PolygonOffset","",""],[3,"PopDebugGroup","",""],[3,"PrimitiveRestartIndex","",""],[3,"ProgramBinary","",""],[3,"ProgramParameteri","",""],[3,"ProgramUniform1d","",""],[3,"ProgramUniform1dv","",""],[3,"ProgramUniform1f","",""],[3,"ProgramUniform1fv","",""],[3,"ProgramUniform1i","",""],[3,"ProgramUniform1iv","",""],[3,"ProgramUniform1ui","",""],[3,"ProgramUniform1uiv","",""],[3,"ProgramUniform2d","",""],[3,"ProgramUniform2dv","",""],[3,"ProgramUniform2f","",""],[3,"ProgramUniform2fv","",""],[3,"ProgramUniform2i","",""],[3,"ProgramUniform2iv","",""],[3,"ProgramUniform2ui","",""],[3,"ProgramUniform2uiv","",""],[3,"ProgramUniform3d","",""],[3,"ProgramUniform3dv","",""],[3,"ProgramUniform3f","",""],[3,"ProgramUniform3fv","",""],[3,"ProgramUniform3i","",""],[3,"ProgramUniform3iv","",""],[3,"ProgramUniform3ui","",""],[3,"ProgramUniform3uiv","",""],[3,"ProgramUniform4d","",""],[3,"ProgramUniform4dv","",""],[3,"ProgramUniform4f","",""],[3,"ProgramUniform4fv","",""],[3,"ProgramUniform4i","",""],[3,"ProgramUniform4iv","",""],[3,"ProgramUniform4ui","",""],[3,"ProgramUniform4uiv","",""],[3,"ProgramUniformMatrix2dv","",""],[3,"ProgramUniformMatrix2fv","",""],[3,"ProgramUniformMatrix2x3dv","",""],[3,"ProgramUniformMatrix2x3fv","",""],[3,"ProgramUniformMatrix2x4dv","",""],[3,"ProgramUniformMatrix2x4fv","",""],[3,"ProgramUniformMatrix3dv","",""],[3,"ProgramUniformMatrix3fv","",""],[3,"ProgramUniformMatrix3x2dv","",""],[3,"ProgramUniformMatrix3x2fv","",""],[3,"ProgramUniformMatrix3x4dv","",""],[3,"ProgramUniformMatrix3x4fv","",""],[3,"ProgramUniformMatrix4dv","",""],[3,"ProgramUniformMatrix4fv","",""],[3,"ProgramUniformMatrix4x2dv","",""],[3,"ProgramUniformMatrix4x2fv","",""],[3,"ProgramUniformMatrix4x3dv","",""],[3,"ProgramUniformMatrix4x3fv","",""],[3,"ProvokingVertex","",""],[3,"PushDebugGroup","",""],[3,"QueryCounter","",""],[3,"ReadBuffer","",""],[3,"ReadPixels","",""],[3,"ReleaseShaderCompiler","",""],[3,"RenderbufferStorage","",""],[3,"RenderbufferStorageMultisample","",""],[3,"ResumeTransformFeedback","",""],[3,"SampleCoverage","",""],[3,"SampleMaski","",""],[3,"SamplerParameterIiv","",""],[3,"SamplerParameterIuiv","",""],[3,"SamplerParameterf","",""],[3,"SamplerParameterfv","",""],[3,"SamplerParameteri","",""],[3,"SamplerParameteriv","",""],[3,"Scissor","",""],[3,"ScissorArrayv","",""],[3,"ScissorIndexed","",""],[3,"ScissorIndexedv","",""],[3,"SecondaryColorP3ui","",""],[3,"SecondaryColorP3uiv","",""],[3,"ShaderBinary","",""],[3,"ShaderSource","",""],[3,"ShaderStorageBlockBinding","",""],[3,"StencilFunc","",""],[3,"StencilFuncSeparate","",""],[3,"StencilMask","",""],[3,"StencilMaskSeparate","",""],[3,"StencilOp","",""],[3,"StencilOpSeparate","",""],[3,"TexBuffer","",""],[3,"TexBufferRange","",""],[3,"TexCoordP1ui","",""],[3,"TexCoordP1uiv","",""],[3,"TexCoordP2ui","",""],[3,"TexCoordP2uiv","",""],[3,"TexCoordP3ui","",""],[3,"TexCoordP3uiv","",""],[3,"TexCoordP4ui","",""],[3,"TexCoordP4uiv","",""],[3,"TexImage1D","",""],[3,"TexImage2D","",""],[3,"TexImage2DMultisample","",""],[3,"TexImage3D","",""],[3,"TexImage3DMultisample","",""],[3,"TexParameterIiv","",""],[3,"TexParameterIuiv","",""],[3,"TexParameterf","",""],[3,"TexParameterfv","",""],[3,"TexParameteri","",""],[3,"TexParameteriv","",""],[3,"TexStorage1D","",""],[3,"TexStorage2D","",""],[3,"TexStorage2DMultisample","",""],[3,"TexStorage3D","",""],[3,"TexStorage3DMultisample","",""],[3,"TexSubImage1D","",""],[3,"TexSubImage2D","",""],[3,"TexSubImage3D","",""],[3,"TextureView","",""],[3,"TransformFeedbackVaryings","",""],[3,"Uniform1d","",""],[3,"Uniform1dv","",""],[3,"Uniform1f","",""],[3,"Uniform1fv","",""],[3,"Uniform1i","",""],[3,"Uniform1iv","",""],[3,"Uniform1ui","",""],[3,"Uniform1uiv","",""],[3,"Uniform2d","",""],[3,"Uniform2dv","",""],[3,"Uniform2f","",""],[3,"Uniform2fv","",""],[3,"Uniform2i","",""],[3,"Uniform2iv","",""],[3,"Uniform2ui","",""],[3,"Uniform2uiv","",""],[3,"Uniform3d","",""],[3,"Uniform3dv","",""],[3,"Uniform3f","",""],[3,"Uniform3fv","",""],[3,"Uniform3i","",""],[3,"Uniform3iv","",""],[3,"Uniform3ui","",""],[3,"Uniform3uiv","",""],[3,"Uniform4d","",""],[3,"Uniform4dv","",""],[3,"Uniform4f","",""],[3,"Uniform4fv","",""],[3,"Uniform4i","",""],[3,"Uniform4iv","",""],[3,"Uniform4ui","",""],[3,"Uniform4uiv","",""],[3,"UniformBlockBinding","",""],[3,"UniformMatrix2dv","",""],[3,"UniformMatrix2fv","",""],[3,"UniformMatrix2x3dv","",""],[3,"UniformMatrix2x3fv","",""],[3,"UniformMatrix2x4dv","",""],[3,"UniformMatrix2x4fv","",""],[3,"UniformMatrix3dv","",""],[3,"UniformMatrix3fv","",""],[3,"UniformMatrix3x2dv","",""],[3,"UniformMatrix3x2fv","",""],[3,"UniformMatrix3x4dv","",""],[3,"UniformMatrix3x4fv","",""],[3,"UniformMatrix4dv","",""],[3,"UniformMatrix4fv","",""],[3,"UniformMatrix4x2dv","",""],[3,"UniformMatrix4x2fv","",""],[3,"UniformMatrix4x3dv","",""],[3,"UniformMatrix4x3fv","",""],[3,"UniformSubroutinesuiv","",""],[3,"UnmapBuffer","",""],[3,"UseProgram","",""],[3,"UseProgramStages","",""],[3,"ValidateProgram","",""],[3,"ValidateProgramPipeline","",""],[3,"VertexAttrib1d","",""],[3,"VertexAttrib1dv","",""],[3,"VertexAttrib1f","",""],[3,"VertexAttrib1fv","",""],[3,"VertexAttrib1s","",""],[3,"VertexAttrib1sv","",""],[3,"VertexAttrib2d","",""],[3,"VertexAttrib2dv","",""],[3,"VertexAttrib2f","",""],[3,"VertexAttrib2fv","",""],[3,"VertexAttrib2s","",""],[3,"VertexAttrib2sv","",""],[3,"VertexAttrib3d","",""],[3,"VertexAttrib3dv","",""],[3,"VertexAttrib3f","",""],[3,"VertexAttrib3fv","",""],[3,"VertexAttrib3s","",""],[3,"VertexAttrib3sv","",""],[3,"VertexAttrib4Nbv","",""],[3,"VertexAttrib4Niv","",""],[3,"VertexAttrib4Nsv","",""],[3,"VertexAttrib4Nub","",""],[3,"VertexAttrib4Nubv","",""],[3,"VertexAttrib4Nuiv","",""],[3,"VertexAttrib4Nusv","",""],[3,"VertexAttrib4bv","",""],[3,"VertexAttrib4d","",""],[3,"VertexAttrib4dv","",""],[3,"VertexAttrib4f","",""],[3,"VertexAttrib4fv","",""],[3,"VertexAttrib4iv","",""],[3,"VertexAttrib4s","",""],[3,"VertexAttrib4sv","",""],[3,"VertexAttrib4ubv","",""],[3,"VertexAttrib4uiv","",""],[3,"VertexAttrib4usv","",""],[3,"VertexAttribBinding","",""],[3,"VertexAttribDivisor","",""],[3,"VertexAttribFormat","",""],[3,"VertexAttribI1i","",""],[3,"VertexAttribI1iv","",""],[3,"VertexAttribI1ui","",""],[3,"VertexAttribI1uiv","",""],[3,"VertexAttribI2i","",""],[3,"VertexAttribI2iv","",""],[3,"VertexAttribI2ui","",""],[3,"VertexAttribI2uiv","",""],[3,"VertexAttribI3i","",""],[3,"VertexAttribI3iv","",""],[3,"VertexAttribI3ui","",""],[3,"VertexAttribI3uiv","",""],[3,"VertexAttribI4bv","",""],[3,"VertexAttribI4i","",""],[3,"VertexAttribI4iv","",""],[3,"VertexAttribI4sv","",""],[3,"VertexAttribI4ubv","",""],[3,"VertexAttribI4ui","",""],[3,"VertexAttribI4uiv","",""],[3,"VertexAttribI4usv","",""],[3,"VertexAttribIFormat","",""],[3,"VertexAttribIPointer","",""],[3,"VertexAttribL1d","",""],[3,"VertexAttribL1dv","",""],[3,"VertexAttribL2d","",""],[3,"VertexAttribL2dv","",""],[3,"VertexAttribL3d","",""],[3,"VertexAttribL3dv","",""],[3,"VertexAttribL4d","",""],[3,"VertexAttribL4dv","",""],[3,"VertexAttribLFormat","",""],[3,"VertexAttribLPointer","",""],[3,"VertexAttribP1ui","",""],[3,"VertexAttribP1uiv","",""],[3,"VertexAttribP2ui","",""],[3,"VertexAttribP2uiv","",""],[3,"VertexAttribP3ui","",""],[3,"VertexAttribP3uiv","",""],[3,"VertexAttribP4ui","",""],[3,"VertexAttribP4uiv","",""],[3,"VertexAttribPointer","",""],[3,"VertexBindingDivisor","",""],[3,"VertexP2ui","",""],[3,"VertexP2uiv","",""],[3,"VertexP3ui","",""],[3,"VertexP3uiv","",""],[3,"VertexP4ui","",""],[3,"VertexP4uiv","",""],[3,"Viewport","",""],[3,"ViewportArrayv","",""],[3,"ViewportIndexedf","",""],[3,"ViewportIndexedfv","",""],[3,"WaitSync","",""],[3,"load_with","","Load each OpenGL symbol using a custom load function. This allows for the\nuse of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`."],[0,"types","",""],[1,"__GLsync","gl::types",""],[1,"_cl_context","",""],[1,"_cl_event","",""],[4,"GLenum","",""],[4,"GLboolean","",""],[4,"GLbitfield","",""],[4,"GLvoid","",""],[4,"GLbyte","",""],[4,"GLshort","",""],[4,"GLint","",""],[4,"GLclampx","",""],[4,"GLubyte","",""],[4,"GLushort","",""],[4,"GLuint","",""],[4,"GLsizei","",""],[4,"GLfloat","",""],[4,"GLclampf","",""],[4,"GLdouble","",""],[4,"GLclampd","",""],[4,"GLeglImageOES","",""],[4,"GLchar","",""],[4,"GLcharARB","",""],[4,"GLhandleARB","",""],[4,"GLhalfARB","",""],[4,"GLhalf","",""],[4,"GLfixed","",""],[4,"GLintptr","",""],[4,"GLsizeiptr","",""],[4,"GLint64","",""],[4,"GLuint64","",""],[4,"GLintptrARB","",""],[4,"GLsizeiptrARB","",""],[4,"GLint64EXT","",""],[4,"GLuint64EXT","",""],[4,"GLsync","",""],[4,"GLDEBUGPROC","",""],[4,"GLDEBUGPROCARB","",""],[4,"GLDEBUGPROCKHR","",""],[4,"GLDEBUGPROCAMD","",""],[4,"GLhalfNV","",""],[4,"GLvdpauSurfaceNV","",""],[0,"ActiveShaderProgram","gl",""],[3,"is_loaded","gl::ActiveShaderProgram",""],[3,"load_with","",""],[0,"ActiveTexture","gl",""],[3,"is_loaded","gl::ActiveTexture",""],[3,"load_with","",""],[0,"AttachShader","gl",""],[3,"is_loaded","gl::AttachShader",""],[3,"load_with","",""],[0,"BeginConditionalRender","gl",""],[3,"is_loaded","gl::BeginConditionalRender",""],[3,"load_with","",""],[0,"BeginQuery","gl",""],[3,"is_loaded","gl::BeginQuery",""],[3,"load_with","",""],[0,"BeginQueryIndexed","gl",""],[3,"is_loaded","gl::BeginQueryIndexed",""],[3,"load_with","",""],[0,"BeginTransformFeedback","gl",""],[3,"is_loaded","gl::BeginTransformFeedback",""],[3,"load_with","",""],[0,"BindAttribLocation","gl",""],[3,"is_loaded","gl::BindAttribLocation",""],[3,"load_with","",""],[0,"BindBuffer","gl",""],[3,"is_loaded","gl::BindBuffer",""],[3,"load_with","",""],[0,"BindBufferBase","gl",""],[3,"is_loaded","gl::BindBufferBase",""],[3,"load_with","",""],[0,"BindBufferRange","gl",""],[3,"is_loaded","gl::BindBufferRange",""],[3,"load_with","",""],[0,"BindFragDataLocation","gl",""],[3,"is_loaded","gl::BindFragDataLocation",""],[3,"load_with","",""],[0,"BindFragDataLocationIndexed","gl",""],[3,"is_loaded","gl::BindFragDataLocationIndexed",""],[3,"load_with","",""],[0,"BindFramebuffer","gl",""],[3,"is_loaded","gl::BindFramebuffer",""],[3,"load_with","",""],[0,"BindImageTexture","gl",""],[3,"is_loaded","gl::BindImageTexture",""],[3,"load_with","",""],[0,"BindProgramPipeline","gl",""],[3,"is_loaded","gl::BindProgramPipeline",""],[3,"load_with","",""],[0,"BindRenderbuffer","gl",""],[3,"is_loaded","gl::BindRenderbuffer",""],[3,"load_with","",""],[0,"BindSampler","gl",""],[3,"is_loaded","gl::BindSampler",""],[3,"load_with","",""],[0,"BindTexture","gl",""],[3,"is_loaded","gl::BindTexture",""],[3,"load_with","",""],[0,"BindTransformFeedback","gl",""],[3,"is_loaded","gl::BindTransformFeedback",""],[3,"load_with","",""],[0,"BindVertexArray","gl",""],[3,"is_loaded","gl::BindVertexArray",""],[3,"load_with","",""],[0,"BindVertexBuffer","gl",""],[3,"is_loaded","gl::BindVertexBuffer",""],[3,"load_with","",""],[0,"BlendColor","gl",""],[3,"is_loaded","gl::BlendColor",""],[3,"load_with","",""],[0,"BlendEquation","gl",""],[3,"is_loaded","gl::BlendEquation",""],[3,"load_with","",""],[0,"BlendEquationSeparate","gl",""],[3,"is_loaded","gl::BlendEquationSeparate",""],[3,"load_with","",""],[0,"BlendEquationSeparatei","gl",""],[3,"is_loaded","gl::BlendEquationSeparatei",""],[3,"load_with","",""],[0,"BlendEquationi","gl",""],[3,"is_loaded","gl::BlendEquationi",""],[3,"load_with","",""],[0,"BlendFunc","gl",""],[3,"is_loaded","gl::BlendFunc",""],[3,"load_with","",""],[0,"BlendFuncSeparate","gl",""],[3,"is_loaded","gl::BlendFuncSeparate",""],[3,"load_with","",""],[0,"BlendFuncSeparatei","gl",""],[3,"is_loaded","gl::BlendFuncSeparatei",""],[3,"load_with","",""],[0,"BlendFunci","gl",""],[3,"is_loaded","gl::BlendFunci",""],[3,"load_with","",""],[0,"BlitFramebuffer","gl",""],[3,"is_loaded","gl::BlitFramebuffer",""],[3,"load_with","",""],[0,"BufferData","gl",""],[3,"is_loaded","gl::BufferData",""],[3,"load_with","",""],[0,"BufferSubData","gl",""],[3,"is_loaded","gl::BufferSubData",""],[3,"load_with","",""],[0,"CheckFramebufferStatus","gl",""],[3,"is_loaded","gl::CheckFramebufferStatus",""],[3,"load_with","",""],[0,"ClampColor","gl",""],[3,"is_loaded","gl::ClampColor",""],[3,"load_with","",""],[0,"Clear","gl",""],[3,"is_loaded","gl::Clear",""],[3,"load_with","",""],[0,"ClearBufferData","gl",""],[3,"is_loaded","gl::ClearBufferData",""],[3,"load_with","",""],[0,"ClearBufferSubData","gl",""],[3,"is_loaded","gl::ClearBufferSubData",""],[3,"load_with","",""],[0,"ClearBufferfi","gl",""],[3,"is_loaded","gl::ClearBufferfi",""],[3,"load_with","",""],[0,"ClearBufferfv","gl",""],[3,"is_loaded","gl::ClearBufferfv",""],[3,"load_with","",""],[0,"ClearBufferiv","gl",""],[3,"is_loaded","gl::ClearBufferiv",""],[3,"load_with","",""],[0,"ClearBufferuiv","gl",""],[3,"is_loaded","gl::ClearBufferuiv",""],[3,"load_with","",""],[0,"ClearColor","gl",""],[3,"is_loaded","gl::ClearColor",""],[3,"load_with","",""],[0,"ClearDepth","gl",""],[3,"is_loaded","gl::ClearDepth",""],[3,"load_with","",""],[0,"ClearDepthf","gl",""],[3,"is_loaded","gl::ClearDepthf",""],[3,"load_with","",""],[0,"ClearStencil","gl",""],[3,"is_loaded","gl::ClearStencil",""],[3,"load_with","",""],[0,"ClientWaitSync","gl",""],[3,"is_loaded","gl::ClientWaitSync",""],[3,"load_with","",""],[0,"ColorMask","gl",""],[3,"is_loaded","gl::ColorMask",""],[3,"load_with","",""],[0,"ColorMaski","gl",""],[3,"is_loaded","gl::ColorMaski",""],[3,"load_with","",""],[0,"ColorP3ui","gl",""],[3,"is_loaded","gl::ColorP3ui",""],[3,"load_with","",""],[0,"ColorP3uiv","gl",""],[3,"is_loaded","gl::ColorP3uiv",""],[3,"load_with","",""],[0,"ColorP4ui","gl",""],[3,"is_loaded","gl::ColorP4ui",""],[3,"load_with","",""],[0,"ColorP4uiv","gl",""],[3,"is_loaded","gl::ColorP4uiv",""],[3,"load_with","",""],[0,"CompileShader","gl",""],[3,"is_loaded","gl::CompileShader",""],[3,"load_with","",""],[0,"CompressedTexImage1D","gl",""],[3,"is_loaded","gl::CompressedTexImage1D",""],[3,"load_with","",""],[0,"CompressedTexImage2D","gl",""],[3,"is_loaded","gl::CompressedTexImage2D",""],[3,"load_with","",""],[0,"CompressedTexImage3D","gl",""],[3,"is_loaded","gl::CompressedTexImage3D",""],[3,"load_with","",""],[0,"CompressedTexSubImage1D","gl",""],[3,"is_loaded","gl::CompressedTexSubImage1D",""],[3,"load_with","",""],[0,"CompressedTexSubImage2D","gl",""],[3,"is_loaded","gl::CompressedTexSubImage2D",""],[3,"load_with","",""],[0,"CompressedTexSubImage3D","gl",""],[3,"is_loaded","gl::CompressedTexSubImage3D",""],[3,"load_with","",""],[0,"CopyBufferSubData","gl",""],[3,"is_loaded","gl::CopyBufferSubData",""],[3,"load_with","",""],[0,"CopyImageSubData","gl",""],[3,"is_loaded","gl::CopyImageSubData",""],[3,"load_with","",""],[0,"CopyTexImage1D","gl",""],[3,"is_loaded","gl::CopyTexImage1D",""],[3,"load_with","",""],[0,"CopyTexImage2D","gl",""],[3,"is_loaded","gl::CopyTexImage2D",""],[3,"load_with","",""],[0,"CopyTexSubImage1D","gl",""],[3,"is_loaded","gl::CopyTexSubImage1D",""],[3,"load_with","",""],[0,"CopyTexSubImage2D","gl",""],[3,"is_loaded","gl::CopyTexSubImage2D",""],[3,"load_with","",""],[0,"CopyTexSubImage3D","gl",""],[3,"is_loaded","gl::CopyTexSubImage3D",""],[3,"load_with","",""],[0,"CreateProgram","gl",""],[3,"is_loaded","gl::CreateProgram",""],[3,"load_with","",""],[0,"CreateShader","gl",""],[3,"is_loaded","gl::CreateShader",""],[3,"load_with","",""],[0,"CreateShaderProgramv","gl",""],[3,"is_loaded","gl::CreateShaderProgramv",""],[3,"load_with","",""],[0,"CullFace","gl",""],[3,"is_loaded","gl::CullFace",""],[3,"load_with","",""],[0,"DebugMessageCallback","gl",""],[3,"is_loaded","gl::DebugMessageCallback",""],[3,"load_with","",""],[0,"DebugMessageControl","gl",""],[3,"is_loaded","gl::DebugMessageControl",""],[3,"load_with","",""],[0,"DebugMessageInsert","gl",""],[3,"is_loaded","gl::DebugMessageInsert",""],[3,"load_with","",""],[0,"DeleteBuffers","gl",""],[3,"is_loaded","gl::DeleteBuffers",""],[3,"load_with","",""],[0,"DeleteFramebuffers","gl",""],[3,"is_loaded","gl::DeleteFramebuffers",""],[3,"load_with","",""],[0,"DeleteProgram","gl",""],[3,"is_loaded","gl::DeleteProgram",""],[3,"load_with","",""],[0,"DeleteProgramPipelines","gl",""],[3,"is_loaded","gl::DeleteProgramPipelines",""],[3,"load_with","",""],[0,"DeleteQueries","gl",""],[3,"is_loaded","gl::DeleteQueries",""],[3,"load_with","",""],[0,"DeleteRenderbuffers","gl",""],[3,"is_loaded","gl::DeleteRenderbuffers",""],[3,"load_with","",""],[0,"DeleteSamplers","gl",""],[3,"is_loaded","gl::DeleteSamplers",""],[3,"load_with","",""],[0,"DeleteShader","gl",""],[3,"is_loaded","gl::DeleteShader",""],[3,"load_with","",""],[0,"DeleteSync","gl",""],[3,"is_loaded","gl::DeleteSync",""],[3,"load_with","",""],[0,"DeleteTextures","gl",""],[3,"is_loaded","gl::DeleteTextures",""],[3,"load_with","",""],[0,"DeleteTransformFeedbacks","gl",""],[3,"is_loaded","gl::DeleteTransformFeedbacks",""],[3,"load_with","",""],[0,"DeleteVertexArrays","gl",""],[3,"is_loaded","gl::DeleteVertexArrays",""],[3,"load_with","",""],[0,"DepthFunc","gl",""],[3,"is_loaded","gl::DepthFunc",""],[3,"load_with","",""],[0,"DepthMask","gl",""],[3,"is_loaded","gl::DepthMask",""],[3,"load_with","",""],[0,"DepthRange","gl",""],[3,"is_loaded","gl::DepthRange",""],[3,"load_with","",""],[0,"DepthRangeArrayv","gl",""],[3,"is_loaded","gl::DepthRangeArrayv",""],[3,"load_with","",""],[0,"DepthRangeIndexed","gl",""],[3,"is_loaded","gl::DepthRangeIndexed",""],[3,"load_with","",""],[0,"DepthRangef","gl",""],[3,"is_loaded","gl::DepthRangef",""],[3,"load_with","",""],[0,"DetachShader","gl",""],[3,"is_loaded","gl::DetachShader",""],[3,"load_with","",""],[0,"Disable","gl",""],[3,"is_loaded","gl::Disable",""],[3,"load_with","",""],[0,"DisableVertexAttribArray","gl",""],[3,"is_loaded","gl::DisableVertexAttribArray",""],[3,"load_with","",""],[0,"Disablei","gl",""],[3,"is_loaded","gl::Disablei",""],[3,"load_with","",""],[0,"DispatchCompute","gl",""],[3,"is_loaded","gl::DispatchCompute",""],[3,"load_with","",""],[0,"DispatchComputeIndirect","gl",""],[3,"is_loaded","gl::DispatchComputeIndirect",""],[3,"load_with","",""],[0,"DrawArrays","gl",""],[3,"is_loaded","gl::DrawArrays",""],[3,"load_with","",""],[0,"DrawArraysIndirect","gl",""],[3,"is_loaded","gl::DrawArraysIndirect",""],[3,"load_with","",""],[0,"DrawArraysInstanced","gl",""],[3,"is_loaded","gl::DrawArraysInstanced",""],[3,"load_with","",""],[0,"DrawArraysInstancedBaseInstance","gl",""],[3,"is_loaded","gl::DrawArraysInstancedBaseInstance",""],[3,"load_with","",""],[0,"DrawBuffer","gl",""],[3,"is_loaded","gl::DrawBuffer",""],[3,"load_with","",""],[0,"DrawBuffers","gl",""],[3,"is_loaded","gl::DrawBuffers",""],[3,"load_with","",""],[0,"DrawElements","gl",""],[3,"is_loaded","gl::DrawElements",""],[3,"load_with","",""],[0,"DrawElementsBaseVertex","gl",""],[3,"is_loaded","gl::DrawElementsBaseVertex",""],[3,"load_with","",""],[0,"DrawElementsIndirect","gl",""],[3,"is_loaded","gl::DrawElementsIndirect",""],[3,"load_with","",""],[0,"DrawElementsInstanced","gl",""],[3,"is_loaded","gl::DrawElementsInstanced",""],[3,"load_with","",""],[0,"DrawElementsInstancedBaseInstance","gl",""],[3,"is_loaded","gl::DrawElementsInstancedBaseInstance",""],[3,"load_with","",""],[0,"DrawElementsInstancedBaseVertex","gl",""],[3,"is_loaded","gl::DrawElementsInstancedBaseVertex",""],[3,"load_with","",""],[0,"DrawElementsInstancedBaseVertexBaseInstance","gl",""],[3,"is_loaded","gl::DrawElementsInstancedBaseVertexBaseInstance",""],[3,"load_with","",""],[0,"DrawRangeElements","gl",""],[3,"is_loaded","gl::DrawRangeElements",""],[3,"load_with","",""],[0,"DrawRangeElementsBaseVertex","gl",""],[3,"is_loaded","gl::DrawRangeElementsBaseVertex",""],[3,"load_with","",""],[0,"DrawTransformFeedback","gl",""],[3,"is_loaded","gl::DrawTransformFeedback",""],[3,"load_with","",""],[0,"DrawTransformFeedbackInstanced","gl",""],[3,"is_loaded","gl::DrawTransformFeedbackInstanced",""],[3,"load_with","",""],[0,"DrawTransformFeedbackStream","gl",""],[3,"is_loaded","gl::DrawTransformFeedbackStream",""],[3,"load_with","",""],[0,"DrawTransformFeedbackStreamInstanced","gl",""],[3,"is_loaded","gl::DrawTransformFeedbackStreamInstanced",""],[3,"load_with","",""],[0,"Enable","gl",""],[3,"is_loaded","gl::Enable",""],[3,"load_with","",""],[0,"EnableVertexAttribArray","gl",""],[3,"is_loaded","gl::EnableVertexAttribArray",""],[3,"load_with","",""],[0,"Enablei","gl",""],[3,"is_loaded","gl::Enablei",""],[3,"load_with","",""],[0,"EndConditionalRender","gl",""],[3,"is_loaded","gl::EndConditionalRender",""],[3,"load_with","",""],[0,"EndQuery","gl",""],[3,"is_loaded","gl::EndQuery",""],[3,"load_with","",""],[0,"EndQueryIndexed","gl",""],[3,"is_loaded","gl::EndQueryIndexed",""],[3,"load_with","",""],[0,"EndTransformFeedback","gl",""],[3,"is_loaded","gl::EndTransformFeedback",""],[3,"load_with","",""],[0,"FenceSync","gl",""],[3,"is_loaded","gl::FenceSync",""],[3,"load_with","",""],[0,"Finish","gl",""],[3,"is_loaded","gl::Finish",""],[3,"load_with","",""],[0,"Flush","gl",""],[3,"is_loaded","gl::Flush",""],[3,"load_with","",""],[0,"FlushMappedBufferRange","gl",""],[3,"is_loaded","gl::FlushMappedBufferRange",""],[3,"load_with","",""],[0,"FramebufferParameteri","gl",""],[3,"is_loaded","gl::FramebufferParameteri",""],[3,"load_with","",""],[0,"FramebufferRenderbuffer","gl",""],[3,"is_loaded","gl::FramebufferRenderbuffer",""],[3,"load_with","",""],[0,"FramebufferTexture","gl",""],[3,"is_loaded","gl::FramebufferTexture",""],[3,"load_with","",""],[0,"FramebufferTexture1D","gl",""],[3,"is_loaded","gl::FramebufferTexture1D",""],[3,"load_with","",""],[0,"FramebufferTexture2D","gl",""],[3,"is_loaded","gl::FramebufferTexture2D",""],[3,"load_with","",""],[0,"FramebufferTexture3D","gl",""],[3,"is_loaded","gl::FramebufferTexture3D",""],[3,"load_with","",""],[0,"FramebufferTextureLayer","gl",""],[3,"is_loaded","gl::FramebufferTextureLayer",""],[3,"load_with","",""],[0,"FrontFace","gl",""],[3,"is_loaded","gl::FrontFace",""],[3,"load_with","",""],[0,"GenBuffers","gl",""],[3,"is_loaded","gl::GenBuffers",""],[3,"load_with","",""],[0,"GenFramebuffers","gl",""],[3,"is_loaded","gl::GenFramebuffers",""],[3,"load_with","",""],[0,"GenProgramPipelines","gl",""],[3,"is_loaded","gl::GenProgramPipelines",""],[3,"load_with","",""],[0,"GenQueries","gl",""],[3,"is_loaded","gl::GenQueries",""],[3,"load_with","",""],[0,"GenRenderbuffers","gl",""],[3,"is_loaded","gl::GenRenderbuffers",""],[3,"load_with","",""],[0,"GenSamplers","gl",""],[3,"is_loaded","gl::GenSamplers",""],[3,"load_with","",""],[0,"GenTextures","gl",""],[3,"is_loaded","gl::GenTextures",""],[3,"load_with","",""],[0,"GenTransformFeedbacks","gl",""],[3,"is_loaded","gl::GenTransformFeedbacks",""],[3,"load_with","",""],[0,"GenVertexArrays","gl",""],[3,"is_loaded","gl::GenVertexArrays",""],[3,"load_with","",""],[0,"GenerateMipmap","gl",""],[3,"is_loaded","gl::GenerateMipmap",""],[3,"load_with","",""],[0,"GetActiveAtomicCounterBufferiv","gl",""],[3,"is_loaded","gl::GetActiveAtomicCounterBufferiv",""],[3,"load_with","",""],[0,"GetActiveAttrib","gl",""],[3,"is_loaded","gl::GetActiveAttrib",""],[3,"load_with","",""],[0,"GetActiveSubroutineName","gl",""],[3,"is_loaded","gl::GetActiveSubroutineName",""],[3,"load_with","",""],[0,"GetActiveSubroutineUniformName","gl",""],[3,"is_loaded","gl::GetActiveSubroutineUniformName",""],[3,"load_with","",""],[0,"GetActiveSubroutineUniformiv","gl",""],[3,"is_loaded","gl::GetActiveSubroutineUniformiv",""],[3,"load_with","",""],[0,"GetActiveUniform","gl",""],[3,"is_loaded","gl::GetActiveUniform",""],[3,"load_with","",""],[0,"GetActiveUniformBlockName","gl",""],[3,"is_loaded","gl::GetActiveUniformBlockName",""],[3,"load_with","",""],[0,"GetActiveUniformBlockiv","gl",""],[3,"is_loaded","gl::GetActiveUniformBlockiv",""],[3,"load_with","",""],[0,"GetActiveUniformName","gl",""],[3,"is_loaded","gl::GetActiveUniformName",""],[3,"load_with","",""],[0,"GetActiveUniformsiv","gl",""],[3,"is_loaded","gl::GetActiveUniformsiv",""],[3,"load_with","",""],[0,"GetAttachedShaders","gl",""],[3,"is_loaded","gl::GetAttachedShaders",""],[3,"load_with","",""],[0,"GetAttribLocation","gl",""],[3,"is_loaded","gl::GetAttribLocation",""],[3,"load_with","",""],[0,"GetBooleani_v","gl",""],[3,"is_loaded","gl::GetBooleani_v",""],[3,"load_with","",""],[0,"GetBooleanv","gl",""],[3,"is_loaded","gl::GetBooleanv",""],[3,"load_with","",""],[0,"GetBufferParameteri64v","gl",""],[3,"is_loaded","gl::GetBufferParameteri64v",""],[3,"load_with","",""],[0,"GetBufferParameteriv","gl",""],[3,"is_loaded","gl::GetBufferParameteriv",""],[3,"load_with","",""],[0,"GetBufferPointerv","gl",""],[3,"is_loaded","gl::GetBufferPointerv",""],[3,"load_with","",""],[0,"GetBufferSubData","gl",""],[3,"is_loaded","gl::GetBufferSubData",""],[3,"load_with","",""],[0,"GetCompressedTexImage","gl",""],[3,"is_loaded","gl::GetCompressedTexImage",""],[3,"load_with","",""],[0,"GetDebugMessageLog","gl",""],[3,"is_loaded","gl::GetDebugMessageLog",""],[3,"load_with","",""],[0,"GetDoublei_v","gl",""],[3,"is_loaded","gl::GetDoublei_v",""],[3,"load_with","",""],[0,"GetDoublev","gl",""],[3,"is_loaded","gl::GetDoublev",""],[3,"load_with","",""],[0,"GetError","gl",""],[3,"is_loaded","gl::GetError",""],[3,"load_with","",""],[0,"GetFloati_v","gl",""],[3,"is_loaded","gl::GetFloati_v",""],[3,"load_with","",""],[0,"GetFloatv","gl",""],[3,"is_loaded","gl::GetFloatv",""],[3,"load_with","",""],[0,"GetFragDataIndex","gl",""],[3,"is_loaded","gl::GetFragDataIndex",""],[3,"load_with","",""],[0,"GetFragDataLocation","gl",""],[3,"is_loaded","gl::GetFragDataLocation",""],[3,"load_with","",""],[0,"GetFramebufferAttachmentParameteriv","gl",""],[3,"is_loaded","gl::GetFramebufferAttachmentParameteriv",""],[3,"load_with","",""],[0,"GetFramebufferParameteriv","gl",""],[3,"is_loaded","gl::GetFramebufferParameteriv",""],[3,"load_with","",""],[0,"GetInteger64i_v","gl",""],[3,"is_loaded","gl::GetInteger64i_v",""],[3,"load_with","",""],[0,"GetInteger64v","gl",""],[3,"is_loaded","gl::GetInteger64v",""],[3,"load_with","",""],[0,"GetIntegeri_v","gl",""],[3,"is_loaded","gl::GetIntegeri_v",""],[3,"load_with","",""],[0,"GetIntegerv","gl",""],[3,"is_loaded","gl::GetIntegerv",""],[3,"load_with","",""],[0,"GetInternalformati64v","gl",""],[3,"is_loaded","gl::GetInternalformati64v",""],[3,"load_with","",""],[0,"GetInternalformativ","gl",""],[3,"is_loaded","gl::GetInternalformativ",""],[3,"load_with","",""],[0,"GetMultisamplefv","gl",""],[3,"is_loaded","gl::GetMultisamplefv",""],[3,"load_with","",""],[0,"GetObjectLabel","gl",""],[3,"is_loaded","gl::GetObjectLabel",""],[3,"load_with","",""],[0,"GetObjectPtrLabel","gl",""],[3,"is_loaded","gl::GetObjectPtrLabel",""],[3,"load_with","",""],[0,"GetProgramBinary","gl",""],[3,"is_loaded","gl::GetProgramBinary",""],[3,"load_with","",""],[0,"GetProgramInfoLog","gl",""],[3,"is_loaded","gl::GetProgramInfoLog",""],[3,"load_with","",""],[0,"GetProgramInterfaceiv","gl",""],[3,"is_loaded","gl::GetProgramInterfaceiv",""],[3,"load_with","",""],[0,"GetProgramPipelineInfoLog","gl",""],[3,"is_loaded","gl::GetProgramPipelineInfoLog",""],[3,"load_with","",""],[0,"GetProgramPipelineiv","gl",""],[3,"is_loaded","gl::GetProgramPipelineiv",""],[3,"load_with","",""],[0,"GetProgramResourceIndex","gl",""],[3,"is_loaded","gl::GetProgramResourceIndex",""],[3,"load_with","",""],[0,"GetProgramResourceLocation","gl",""],[3,"is_loaded","gl::GetProgramResourceLocation",""],[3,"load_with","",""],[0,"GetProgramResourceLocationIndex","gl",""],[3,"is_loaded","gl::GetProgramResourceLocationIndex",""],[3,"load_with","",""],[0,"GetProgramResourceName","gl",""],[3,"is_loaded","gl::GetProgramResourceName",""],[3,"load_with","",""],[0,"GetProgramResourceiv","gl",""],[3,"is_loaded","gl::GetProgramResourceiv",""],[3,"load_with","",""],[0,"GetProgramStageiv","gl",""],[3,"is_loaded","gl::GetProgramStageiv",""],[3,"load_with","",""],[0,"GetProgramiv","gl",""],[3,"is_loaded","gl::GetProgramiv",""],[3,"load_with","",""],[0,"GetQueryIndexediv","gl",""],[3,"is_loaded","gl::GetQueryIndexediv",""],[3,"load_with","",""],[0,"GetQueryObjecti64v","gl",""],[3,"is_loaded","gl::GetQueryObjecti64v",""],[3,"load_with","",""],[0,"GetQueryObjectiv","gl",""],[3,"is_loaded","gl::GetQueryObjectiv",""],[3,"load_with","",""],[0,"GetQueryObjectui64v","gl",""],[3,"is_loaded","gl::GetQueryObjectui64v",""],[3,"load_with","",""],[0,"GetQueryObjectuiv","gl",""],[3,"is_loaded","gl::GetQueryObjectuiv",""],[3,"load_with","",""],[0,"GetQueryiv","gl",""],[3,"is_loaded","gl::GetQueryiv",""],[3,"load_with","",""],[0,"GetRenderbufferParameteriv","gl",""],[3,"is_loaded","gl::GetRenderbufferParameteriv",""],[3,"load_with","",""],[0,"GetSamplerParameterIiv","gl",""],[3,"is_loaded","gl::GetSamplerParameterIiv",""],[3,"load_with","",""],[0,"GetSamplerParameterIuiv","gl",""],[3,"is_loaded","gl::GetSamplerParameterIuiv",""],[3,"load_with","",""],[0,"GetSamplerParameterfv","gl",""],[3,"is_loaded","gl::GetSamplerParameterfv",""],[3,"load_with","",""],[0,"GetSamplerParameteriv","gl",""],[3,"is_loaded","gl::GetSamplerParameteriv",""],[3,"load_with","",""],[0,"GetShaderInfoLog","gl",""],[3,"is_loaded","gl::GetShaderInfoLog",""],[3,"load_with","",""],[0,"GetShaderPrecisionFormat","gl",""],[3,"is_loaded","gl::GetShaderPrecisionFormat",""],[3,"load_with","",""],[0,"GetShaderSource","gl",""],[3,"is_loaded","gl::GetShaderSource",""],[3,"load_with","",""],[0,"GetShaderiv","gl",""],[3,"is_loaded","gl::GetShaderiv",""],[3,"load_with","",""],[0,"GetString","gl",""],[3,"is_loaded","gl::GetString",""],[3,"load_with","",""],[0,"GetStringi","gl",""],[3,"is_loaded","gl::GetStringi",""],[3,"load_with","",""],[0,"GetSubroutineIndex","gl",""],[3,"is_loaded","gl::GetSubroutineIndex",""],[3,"load_with","",""],[0,"GetSubroutineUniformLocation","gl",""],[3,"is_loaded","gl::GetSubroutineUniformLocation",""],[3,"load_with","",""],[0,"GetSynciv","gl",""],[3,"is_loaded","gl::GetSynciv",""],[3,"load_with","",""],[0,"GetTexImage","gl",""],[3,"is_loaded","gl::GetTexImage",""],[3,"load_with","",""],[0,"GetTexLevelParameterfv","gl",""],[3,"is_loaded","gl::GetTexLevelParameterfv",""],[3,"load_with","",""],[0,"GetTexLevelParameteriv","gl",""],[3,"is_loaded","gl::GetTexLevelParameteriv",""],[3,"load_with","",""],[0,"GetTexParameterIiv","gl",""],[3,"is_loaded","gl::GetTexParameterIiv",""],[3,"load_with","",""],[0,"GetTexParameterIuiv","gl",""],[3,"is_loaded","gl::GetTexParameterIuiv",""],[3,"load_with","",""],[0,"GetTexParameterfv","gl",""],[3,"is_loaded","gl::GetTexParameterfv",""],[3,"load_with","",""],[0,"GetTexParameteriv","gl",""],[3,"is_loaded","gl::GetTexParameteriv",""],[3,"load_with","",""],[0,"GetTransformFeedbackVarying","gl",""],[3,"is_loaded","gl::GetTransformFeedbackVarying",""],[3,"load_with","",""],[0,"GetUniformBlockIndex","gl",""],[3,"is_loaded","gl::GetUniformBlockIndex",""],[3,"load_with","",""],[0,"GetUniformIndices","gl",""],[3,"is_loaded","gl::GetUniformIndices",""],[3,"load_with","",""],[0,"GetUniformLocation","gl",""],[3,"is_loaded","gl::GetUniformLocation",""],[3,"load_with","",""],[0,"GetUniformSubroutineuiv","gl",""],[3,"is_loaded","gl::GetUniformSubroutineuiv",""],[3,"load_with","",""],[0,"GetUniformdv","gl",""],[3,"is_loaded","gl::GetUniformdv",""],[3,"load_with","",""],[0,"GetUniformfv","gl",""],[3,"is_loaded","gl::GetUniformfv",""],[3,"load_with","",""],[0,"GetUniformiv","gl",""],[3,"is_loaded","gl::GetUniformiv",""],[3,"load_with","",""],[0,"GetUniformuiv","gl",""],[3,"is_loaded","gl::GetUniformuiv",""],[3,"load_with","",""],[0,"GetVertexAttribIiv","gl",""],[3,"is_loaded","gl::GetVertexAttribIiv",""],[3,"load_with","",""],[0,"GetVertexAttribIuiv","gl",""],[3,"is_loaded","gl::GetVertexAttribIuiv",""],[3,"load_with","",""],[0,"GetVertexAttribLdv","gl",""],[3,"is_loaded","gl::GetVertexAttribLdv",""],[3,"load_with","",""],[0,"GetVertexAttribPointerv","gl",""],[3,"is_loaded","gl::GetVertexAttribPointerv",""],[3,"load_with","",""],[0,"GetVertexAttribdv","gl",""],[3,"is_loaded","gl::GetVertexAttribdv",""],[3,"load_with","",""],[0,"GetVertexAttribfv","gl",""],[3,"is_loaded","gl::GetVertexAttribfv",""],[3,"load_with","",""],[0,"GetVertexAttribiv","gl",""],[3,"is_loaded","gl::GetVertexAttribiv",""],[3,"load_with","",""],[0,"Hint","gl",""],[3,"is_loaded","gl::Hint",""],[3,"load_with","",""],[0,"InvalidateBufferData","gl",""],[3,"is_loaded","gl::InvalidateBufferData",""],[3,"load_with","",""],[0,"InvalidateBufferSubData","gl",""],[3,"is_loaded","gl::InvalidateBufferSubData",""],[3,"load_with","",""],[0,"InvalidateFramebuffer","gl",""],[3,"is_loaded","gl::InvalidateFramebuffer",""],[3,"load_with","",""],[0,"InvalidateSubFramebuffer","gl",""],[3,"is_loaded","gl::InvalidateSubFramebuffer",""],[3,"load_with","",""],[0,"InvalidateTexImage","gl",""],[3,"is_loaded","gl::InvalidateTexImage",""],[3,"load_with","",""],[0,"InvalidateTexSubImage","gl",""],[3,"is_loaded","gl::InvalidateTexSubImage",""],[3,"load_with","",""],[0,"IsBuffer","gl",""],[3,"is_loaded","gl::IsBuffer",""],[3,"load_with","",""],[0,"IsEnabled","gl",""],[3,"is_loaded","gl::IsEnabled",""],[3,"load_with","",""],[0,"IsEnabledi","gl",""],[3,"is_loaded","gl::IsEnabledi",""],[3,"load_with","",""],[0,"IsFramebuffer","gl",""],[3,"is_loaded","gl::IsFramebuffer",""],[3,"load_with","",""],[0,"IsProgram","gl",""],[3,"is_loaded","gl::IsProgram",""],[3,"load_with","",""],[0,"IsProgramPipeline","gl",""],[3,"is_loaded","gl::IsProgramPipeline",""],[3,"load_with","",""],[0,"IsQuery","gl",""],[3,"is_loaded","gl::IsQuery",""],[3,"load_with","",""],[0,"IsRenderbuffer","gl",""],[3,"is_loaded","gl::IsRenderbuffer",""],[3,"load_with","",""],[0,"IsSampler","gl",""],[3,"is_loaded","gl::IsSampler",""],[3,"load_with","",""],[0,"IsShader","gl",""],[3,"is_loaded","gl::IsShader",""],[3,"load_with","",""],[0,"IsSync","gl",""],[3,"is_loaded","gl::IsSync",""],[3,"load_with","",""],[0,"IsTexture","gl",""],[3,"is_loaded","gl::IsTexture",""],[3,"load_with","",""],[0,"IsTransformFeedback","gl",""],[3,"is_loaded","gl::IsTransformFeedback",""],[3,"load_with","",""],[0,"IsVertexArray","gl",""],[3,"is_loaded","gl::IsVertexArray",""],[3,"load_with","",""],[0,"LineWidth","gl",""],[3,"is_loaded","gl::LineWidth",""],[3,"load_with","",""],[0,"LinkProgram","gl",""],[3,"is_loaded","gl::LinkProgram",""],[3,"load_with","",""],[0,"LogicOp","gl",""],[3,"is_loaded","gl::LogicOp",""],[3,"load_with","",""],[0,"MapBuffer","gl",""],[3,"is_loaded","gl::MapBuffer",""],[3,"load_with","",""],[0,"MapBufferRange","gl",""],[3,"is_loaded","gl::MapBufferRange",""],[3,"load_with","",""],[0,"MemoryBarrier","gl",""],[3,"is_loaded","gl::MemoryBarrier",""],[3,"load_with","",""],[0,"MinSampleShading","gl",""],[3,"is_loaded","gl::MinSampleShading",""],[3,"load_with","",""],[0,"MultiDrawArrays","gl",""],[3,"is_loaded","gl::MultiDrawArrays",""],[3,"load_with","",""],[0,"MultiDrawArraysIndirect","gl",""],[3,"is_loaded","gl::MultiDrawArraysIndirect",""],[3,"load_with","",""],[0,"MultiDrawElements","gl",""],[3,"is_loaded","gl::MultiDrawElements",""],[3,"load_with","",""],[0,"MultiDrawElementsBaseVertex","gl",""],[3,"is_loaded","gl::MultiDrawElementsBaseVertex",""],[3,"load_with","",""],[0,"MultiDrawElementsIndirect","gl",""],[3,"is_loaded","gl::MultiDrawElementsIndirect",""],[3,"load_with","",""],[0,"MultiTexCoordP1ui","gl",""],[3,"is_loaded","gl::MultiTexCoordP1ui",""],[3,"load_with","",""],[0,"MultiTexCoordP1uiv","gl",""],[3,"is_loaded","gl::MultiTexCoordP1uiv",""],[3,"load_with","",""],[0,"MultiTexCoordP2ui","gl",""],[3,"is_loaded","gl::MultiTexCoordP2ui",""],[3,"load_with","",""],[0,"MultiTexCoordP2uiv","gl",""],[3,"is_loaded","gl::MultiTexCoordP2uiv",""],[3,"load_with","",""],[0,"MultiTexCoordP3ui","gl",""],[3,"is_loaded","gl::MultiTexCoordP3ui",""],[3,"load_with","",""],[0,"MultiTexCoordP3uiv","gl",""],[3,"is_loaded","gl::MultiTexCoordP3uiv",""],[3,"load_with","",""],[0,"MultiTexCoordP4ui","gl",""],[3,"is_loaded","gl::MultiTexCoordP4ui",""],[3,"load_with","",""],[0,"MultiTexCoordP4uiv","gl",""],[3,"is_loaded","gl::MultiTexCoordP4uiv",""],[3,"load_with","",""],[0,"NormalP3ui","gl",""],[3,"is_loaded","gl::NormalP3ui",""],[3,"load_with","",""],[0,"NormalP3uiv","gl",""],[3,"is_loaded","gl::NormalP3uiv",""],[3,"load_with","",""],[0,"ObjectLabel","gl",""],[3,"is_loaded","gl::ObjectLabel",""],[3,"load_with","",""],[0,"ObjectPtrLabel","gl",""],[3,"is_loaded","gl::ObjectPtrLabel",""],[3,"load_with","",""],[0,"PatchParameterfv","gl",""],[3,"is_loaded","gl::PatchParameterfv",""],[3,"load_with","",""],[0,"PatchParameteri","gl",""],[3,"is_loaded","gl::PatchParameteri",""],[3,"load_with","",""],[0,"PauseTransformFeedback","gl",""],[3,"is_loaded","gl::PauseTransformFeedback",""],[3,"load_with","",""],[0,"PixelStoref","gl",""],[3,"is_loaded","gl::PixelStoref",""],[3,"load_with","",""],[0,"PixelStorei","gl",""],[3,"is_loaded","gl::PixelStorei",""],[3,"load_with","",""],[0,"PointParameterf","gl",""],[3,"is_loaded","gl::PointParameterf",""],[3,"load_with","",""],[0,"PointParameterfv","gl",""],[3,"is_loaded","gl::PointParameterfv",""],[3,"load_with","",""],[0,"PointParameteri","gl",""],[3,"is_loaded","gl::PointParameteri",""],[3,"load_with","",""],[0,"PointParameteriv","gl",""],[3,"is_loaded","gl::PointParameteriv",""],[3,"load_with","",""],[0,"PointSize","gl",""],[3,"is_loaded","gl::PointSize",""],[3,"load_with","",""],[0,"PolygonMode","gl",""],[3,"is_loaded","gl::PolygonMode",""],[3,"load_with","",""],[0,"PolygonOffset","gl",""],[3,"is_loaded","gl::PolygonOffset",""],[3,"load_with","",""],[0,"PopDebugGroup","gl",""],[3,"is_loaded","gl::PopDebugGroup",""],[3,"load_with","",""],[0,"PrimitiveRestartIndex","gl",""],[3,"is_loaded","gl::PrimitiveRestartIndex",""],[3,"load_with","",""],[0,"ProgramBinary","gl",""],[3,"is_loaded","gl::ProgramBinary",""],[3,"load_with","",""],[0,"ProgramParameteri","gl",""],[3,"is_loaded","gl::ProgramParameteri",""],[3,"load_with","",""],[0,"ProgramUniform1d","gl",""],[3,"is_loaded","gl::ProgramUniform1d",""],[3,"load_with","",""],[0,"ProgramUniform1dv","gl",""],[3,"is_loaded","gl::ProgramUniform1dv",""],[3,"load_with","",""],[0,"ProgramUniform1f","gl",""],[3,"is_loaded","gl::ProgramUniform1f",""],[3,"load_with","",""],[0,"ProgramUniform1fv","gl",""],[3,"is_loaded","gl::ProgramUniform1fv",""],[3,"load_with","",""],[0,"ProgramUniform1i","gl",""],[3,"is_loaded","gl::ProgramUniform1i",""],[3,"load_with","",""],[0,"ProgramUniform1iv","gl",""],[3,"is_loaded","gl::ProgramUniform1iv",""],[3,"load_with","",""],[0,"ProgramUniform1ui","gl",""],[3,"is_loaded","gl::ProgramUniform1ui",""],[3,"load_with","",""],[0,"ProgramUniform1uiv","gl",""],[3,"is_loaded","gl::ProgramUniform1uiv",""],[3,"load_with","",""],[0,"ProgramUniform2d","gl",""],[3,"is_loaded","gl::ProgramUniform2d",""],[3,"load_with","",""],[0,"ProgramUniform2dv","gl",""],[3,"is_loaded","gl::ProgramUniform2dv",""],[3,"load_with","",""],[0,"ProgramUniform2f","gl",""],[3,"is_loaded","gl::ProgramUniform2f",""],[3,"load_with","",""],[0,"ProgramUniform2fv","gl",""],[3,"is_loaded","gl::ProgramUniform2fv",""],[3,"load_with","",""],[0,"ProgramUniform2i","gl",""],[3,"is_loaded","gl::ProgramUniform2i",""],[3,"load_with","",""],[0,"ProgramUniform2iv","gl",""],[3,"is_loaded","gl::ProgramUniform2iv",""],[3,"load_with","",""],[0,"ProgramUniform2ui","gl",""],[3,"is_loaded","gl::ProgramUniform2ui",""],[3,"load_with","",""],[0,"ProgramUniform2uiv","gl",""],[3,"is_loaded","gl::ProgramUniform2uiv",""],[3,"load_with","",""],[0,"ProgramUniform3d","gl",""],[3,"is_loaded","gl::ProgramUniform3d",""],[3,"load_with","",""],[0,"ProgramUniform3dv","gl",""],[3,"is_loaded","gl::ProgramUniform3dv",""],[3,"load_with","",""],[0,"ProgramUniform3f","gl",""],[3,"is_loaded","gl::ProgramUniform3f",""],[3,"load_with","",""],[0,"ProgramUniform3fv","gl",""],[3,"is_loaded","gl::ProgramUniform3fv",""],[3,"load_with","",""],[0,"ProgramUniform3i","gl",""],[3,"is_loaded","gl::ProgramUniform3i",""],[3,"load_with","",""],[0,"ProgramUniform3iv","gl",""],[3,"is_loaded","gl::ProgramUniform3iv",""],[3,"load_with","",""],[0,"ProgramUniform3ui","gl",""],[3,"is_loaded","gl::ProgramUniform3ui",""],[3,"load_with","",""],[0,"ProgramUniform3uiv","gl",""],[3,"is_loaded","gl::ProgramUniform3uiv",""],[3,"load_with","",""],[0,"ProgramUniform4d","gl",""],[3,"is_loaded","gl::ProgramUniform4d",""],[3,"load_with","",""],[0,"ProgramUniform4dv","gl",""],[3,"is_loaded","gl::ProgramUniform4dv",""],[3,"load_with","",""],[0,"ProgramUniform4f","gl",""],[3,"is_loaded","gl::ProgramUniform4f",""],[3,"load_with","",""],[0,"ProgramUniform4fv","gl",""],[3,"is_loaded","gl::ProgramUniform4fv",""],[3,"load_with","",""],[0,"ProgramUniform4i","gl",""],[3,"is_loaded","gl::ProgramUniform4i",""],[3,"load_with","",""],[0,"ProgramUniform4iv","gl",""],[3,"is_loaded","gl::ProgramUniform4iv",""],[3,"load_with","",""],[0,"ProgramUniform4ui","gl",""],[3,"is_loaded","gl::ProgramUniform4ui",""],[3,"load_with","",""],[0,"ProgramUniform4uiv","gl",""],[3,"is_loaded","gl::ProgramUniform4uiv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix2dv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix2dv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix2fv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix2fv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix2x3dv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix2x3dv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix2x3fv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix2x3fv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix2x4dv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix2x4dv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix2x4fv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix2x4fv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix3dv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix3dv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix3fv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix3fv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix3x2dv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix3x2dv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix3x2fv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix3x2fv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix3x4dv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix3x4dv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix3x4fv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix3x4fv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix4dv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix4dv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix4fv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix4fv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix4x2dv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix4x2dv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix4x2fv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix4x2fv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix4x3dv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix4x3dv",""],[3,"load_with","",""],[0,"ProgramUniformMatrix4x3fv","gl",""],[3,"is_loaded","gl::ProgramUniformMatrix4x3fv",""],[3,"load_with","",""],[0,"ProvokingVertex","gl",""],[3,"is_loaded","gl::ProvokingVertex",""],[3,"load_with","",""],[0,"PushDebugGroup","gl",""],[3,"is_loaded","gl::PushDebugGroup",""],[3,"load_with","",""],[0,"QueryCounter","gl",""],[3,"is_loaded","gl::QueryCounter",""],[3,"load_with","",""],[0,"ReadBuffer","gl",""],[3,"is_loaded","gl::ReadBuffer",""],[3,"load_with","",""],[0,"ReadPixels","gl",""],[3,"is_loaded","gl::ReadPixels",""],[3,"load_with","",""],[0,"ReleaseShaderCompiler","gl",""],[3,"is_loaded","gl::ReleaseShaderCompiler",""],[3,"load_with","",""],[0,"RenderbufferStorage","gl",""],[3,"is_loaded","gl::RenderbufferStorage",""],[3,"load_with","",""],[0,"RenderbufferStorageMultisample","gl",""],[3,"is_loaded","gl::RenderbufferStorageMultisample",""],[3,"load_with","",""],[0,"ResumeTransformFeedback","gl",""],[3,"is_loaded","gl::ResumeTransformFeedback",""],[3,"load_with","",""],[0,"SampleCoverage","gl",""],[3,"is_loaded","gl::SampleCoverage",""],[3,"load_with","",""],[0,"SampleMaski","gl",""],[3,"is_loaded","gl::SampleMaski",""],[3,"load_with","",""],[0,"SamplerParameterIiv","gl",""],[3,"is_loaded","gl::SamplerParameterIiv",""],[3,"load_with","",""],[0,"SamplerParameterIuiv","gl",""],[3,"is_loaded","gl::SamplerParameterIuiv",""],[3,"load_with","",""],[0,"SamplerParameterf","gl",""],[3,"is_loaded","gl::SamplerParameterf",""],[3,"load_with","",""],[0,"SamplerParameterfv","gl",""],[3,"is_loaded","gl::SamplerParameterfv",""],[3,"load_with","",""],[0,"SamplerParameteri","gl",""],[3,"is_loaded","gl::SamplerParameteri",""],[3,"load_with","",""],[0,"SamplerParameteriv","gl",""],[3,"is_loaded","gl::SamplerParameteriv",""],[3,"load_with","",""],[0,"Scissor","gl",""],[3,"is_loaded","gl::Scissor",""],[3,"load_with","",""],[0,"ScissorArrayv","gl",""],[3,"is_loaded","gl::ScissorArrayv",""],[3,"load_with","",""],[0,"ScissorIndexed","gl",""],[3,"is_loaded","gl::ScissorIndexed",""],[3,"load_with","",""],[0,"ScissorIndexedv","gl",""],[3,"is_loaded","gl::ScissorIndexedv",""],[3,"load_with","",""],[0,"SecondaryColorP3ui","gl",""],[3,"is_loaded","gl::SecondaryColorP3ui",""],[3,"load_with","",""],[0,"SecondaryColorP3uiv","gl",""],[3,"is_loaded","gl::SecondaryColorP3uiv",""],[3,"load_with","",""],[0,"ShaderBinary","gl",""],[3,"is_loaded","gl::ShaderBinary",""],[3,"load_with","",""],[0,"ShaderSource","gl",""],[3,"is_loaded","gl::ShaderSource",""],[3,"load_with","",""],[0,"ShaderStorageBlockBinding","gl",""],[3,"is_loaded","gl::ShaderStorageBlockBinding",""],[3,"load_with","",""],[0,"StencilFunc","gl",""],[3,"is_loaded","gl::StencilFunc",""],[3,"load_with","",""],[0,"StencilFuncSeparate","gl",""],[3,"is_loaded","gl::StencilFuncSeparate",""],[3,"load_with","",""],[0,"StencilMask","gl",""],[3,"is_loaded","gl::StencilMask",""],[3,"load_with","",""],[0,"StencilMaskSeparate","gl",""],[3,"is_loaded","gl::StencilMaskSeparate",""],[3,"load_with","",""],[0,"StencilOp","gl",""],[3,"is_loaded","gl::StencilOp",""],[3,"load_with","",""],[0,"StencilOpSeparate","gl",""],[3,"is_loaded","gl::StencilOpSeparate",""],[3,"load_with","",""],[0,"TexBuffer","gl",""],[3,"is_loaded","gl::TexBuffer",""],[3,"load_with","",""],[0,"TexBufferRange","gl",""],[3,"is_loaded","gl::TexBufferRange",""],[3,"load_with","",""],[0,"TexCoordP1ui","gl",""],[3,"is_loaded","gl::TexCoordP1ui",""],[3,"load_with","",""],[0,"TexCoordP1uiv","gl",""],[3,"is_loaded","gl::TexCoordP1uiv",""],[3,"load_with","",""],[0,"TexCoordP2ui","gl",""],[3,"is_loaded","gl::TexCoordP2ui",""],[3,"load_with","",""],[0,"TexCoordP2uiv","gl",""],[3,"is_loaded","gl::TexCoordP2uiv",""],[3,"load_with","",""],[0,"TexCoordP3ui","gl",""],[3,"is_loaded","gl::TexCoordP3ui",""],[3,"load_with","",""],[0,"TexCoordP3uiv","gl",""],[3,"is_loaded","gl::TexCoordP3uiv",""],[3,"load_with","",""],[0,"TexCoordP4ui","gl",""],[3,"is_loaded","gl::TexCoordP4ui",""],[3,"load_with","",""],[0,"TexCoordP4uiv","gl",""],[3,"is_loaded","gl::TexCoordP4uiv",""],[3,"load_with","",""],[0,"TexImage1D","gl",""],[3,"is_loaded","gl::TexImage1D",""],[3,"load_with","",""],[0,"TexImage2D","gl",""],[3,"is_loaded","gl::TexImage2D",""],[3,"load_with","",""],[0,"TexImage2DMultisample","gl",""],[3,"is_loaded","gl::TexImage2DMultisample",""],[3,"load_with","",""],[0,"TexImage3D","gl",""],[3,"is_loaded","gl::TexImage3D",""],[3,"load_with","",""],[0,"TexImage3DMultisample","gl",""],[3,"is_loaded","gl::TexImage3DMultisample",""],[3,"load_with","",""],[0,"TexParameterIiv","gl",""],[3,"is_loaded","gl::TexParameterIiv",""],[3,"load_with","",""],[0,"TexParameterIuiv","gl",""],[3,"is_loaded","gl::TexParameterIuiv",""],[3,"load_with","",""],[0,"TexParameterf","gl",""],[3,"is_loaded","gl::TexParameterf",""],[3,"load_with","",""],[0,"TexParameterfv","gl",""],[3,"is_loaded","gl::TexParameterfv",""],[3,"load_with","",""],[0,"TexParameteri","gl",""],[3,"is_loaded","gl::TexParameteri",""],[3,"load_with","",""],[0,"TexParameteriv","gl",""],[3,"is_loaded","gl::TexParameteriv",""],[3,"load_with","",""],[0,"TexStorage1D","gl",""],[3,"is_loaded","gl::TexStorage1D",""],[3,"load_with","",""],[0,"TexStorage2D","gl",""],[3,"is_loaded","gl::TexStorage2D",""],[3,"load_with","",""],[0,"TexStorage2DMultisample","gl",""],[3,"is_loaded","gl::TexStorage2DMultisample",""],[3,"load_with","",""],[0,"TexStorage3D","gl",""],[3,"is_loaded","gl::TexStorage3D",""],[3,"load_with","",""],[0,"TexStorage3DMultisample","gl",""],[3,"is_loaded","gl::TexStorage3DMultisample",""],[3,"load_with","",""],[0,"TexSubImage1D","gl",""],[3,"is_loaded","gl::TexSubImage1D",""],[3,"load_with","",""],[0,"TexSubImage2D","gl",""],[3,"is_loaded","gl::TexSubImage2D",""],[3,"load_with","",""],[0,"TexSubImage3D","gl",""],[3,"is_loaded","gl::TexSubImage3D",""],[3,"load_with","",""],[0,"TextureView","gl",""],[3,"is_loaded","gl::TextureView",""],[3,"load_with","",""],[0,"TransformFeedbackVaryings","gl",""],[3,"is_loaded","gl::TransformFeedbackVaryings",""],[3,"load_with","",""],[0,"Uniform1d","gl",""],[3,"is_loaded","gl::Uniform1d",""],[3,"load_with","",""],[0,"Uniform1dv","gl",""],[3,"is_loaded","gl::Uniform1dv",""],[3,"load_with","",""],[0,"Uniform1f","gl",""],[3,"is_loaded","gl::Uniform1f",""],[3,"load_with","",""],[0,"Uniform1fv","gl",""],[3,"is_loaded","gl::Uniform1fv",""],[3,"load_with","",""],[0,"Uniform1i","gl",""],[3,"is_loaded","gl::Uniform1i",""],[3,"load_with","",""],[0,"Uniform1iv","gl",""],[3,"is_loaded","gl::Uniform1iv",""],[3,"load_with","",""],[0,"Uniform1ui","gl",""],[3,"is_loaded","gl::Uniform1ui",""],[3,"load_with","",""],[0,"Uniform1uiv","gl",""],[3,"is_loaded","gl::Uniform1uiv",""],[3,"load_with","",""],[0,"Uniform2d","gl",""],[3,"is_loaded","gl::Uniform2d",""],[3,"load_with","",""],[0,"Uniform2dv","gl",""],[3,"is_loaded","gl::Uniform2dv",""],[3,"load_with","",""],[0,"Uniform2f","gl",""],[3,"is_loaded","gl::Uniform2f",""],[3,"load_with","",""],[0,"Uniform2fv","gl",""],[3,"is_loaded","gl::Uniform2fv",""],[3,"load_with","",""],[0,"Uniform2i","gl",""],[3,"is_loaded","gl::Uniform2i",""],[3,"load_with","",""],[0,"Uniform2iv","gl",""],[3,"is_loaded","gl::Uniform2iv",""],[3,"load_with","",""],[0,"Uniform2ui","gl",""],[3,"is_loaded","gl::Uniform2ui",""],[3,"load_with","",""],[0,"Uniform2uiv","gl",""],[3,"is_loaded","gl::Uniform2uiv",""],[3,"load_with","",""],[0,"Uniform3d","gl",""],[3,"is_loaded","gl::Uniform3d",""],[3,"load_with","",""],[0,"Uniform3dv","gl",""],[3,"is_loaded","gl::Uniform3dv",""],[3,"load_with","",""],[0,"Uniform3f","gl",""],[3,"is_loaded","gl::Uniform3f",""],[3,"load_with","",""],[0,"Uniform3fv","gl",""],[3,"is_loaded","gl::Uniform3fv",""],[3,"load_with","",""],[0,"Uniform3i","gl",""],[3,"is_loaded","gl::Uniform3i",""],[3,"load_with","",""],[0,"Uniform3iv","gl",""],[3,"is_loaded","gl::Uniform3iv",""],[3,"load_with","",""],[0,"Uniform3ui","gl",""],[3,"is_loaded","gl::Uniform3ui",""],[3,"load_with","",""],[0,"Uniform3uiv","gl",""],[3,"is_loaded","gl::Uniform3uiv",""],[3,"load_with","",""],[0,"Uniform4d","gl",""],[3,"is_loaded","gl::Uniform4d",""],[3,"load_with","",""],[0,"Uniform4dv","gl",""],[3,"is_loaded","gl::Uniform4dv",""],[3,"load_with","",""],[0,"Uniform4f","gl",""],[3,"is_loaded","gl::Uniform4f",""],[3,"load_with","",""],[0,"Uniform4fv","gl",""],[3,"is_loaded","gl::Uniform4fv",""],[3,"load_with","",""],[0,"Uniform4i","gl",""],[3,"is_loaded","gl::Uniform4i",""],[3,"load_with","",""],[0,"Uniform4iv","gl",""],[3,"is_loaded","gl::Uniform4iv",""],[3,"load_with","",""],[0,"Uniform4ui","gl",""],[3,"is_loaded","gl::Uniform4ui",""],[3,"load_with","",""],[0,"Uniform4uiv","gl",""],[3,"is_loaded","gl::Uniform4uiv",""],[3,"load_with","",""],[0,"UniformBlockBinding","gl",""],[3,"is_loaded","gl::UniformBlockBinding",""],[3,"load_with","",""],[0,"UniformMatrix2dv","gl",""],[3,"is_loaded","gl::UniformMatrix2dv",""],[3,"load_with","",""],[0,"UniformMatrix2fv","gl",""],[3,"is_loaded","gl::UniformMatrix2fv",""],[3,"load_with","",""],[0,"UniformMatrix2x3dv","gl",""],[3,"is_loaded","gl::UniformMatrix2x3dv",""],[3,"load_with","",""],[0,"UniformMatrix2x3fv","gl",""],[3,"is_loaded","gl::UniformMatrix2x3fv",""],[3,"load_with","",""],[0,"UniformMatrix2x4dv","gl",""],[3,"is_loaded","gl::UniformMatrix2x4dv",""],[3,"load_with","",""],[0,"UniformMatrix2x4fv","gl",""],[3,"is_loaded","gl::UniformMatrix2x4fv",""],[3,"load_with","",""],[0,"UniformMatrix3dv","gl",""],[3,"is_loaded","gl::UniformMatrix3dv",""],[3,"load_with","",""],[0,"UniformMatrix3fv","gl",""],[3,"is_loaded","gl::UniformMatrix3fv",""],[3,"load_with","",""],[0,"UniformMatrix3x2dv","gl",""],[3,"is_loaded","gl::UniformMatrix3x2dv",""],[3,"load_with","",""],[0,"UniformMatrix3x2fv","gl",""],[3,"is_loaded","gl::UniformMatrix3x2fv",""],[3,"load_with","",""],[0,"UniformMatrix3x4dv","gl",""],[3,"is_loaded","gl::UniformMatrix3x4dv",""],[3,"load_with","",""],[0,"UniformMatrix3x4fv","gl",""],[3,"is_loaded","gl::UniformMatrix3x4fv",""],[3,"load_with","",""],[0,"UniformMatrix4dv","gl",""],[3,"is_loaded","gl::UniformMatrix4dv",""],[3,"load_with","",""],[0,"UniformMatrix4fv","gl",""],[3,"is_loaded","gl::UniformMatrix4fv",""],[3,"load_with","",""],[0,"UniformMatrix4x2dv","gl",""],[3,"is_loaded","gl::UniformMatrix4x2dv",""],[3,"load_with","",""],[0,"UniformMatrix4x2fv","gl",""],[3,"is_loaded","gl::UniformMatrix4x2fv",""],[3,"load_with","",""],[0,"UniformMatrix4x3dv","gl",""],[3,"is_loaded","gl::UniformMatrix4x3dv",""],[3,"load_with","",""],[0,"UniformMatrix4x3fv","gl",""],[3,"is_loaded","gl::UniformMatrix4x3fv",""],[3,"load_with","",""],[0,"UniformSubroutinesuiv","gl",""],[3,"is_loaded","gl::UniformSubroutinesuiv",""],[3,"load_with","",""],[0,"UnmapBuffer","gl",""],[3,"is_loaded","gl::UnmapBuffer",""],[3,"load_with","",""],[0,"UseProgram","gl",""],[3,"is_loaded","gl::UseProgram",""],[3,"load_with","",""],[0,"UseProgramStages","gl",""],[3,"is_loaded","gl::UseProgramStages",""],[3,"load_with","",""],[0,"ValidateProgram","gl",""],[3,"is_loaded","gl::ValidateProgram",""],[3,"load_with","",""],[0,"ValidateProgramPipeline","gl",""],[3,"is_loaded","gl::ValidateProgramPipeline",""],[3,"load_with","",""],[0,"VertexAttrib1d","gl",""],[3,"is_loaded","gl::VertexAttrib1d",""],[3,"load_with","",""],[0,"VertexAttrib1dv","gl",""],[3,"is_loaded","gl::VertexAttrib1dv",""],[3,"load_with","",""],[0,"VertexAttrib1f","gl",""],[3,"is_loaded","gl::VertexAttrib1f",""],[3,"load_with","",""],[0,"VertexAttrib1fv","gl",""],[3,"is_loaded","gl::VertexAttrib1fv",""],[3,"load_with","",""],[0,"VertexAttrib1s","gl",""],[3,"is_loaded","gl::VertexAttrib1s",""],[3,"load_with","",""],[0,"VertexAttrib1sv","gl",""],[3,"is_loaded","gl::VertexAttrib1sv",""],[3,"load_with","",""],[0,"VertexAttrib2d","gl",""],[3,"is_loaded","gl::VertexAttrib2d",""],[3,"load_with","",""],[0,"VertexAttrib2dv","gl",""],[3,"is_loaded","gl::VertexAttrib2dv",""],[3,"load_with","",""],[0,"VertexAttrib2f","gl",""],[3,"is_loaded","gl::VertexAttrib2f",""],[3,"load_with","",""],[0,"VertexAttrib2fv","gl",""],[3,"is_loaded","gl::VertexAttrib2fv",""],[3,"load_with","",""],[0,"VertexAttrib2s","gl",""],[3,"is_loaded","gl::VertexAttrib2s",""],[3,"load_with","",""],[0,"VertexAttrib2sv","gl",""],[3,"is_loaded","gl::VertexAttrib2sv",""],[3,"load_with","",""],[0,"VertexAttrib3d","gl",""],[3,"is_loaded","gl::VertexAttrib3d",""],[3,"load_with","",""],[0,"VertexAttrib3dv","gl",""],[3,"is_loaded","gl::VertexAttrib3dv",""],[3,"load_with","",""],[0,"VertexAttrib3f","gl",""],[3,"is_loaded","gl::VertexAttrib3f",""],[3,"load_with","",""],[0,"VertexAttrib3fv","gl",""],[3,"is_loaded","gl::VertexAttrib3fv",""],[3,"load_with","",""],[0,"VertexAttrib3s","gl",""],[3,"is_loaded","gl::VertexAttrib3s",""],[3,"load_with","",""],[0,"VertexAttrib3sv","gl",""],[3,"is_loaded","gl::VertexAttrib3sv",""],[3,"load_with","",""],[0,"VertexAttrib4Nbv","gl",""],[3,"is_loaded","gl::VertexAttrib4Nbv",""],[3,"load_with","",""],[0,"VertexAttrib4Niv","gl",""],[3,"is_loaded","gl::VertexAttrib4Niv",""],[3,"load_with","",""],[0,"VertexAttrib4Nsv","gl",""],[3,"is_loaded","gl::VertexAttrib4Nsv",""],[3,"load_with","",""],[0,"VertexAttrib4Nub","gl",""],[3,"is_loaded","gl::VertexAttrib4Nub",""],[3,"load_with","",""],[0,"VertexAttrib4Nubv","gl",""],[3,"is_loaded","gl::VertexAttrib4Nubv",""],[3,"load_with","",""],[0,"VertexAttrib4Nuiv","gl",""],[3,"is_loaded","gl::VertexAttrib4Nuiv",""],[3,"load_with","",""],[0,"VertexAttrib4Nusv","gl",""],[3,"is_loaded","gl::VertexAttrib4Nusv",""],[3,"load_with","",""],[0,"VertexAttrib4bv","gl",""],[3,"is_loaded","gl::VertexAttrib4bv",""],[3,"load_with","",""],[0,"VertexAttrib4d","gl",""],[3,"is_loaded","gl::VertexAttrib4d",""],[3,"load_with","",""],[0,"VertexAttrib4dv","gl",""],[3,"is_loaded","gl::VertexAttrib4dv",""],[3,"load_with","",""],[0,"VertexAttrib4f","gl",""],[3,"is_loaded","gl::VertexAttrib4f",""],[3,"load_with","",""],[0,"VertexAttrib4fv","gl",""],[3,"is_loaded","gl::VertexAttrib4fv",""],[3,"load_with","",""],[0,"VertexAttrib4iv","gl",""],[3,"is_loaded","gl::VertexAttrib4iv",""],[3,"load_with","",""],[0,"VertexAttrib4s","gl",""],[3,"is_loaded","gl::VertexAttrib4s",""],[3,"load_with","",""],[0,"VertexAttrib4sv","gl",""],[3,"is_loaded","gl::VertexAttrib4sv",""],[3,"load_with","",""],[0,"VertexAttrib4ubv","gl",""],[3,"is_loaded","gl::VertexAttrib4ubv",""],[3,"load_with","",""],[0,"VertexAttrib4uiv","gl",""],[3,"is_loaded","gl::VertexAttrib4uiv",""],[3,"load_with","",""],[0,"VertexAttrib4usv","gl",""],[3,"is_loaded","gl::VertexAttrib4usv",""],[3,"load_with","",""],[0,"VertexAttribBinding","gl",""],[3,"is_loaded","gl::VertexAttribBinding",""],[3,"load_with","",""],[0,"VertexAttribDivisor","gl",""],[3,"is_loaded","gl::VertexAttribDivisor",""],[3,"load_with","",""],[0,"VertexAttribFormat","gl",""],[3,"is_loaded","gl::VertexAttribFormat",""],[3,"load_with","",""],[0,"VertexAttribI1i","gl",""],[3,"is_loaded","gl::VertexAttribI1i",""],[3,"load_with","",""],[0,"VertexAttribI1iv","gl",""],[3,"is_loaded","gl::VertexAttribI1iv",""],[3,"load_with","",""],[0,"VertexAttribI1ui","gl",""],[3,"is_loaded","gl::VertexAttribI1ui",""],[3,"load_with","",""],[0,"VertexAttribI1uiv","gl",""],[3,"is_loaded","gl::VertexAttribI1uiv",""],[3,"load_with","",""],[0,"VertexAttribI2i","gl",""],[3,"is_loaded","gl::VertexAttribI2i",""],[3,"load_with","",""],[0,"VertexAttribI2iv","gl",""],[3,"is_loaded","gl::VertexAttribI2iv",""],[3,"load_with","",""],[0,"VertexAttribI2ui","gl",""],[3,"is_loaded","gl::VertexAttribI2ui",""],[3,"load_with","",""],[0,"VertexAttribI2uiv","gl",""],[3,"is_loaded","gl::VertexAttribI2uiv",""],[3,"load_with","",""],[0,"VertexAttribI3i","gl",""],[3,"is_loaded","gl::VertexAttribI3i",""],[3,"load_with","",""],[0,"VertexAttribI3iv","gl",""],[3,"is_loaded","gl::VertexAttribI3iv",""],[3,"load_with","",""],[0,"VertexAttribI3ui","gl",""],[3,"is_loaded","gl::VertexAttribI3ui",""],[3,"load_with","",""],[0,"VertexAttribI3uiv","gl",""],[3,"is_loaded","gl::VertexAttribI3uiv",""],[3,"load_with","",""],[0,"VertexAttribI4bv","gl",""],[3,"is_loaded","gl::VertexAttribI4bv",""],[3,"load_with","",""],[0,"VertexAttribI4i","gl",""],[3,"is_loaded","gl::VertexAttribI4i",""],[3,"load_with","",""],[0,"VertexAttribI4iv","gl",""],[3,"is_loaded","gl::VertexAttribI4iv",""],[3,"load_with","",""],[0,"VertexAttribI4sv","gl",""],[3,"is_loaded","gl::VertexAttribI4sv",""],[3,"load_with","",""],[0,"VertexAttribI4ubv","gl",""],[3,"is_loaded","gl::VertexAttribI4ubv",""],[3,"load_with","",""],[0,"VertexAttribI4ui","gl",""],[3,"is_loaded","gl::VertexAttribI4ui",""],[3,"load_with","",""],[0,"VertexAttribI4uiv","gl",""],[3,"is_loaded","gl::VertexAttribI4uiv",""],[3,"load_with","",""],[0,"VertexAttribI4usv","gl",""],[3,"is_loaded","gl::VertexAttribI4usv",""],[3,"load_with","",""],[0,"VertexAttribIFormat","gl",""],[3,"is_loaded","gl::VertexAttribIFormat",""],[3,"load_with","",""],[0,"VertexAttribIPointer","gl",""],[3,"is_loaded","gl::VertexAttribIPointer",""],[3,"load_with","",""],[0,"VertexAttribL1d","gl",""],[3,"is_loaded","gl::VertexAttribL1d",""],[3,"load_with","",""],[0,"VertexAttribL1dv","gl",""],[3,"is_loaded","gl::VertexAttribL1dv",""],[3,"load_with","",""],[0,"VertexAttribL2d","gl",""],[3,"is_loaded","gl::VertexAttribL2d",""],[3,"load_with","",""],[0,"VertexAttribL2dv","gl",""],[3,"is_loaded","gl::VertexAttribL2dv",""],[3,"load_with","",""],[0,"VertexAttribL3d","gl",""],[3,"is_loaded","gl::VertexAttribL3d",""],[3,"load_with","",""],[0,"VertexAttribL3dv","gl",""],[3,"is_loaded","gl::VertexAttribL3dv",""],[3,"load_with","",""],[0,"VertexAttribL4d","gl",""],[3,"is_loaded","gl::VertexAttribL4d",""],[3,"load_with","",""],[0,"VertexAttribL4dv","gl",""],[3,"is_loaded","gl::VertexAttribL4dv",""],[3,"load_with","",""],[0,"VertexAttribLFormat","gl",""],[3,"is_loaded","gl::VertexAttribLFormat",""],[3,"load_with","",""],[0,"VertexAttribLPointer","gl",""],[3,"is_loaded","gl::VertexAttribLPointer",""],[3,"load_with","",""],[0,"VertexAttribP1ui","gl",""],[3,"is_loaded","gl::VertexAttribP1ui",""],[3,"load_with","",""],[0,"VertexAttribP1uiv","gl",""],[3,"is_loaded","gl::VertexAttribP1uiv",""],[3,"load_with","",""],[0,"VertexAttribP2ui","gl",""],[3,"is_loaded","gl::VertexAttribP2ui",""],[3,"load_with","",""],[0,"VertexAttribP2uiv","gl",""],[3,"is_loaded","gl::VertexAttribP2uiv",""],[3,"load_with","",""],[0,"VertexAttribP3ui","gl",""],[3,"is_loaded","gl::VertexAttribP3ui",""],[3,"load_with","",""],[0,"VertexAttribP3uiv","gl",""],[3,"is_loaded","gl::VertexAttribP3uiv",""],[3,"load_with","",""],[0,"VertexAttribP4ui","gl",""],[3,"is_loaded","gl::VertexAttribP4ui",""],[3,"load_with","",""],[0,"VertexAttribP4uiv","gl",""],[3,"is_loaded","gl::VertexAttribP4uiv",""],[3,"load_with","",""],[0,"VertexAttribPointer","gl",""],[3,"is_loaded","gl::VertexAttribPointer",""],[3,"load_with","",""],[0,"VertexBindingDivisor","gl",""],[3,"is_loaded","gl::VertexBindingDivisor",""],[3,"load_with","",""],[0,"VertexP2ui","gl",""],[3,"is_loaded","gl::VertexP2ui",""],[3,"load_with","",""],[0,"VertexP2uiv","gl",""],[3,"is_loaded","gl::VertexP2uiv",""],[3,"load_with","",""],[0,"VertexP3ui","gl",""],[3,"is_loaded","gl::VertexP3ui",""],[3,"load_with","",""],[0,"VertexP3uiv","gl",""],[3,"is_loaded","gl::VertexP3uiv",""],[3,"load_with","",""],[0,"VertexP4ui","gl",""],[3,"is_loaded","gl::VertexP4ui",""],[3,"load_with","",""],[0,"VertexP4uiv","gl",""],[3,"is_loaded","gl::VertexP4uiv",""],[3,"load_with","",""],[0,"Viewport","gl",""],[3,"is_loaded","gl::Viewport",""],[3,"load_with","",""],[0,"ViewportArrayv","gl",""],[3,"is_loaded","gl::ViewportArrayv",""],[3,"load_with","",""],[0,"ViewportIndexedf","gl",""],[3,"is_loaded","gl::ViewportIndexedf",""],[3,"load_with","",""],[0,"ViewportIndexedfv","gl",""],[3,"is_loaded","gl::ViewportIndexedfv",""],[3,"load_with","",""],[0,"WaitSync","gl",""],[3,"is_loaded","gl::WaitSync",""],[3,"load_with","",""],[5,"DEPTH_BUFFER_BIT","gl",""],[5,"STENCIL_BUFFER_BIT","",""],[5,"COLOR_BUFFER_BIT","",""],[5,"CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","",""],[5,"CONTEXT_FLAG_DEBUG_BIT","",""],[5,"CONTEXT_CORE_PROFILE_BIT","",""],[5,"CONTEXT_COMPATIBILITY_PROFILE_BIT","",""],[5,"MAP_READ_BIT","",""],[5,"MAP_WRITE_BIT","",""],[5,"MAP_INVALIDATE_RANGE_BIT","",""],[5,"MAP_INVALIDATE_BUFFER_BIT","",""],[5,"MAP_FLUSH_EXPLICIT_BIT","",""],[5,"MAP_UNSYNCHRONIZED_BIT","",""],[5,"VERTEX_ATTRIB_ARRAY_BARRIER_BIT","",""],[5,"ELEMENT_ARRAY_BARRIER_BIT","",""],[5,"UNIFORM_BARRIER_BIT","",""],[5,"TEXTURE_FETCH_BARRIER_BIT","",""],[5,"SHADER_IMAGE_ACCESS_BARRIER_BIT","",""],[5,"COMMAND_BARRIER_BIT","",""],[5,"PIXEL_BUFFER_BARRIER_BIT","",""],[5,"TEXTURE_UPDATE_BARRIER_BIT","",""],[5,"BUFFER_UPDATE_BARRIER_BIT","",""],[5,"FRAMEBUFFER_BARRIER_BIT","",""],[5,"TRANSFORM_FEEDBACK_BARRIER_BIT","",""],[5,"ATOMIC_COUNTER_BARRIER_BIT","",""],[5,"SHADER_STORAGE_BARRIER_BIT","",""],[5,"ALL_BARRIER_BITS","",""],[5,"SYNC_FLUSH_COMMANDS_BIT","",""],[5,"VERTEX_SHADER_BIT","",""],[5,"FRAGMENT_SHADER_BIT","",""],[5,"GEOMETRY_SHADER_BIT","",""],[5,"TESS_CONTROL_SHADER_BIT","",""],[5,"TESS_EVALUATION_SHADER_BIT","",""],[5,"ALL_SHADER_BITS","",""],[5,"FALSE","",""],[5,"NO_ERROR","",""],[5,"ZERO","",""],[5,"NONE","",""],[5,"TRUE","",""],[5,"ONE","",""],[5,"INVALID_INDEX","",""],[5,"TIMEOUT_IGNORED","",""],[5,"POINTS","",""],[5,"LINES","",""],[5,"LINE_LOOP","",""],[5,"LINE_STRIP","",""],[5,"TRIANGLES","",""],[5,"TRIANGLE_STRIP","",""],[5,"TRIANGLE_FAN","",""],[5,"LINES_ADJACENCY","",""],[5,"LINE_STRIP_ADJACENCY","",""],[5,"TRIANGLES_ADJACENCY","",""],[5,"TRIANGLE_STRIP_ADJACENCY","",""],[5,"PATCHES","",""],[5,"NEVER","",""],[5,"LESS","",""],[5,"EQUAL","",""],[5,"LEQUAL","",""],[5,"GREATER","",""],[5,"NOTEQUAL","",""],[5,"GEQUAL","",""],[5,"ALWAYS","",""],[5,"SRC_COLOR","",""],[5,"ONE_MINUS_SRC_COLOR","",""],[5,"SRC_ALPHA","",""],[5,"ONE_MINUS_SRC_ALPHA","",""],[5,"DST_ALPHA","",""],[5,"ONE_MINUS_DST_ALPHA","",""],[5,"DST_COLOR","",""],[5,"ONE_MINUS_DST_COLOR","",""],[5,"SRC_ALPHA_SATURATE","",""],[5,"FRONT_LEFT","",""],[5,"FRONT_RIGHT","",""],[5,"BACK_LEFT","",""],[5,"BACK_RIGHT","",""],[5,"FRONT","",""],[5,"BACK","",""],[5,"LEFT","",""],[5,"RIGHT","",""],[5,"FRONT_AND_BACK","",""],[5,"INVALID_ENUM","",""],[5,"INVALID_VALUE","",""],[5,"INVALID_OPERATION","",""],[5,"OUT_OF_MEMORY","",""],[5,"INVALID_FRAMEBUFFER_OPERATION","",""],[5,"CW","",""],[5,"CCW","",""],[5,"POINT_SIZE","",""],[5,"POINT_SIZE_RANGE","",""],[5,"SMOOTH_POINT_SIZE_RANGE","",""],[5,"POINT_SIZE_GRANULARITY","",""],[5,"SMOOTH_POINT_SIZE_GRANULARITY","",""],[5,"LINE_SMOOTH","",""],[5,"LINE_WIDTH","",""],[5,"LINE_WIDTH_RANGE","",""],[5,"SMOOTH_LINE_WIDTH_RANGE","",""],[5,"LINE_WIDTH_GRANULARITY","",""],[5,"SMOOTH_LINE_WIDTH_GRANULARITY","",""],[5,"POLYGON_MODE","",""],[5,"POLYGON_SMOOTH","",""],[5,"CULL_FACE","",""],[5,"CULL_FACE_MODE","",""],[5,"FRONT_FACE","",""],[5,"DEPTH_RANGE","",""],[5,"DEPTH_TEST","",""],[5,"DEPTH_WRITEMASK","",""],[5,"DEPTH_CLEAR_VALUE","",""],[5,"DEPTH_FUNC","",""],[5,"STENCIL_TEST","",""],[5,"STENCIL_CLEAR_VALUE","",""],[5,"STENCIL_FUNC","",""],[5,"STENCIL_VALUE_MASK","",""],[5,"STENCIL_FAIL","",""],[5,"STENCIL_PASS_DEPTH_FAIL","",""],[5,"STENCIL_PASS_DEPTH_PASS","",""],[5,"STENCIL_REF","",""],[5,"STENCIL_WRITEMASK","",""],[5,"VIEWPORT","",""],[5,"DITHER","",""],[5,"BLEND_DST","",""],[5,"BLEND_SRC","",""],[5,"BLEND","",""],[5,"LOGIC_OP_MODE","",""],[5,"COLOR_LOGIC_OP","",""],[5,"DRAW_BUFFER","",""],[5,"READ_BUFFER","",""],[5,"SCISSOR_BOX","",""],[5,"SCISSOR_TEST","",""],[5,"COLOR_CLEAR_VALUE","",""],[5,"COLOR_WRITEMASK","",""],[5,"DOUBLEBUFFER","",""],[5,"STEREO","",""],[5,"LINE_SMOOTH_HINT","",""],[5,"POLYGON_SMOOTH_HINT","",""],[5,"UNPACK_SWAP_BYTES","",""],[5,"UNPACK_LSB_FIRST","",""],[5,"UNPACK_ROW_LENGTH","",""],[5,"UNPACK_SKIP_ROWS","",""],[5,"UNPACK_SKIP_PIXELS","",""],[5,"UNPACK_ALIGNMENT","",""],[5,"PACK_SWAP_BYTES","",""],[5,"PACK_LSB_FIRST","",""],[5,"PACK_ROW_LENGTH","",""],[5,"PACK_SKIP_ROWS","",""],[5,"PACK_SKIP_PIXELS","",""],[5,"PACK_ALIGNMENT","",""],[5,"MAX_CLIP_DISTANCES","",""],[5,"MAX_TEXTURE_SIZE","",""],[5,"MAX_VIEWPORT_DIMS","",""],[5,"SUBPIXEL_BITS","",""],[5,"TEXTURE_1D","",""],[5,"TEXTURE_2D","",""],[5,"TEXTURE_WIDTH","",""],[5,"TEXTURE_HEIGHT","",""],[5,"TEXTURE_INTERNAL_FORMAT","",""],[5,"TEXTURE_BORDER_COLOR","",""],[5,"DONT_CARE","",""],[5,"FASTEST","",""],[5,"NICEST","",""],[5,"BYTE","",""],[5,"UNSIGNED_BYTE","",""],[5,"SHORT","",""],[5,"UNSIGNED_SHORT","",""],[5,"INT","",""],[5,"UNSIGNED_INT","",""],[5,"FLOAT","",""],[5,"DOUBLE","",""],[5,"HALF_FLOAT","",""],[5,"FIXED","",""],[5,"CLEAR","",""],[5,"AND","",""],[5,"AND_REVERSE","",""],[5,"COPY","",""],[5,"AND_INVERTED","",""],[5,"NOOP","",""],[5,"XOR","",""],[5,"OR","",""],[5,"NOR","",""],[5,"EQUIV","",""],[5,"INVERT","",""],[5,"OR_REVERSE","",""],[5,"COPY_INVERTED","",""],[5,"OR_INVERTED","",""],[5,"NAND","",""],[5,"SET","",""],[5,"TEXTURE","",""],[5,"COLOR","",""],[5,"DEPTH","",""],[5,"STENCIL","",""],[5,"STENCIL_INDEX","",""],[5,"DEPTH_COMPONENT","",""],[5,"RED","",""],[5,"GREEN","",""],[5,"BLUE","",""],[5,"ALPHA","",""],[5,"RGB","",""],[5,"RGBA","",""],[5,"POINT","",""],[5,"LINE","",""],[5,"FILL","",""],[5,"KEEP","",""],[5,"REPLACE","",""],[5,"INCR","",""],[5,"DECR","",""],[5,"VENDOR","",""],[5,"RENDERER","",""],[5,"VERSION","",""],[5,"EXTENSIONS","",""],[5,"NEAREST","",""],[5,"LINEAR","",""],[5,"NEAREST_MIPMAP_NEAREST","",""],[5,"LINEAR_MIPMAP_NEAREST","",""],[5,"NEAREST_MIPMAP_LINEAR","",""],[5,"LINEAR_MIPMAP_LINEAR","",""],[5,"TEXTURE_MAG_FILTER","",""],[5,"TEXTURE_MIN_FILTER","",""],[5,"TEXTURE_WRAP_S","",""],[5,"TEXTURE_WRAP_T","",""],[5,"REPEAT","",""],[5,"POLYGON_OFFSET_UNITS","",""],[5,"POLYGON_OFFSET_POINT","",""],[5,"POLYGON_OFFSET_LINE","",""],[5,"R3_G3_B2","",""],[5,"CLIP_DISTANCE0","",""],[5,"CLIP_DISTANCE1","",""],[5,"CLIP_DISTANCE2","",""],[5,"CLIP_DISTANCE3","",""],[5,"CLIP_DISTANCE4","",""],[5,"CLIP_DISTANCE5","",""],[5,"CLIP_DISTANCE6","",""],[5,"CLIP_DISTANCE7","",""],[5,"CONSTANT_COLOR","",""],[5,"ONE_MINUS_CONSTANT_COLOR","",""],[5,"CONSTANT_ALPHA","",""],[5,"ONE_MINUS_CONSTANT_ALPHA","",""],[5,"FUNC_ADD","",""],[5,"MIN","",""],[5,"MAX","",""],[5,"BLEND_EQUATION_RGB","",""],[5,"FUNC_SUBTRACT","",""],[5,"FUNC_REVERSE_SUBTRACT","",""],[5,"UNSIGNED_BYTE_3_3_2","",""],[5,"UNSIGNED_SHORT_4_4_4_4","",""],[5,"UNSIGNED_SHORT_5_5_5_1","",""],[5,"UNSIGNED_INT_8_8_8_8","",""],[5,"UNSIGNED_INT_10_10_10_2","",""],[5,"POLYGON_OFFSET_FILL","",""],[5,"POLYGON_OFFSET_FACTOR","",""],[5,"RGB4","",""],[5,"RGB5","",""],[5,"RGB8","",""],[5,"RGB10","",""],[5,"RGB12","",""],[5,"RGB16","",""],[5,"RGBA2","",""],[5,"RGBA4","",""],[5,"RGB5_A1","",""],[5,"RGBA8","",""],[5,"RGB10_A2","",""],[5,"RGBA12","",""],[5,"RGBA16","",""],[5,"TEXTURE_RED_SIZE","",""],[5,"TEXTURE_GREEN_SIZE","",""],[5,"TEXTURE_BLUE_SIZE","",""],[5,"TEXTURE_ALPHA_SIZE","",""],[5,"PROXY_TEXTURE_1D","",""],[5,"PROXY_TEXTURE_2D","",""],[5,"TEXTURE_BINDING_1D","",""],[5,"TEXTURE_BINDING_2D","",""],[5,"TEXTURE_BINDING_3D","",""],[5,"PACK_SKIP_IMAGES","",""],[5,"PACK_IMAGE_HEIGHT","",""],[5,"UNPACK_SKIP_IMAGES","",""],[5,"UNPACK_IMAGE_HEIGHT","",""],[5,"TEXTURE_3D","",""],[5,"PROXY_TEXTURE_3D","",""],[5,"TEXTURE_DEPTH","",""],[5,"TEXTURE_WRAP_R","",""],[5,"MAX_3D_TEXTURE_SIZE","",""],[5,"MULTISAMPLE","",""],[5,"SAMPLE_ALPHA_TO_COVERAGE","",""],[5,"SAMPLE_ALPHA_TO_ONE","",""],[5,"SAMPLE_COVERAGE","",""],[5,"SAMPLE_BUFFERS","",""],[5,"SAMPLES","",""],[5,"SAMPLE_COVERAGE_VALUE","",""],[5,"SAMPLE_COVERAGE_INVERT","",""],[5,"BLEND_DST_RGB","",""],[5,"BLEND_SRC_RGB","",""],[5,"BLEND_DST_ALPHA","",""],[5,"BLEND_SRC_ALPHA","",""],[5,"BGR","",""],[5,"BGRA","",""],[5,"MAX_ELEMENTS_VERTICES","",""],[5,"MAX_ELEMENTS_INDICES","",""],[5,"POINT_FADE_THRESHOLD_SIZE","",""],[5,"CLAMP_TO_BORDER","",""],[5,"CLAMP_TO_EDGE","",""],[5,"TEXTURE_MIN_LOD","",""],[5,"TEXTURE_MAX_LOD","",""],[5,"TEXTURE_BASE_LEVEL","",""],[5,"TEXTURE_MAX_LEVEL","",""],[5,"DEPTH_COMPONENT16","",""],[5,"DEPTH_COMPONENT24","",""],[5,"DEPTH_COMPONENT32","",""],[5,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","",""],[5,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","",""],[5,"FRAMEBUFFER_ATTACHMENT_RED_SIZE","",""],[5,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","",""],[5,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","",""],[5,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","",""],[5,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","",""],[5,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","",""],[5,"FRAMEBUFFER_DEFAULT","",""],[5,"FRAMEBUFFER_UNDEFINED","",""],[5,"DEPTH_STENCIL_ATTACHMENT","",""],[5,"MAJOR_VERSION","",""],[5,"MINOR_VERSION","",""],[5,"NUM_EXTENSIONS","",""],[5,"CONTEXT_FLAGS","",""],[5,"INDEX","",""],[5,"COMPRESSED_RED","",""],[5,"COMPRESSED_RG","",""],[5,"RG","",""],[5,"RG_INTEGER","",""],[5,"R8","",""],[5,"R16","",""],[5,"RG8","",""],[5,"RG16","",""],[5,"R16F","",""],[5,"R32F","",""],[5,"RG16F","",""],[5,"RG32F","",""],[5,"R8I","",""],[5,"R8UI","",""],[5,"R16I","",""],[5,"R16UI","",""],[5,"R32I","",""],[5,"R32UI","",""],[5,"RG8I","",""],[5,"RG8UI","",""],[5,"RG16I","",""],[5,"RG16UI","",""],[5,"RG32I","",""],[5,"RG32UI","",""],[5,"DEBUG_OUTPUT_SYNCHRONOUS","",""],[5,"DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","",""],[5,"DEBUG_CALLBACK_FUNCTION","",""],[5,"DEBUG_CALLBACK_USER_PARAM","",""],[5,"DEBUG_SOURCE_API","",""],[5,"DEBUG_SOURCE_WINDOW_SYSTEM","",""],[5,"DEBUG_SOURCE_SHADER_COMPILER","",""],[5,"DEBUG_SOURCE_THIRD_PARTY","",""],[5,"DEBUG_SOURCE_APPLICATION","",""],[5,"DEBUG_SOURCE_OTHER","",""],[5,"DEBUG_TYPE_ERROR","",""],[5,"DEBUG_TYPE_DEPRECATED_BEHAVIOR","",""],[5,"DEBUG_TYPE_UNDEFINED_BEHAVIOR","",""],[5,"DEBUG_TYPE_PORTABILITY","",""],[5,"DEBUG_TYPE_PERFORMANCE","",""],[5,"DEBUG_TYPE_OTHER","",""],[5,"PROGRAM_BINARY_RETRIEVABLE_HINT","",""],[5,"PROGRAM_SEPARABLE","",""],[5,"ACTIVE_PROGRAM","",""],[5,"PROGRAM_PIPELINE_BINDING","",""],[5,"MAX_VIEWPORTS","",""],[5,"VIEWPORT_SUBPIXEL_BITS","",""],[5,"VIEWPORT_BOUNDS_RANGE","",""],[5,"LAYER_PROVOKING_VERTEX","",""],[5,"VIEWPORT_INDEX_PROVOKING_VERTEX","",""],[5,"UNDEFINED_VERTEX","",""],[5,"MAX_COMPUTE_SHARED_MEMORY_SIZE","",""],[5,"MAX_COMPUTE_UNIFORM_COMPONENTS","",""],[5,"MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","",""],[5,"MAX_COMPUTE_ATOMIC_COUNTERS","",""],[5,"MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","",""],[5,"COMPUTE_WORK_GROUP_SIZE","",""],[5,"DEBUG_TYPE_MARKER","",""],[5,"DEBUG_TYPE_PUSH_GROUP","",""],[5,"DEBUG_TYPE_POP_GROUP","",""],[5,"DEBUG_SEVERITY_NOTIFICATION","",""],[5,"MAX_DEBUG_GROUP_STACK_DEPTH","",""],[5,"DEBUG_GROUP_STACK_DEPTH","",""],[5,"MAX_UNIFORM_LOCATIONS","",""],[5,"INTERNALFORMAT_SUPPORTED","",""],[5,"INTERNALFORMAT_PREFERRED","",""],[5,"INTERNALFORMAT_RED_SIZE","",""],[5,"INTERNALFORMAT_GREEN_SIZE","",""],[5,"INTERNALFORMAT_BLUE_SIZE","",""],[5,"INTERNALFORMAT_ALPHA_SIZE","",""],[5,"INTERNALFORMAT_DEPTH_SIZE","",""],[5,"INTERNALFORMAT_STENCIL_SIZE","",""],[5,"INTERNALFORMAT_SHARED_SIZE","",""],[5,"INTERNALFORMAT_RED_TYPE","",""],[5,"INTERNALFORMAT_GREEN_TYPE","",""],[5,"INTERNALFORMAT_BLUE_TYPE","",""],[5,"INTERNALFORMAT_ALPHA_TYPE","",""],[5,"INTERNALFORMAT_DEPTH_TYPE","",""],[5,"INTERNALFORMAT_STENCIL_TYPE","",""],[5,"MAX_WIDTH","",""],[5,"MAX_HEIGHT","",""],[5,"MAX_DEPTH","",""],[5,"MAX_LAYERS","",""],[5,"MAX_COMBINED_DIMENSIONS","",""],[5,"COLOR_COMPONENTS","",""],[5,"DEPTH_COMPONENTS","",""],[5,"STENCIL_COMPONENTS","",""],[5,"COLOR_RENDERABLE","",""],[5,"DEPTH_RENDERABLE","",""],[5,"STENCIL_RENDERABLE","",""],[5,"FRAMEBUFFER_RENDERABLE","",""],[5,"FRAMEBUFFER_RENDERABLE_LAYERED","",""],[5,"FRAMEBUFFER_BLEND","",""],[5,"READ_PIXELS","",""],[5,"READ_PIXELS_FORMAT","",""],[5,"READ_PIXELS_TYPE","",""],[5,"TEXTURE_IMAGE_FORMAT","",""],[5,"TEXTURE_IMAGE_TYPE","",""],[5,"GET_TEXTURE_IMAGE_FORMAT","",""],[5,"GET_TEXTURE_IMAGE_TYPE","",""],[5,"MIPMAP","",""],[5,"MANUAL_GENERATE_MIPMAP","",""],[5,"AUTO_GENERATE_MIPMAP","",""],[5,"COLOR_ENCODING","",""],[5,"SRGB_READ","",""],[5,"SRGB_WRITE","",""],[5,"FILTER","",""],[5,"VERTEX_TEXTURE","",""],[5,"TESS_CONTROL_TEXTURE","",""],[5,"TESS_EVALUATION_TEXTURE","",""],[5,"GEOMETRY_TEXTURE","",""],[5,"FRAGMENT_TEXTURE","",""],[5,"COMPUTE_TEXTURE","",""],[5,"TEXTURE_SHADOW","",""],[5,"TEXTURE_GATHER","",""],[5,"TEXTURE_GATHER_SHADOW","",""],[5,"SHADER_IMAGE_LOAD","",""],[5,"SHADER_IMAGE_STORE","",""],[5,"SHADER_IMAGE_ATOMIC","",""],[5,"IMAGE_TEXEL_SIZE","",""],[5,"IMAGE_COMPATIBILITY_CLASS","",""],[5,"IMAGE_PIXEL_FORMAT","",""],[5,"IMAGE_PIXEL_TYPE","",""],[5,"SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","",""],[5,"SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","",""],[5,"SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","",""],[5,"SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","",""],[5,"TEXTURE_COMPRESSED_BLOCK_WIDTH","",""],[5,"TEXTURE_COMPRESSED_BLOCK_HEIGHT","",""],[5,"TEXTURE_COMPRESSED_BLOCK_SIZE","",""],[5,"CLEAR_BUFFER","",""],[5,"TEXTURE_VIEW","",""],[5,"VIEW_COMPATIBILITY_CLASS","",""],[5,"FULL_SUPPORT","",""],[5,"CAVEAT_SUPPORT","",""],[5,"IMAGE_CLASS_4_X_32","",""],[5,"IMAGE_CLASS_2_X_32","",""],[5,"IMAGE_CLASS_1_X_32","",""],[5,"IMAGE_CLASS_4_X_16","",""],[5,"IMAGE_CLASS_2_X_16","",""],[5,"IMAGE_CLASS_1_X_16","",""],[5,"IMAGE_CLASS_4_X_8","",""],[5,"IMAGE_CLASS_2_X_8","",""],[5,"IMAGE_CLASS_1_X_8","",""],[5,"IMAGE_CLASS_11_11_10","",""],[5,"IMAGE_CLASS_10_10_10_2","",""],[5,"VIEW_CLASS_128_BITS","",""],[5,"VIEW_CLASS_96_BITS","",""],[5,"VIEW_CLASS_64_BITS","",""],[5,"VIEW_CLASS_48_BITS","",""],[5,"VIEW_CLASS_32_BITS","",""],[5,"VIEW_CLASS_24_BITS","",""],[5,"VIEW_CLASS_16_BITS","",""],[5,"VIEW_CLASS_8_BITS","",""],[5,"VIEW_CLASS_S3TC_DXT1_RGB","",""],[5,"VIEW_CLASS_S3TC_DXT1_RGBA","",""],[5,"VIEW_CLASS_S3TC_DXT3_RGBA","",""],[5,"VIEW_CLASS_S3TC_DXT5_RGBA","",""],[5,"VIEW_CLASS_RGTC1_RED","",""],[5,"VIEW_CLASS_RGTC2_RG","",""],[5,"VIEW_CLASS_BPTC_UNORM","",""],[5,"VIEW_CLASS_BPTC_FLOAT","",""],[5,"VERTEX_ATTRIB_BINDING","",""],[5,"VERTEX_ATTRIB_RELATIVE_OFFSET","",""],[5,"VERTEX_BINDING_DIVISOR","",""],[5,"VERTEX_BINDING_OFFSET","",""],[5,"VERTEX_BINDING_STRIDE","",""],[5,"MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","",""],[5,"MAX_VERTEX_ATTRIB_BINDINGS","",""],[5,"TEXTURE_VIEW_MIN_LEVEL","",""],[5,"TEXTURE_VIEW_NUM_LEVELS","",""],[5,"TEXTURE_VIEW_MIN_LAYER","",""],[5,"TEXTURE_VIEW_NUM_LAYERS","",""],[5,"TEXTURE_IMMUTABLE_LEVELS","",""],[5,"BUFFER","",""],[5,"SHADER","",""],[5,"PROGRAM","",""],[5,"QUERY","",""],[5,"PROGRAM_PIPELINE","",""],[5,"SAMPLER","",""],[5,"DISPLAY_LIST","",""],[5,"MAX_LABEL_LENGTH","",""],[5,"NUM_SHADING_LANGUAGE_VERSIONS","",""],[5,"UNSIGNED_BYTE_2_3_3_REV","",""],[5,"UNSIGNED_SHORT_5_6_5","",""],[5,"UNSIGNED_SHORT_5_6_5_REV","",""],[5,"UNSIGNED_SHORT_4_4_4_4_REV","",""],[5,"UNSIGNED_SHORT_1_5_5_5_REV","",""],[5,"UNSIGNED_INT_8_8_8_8_REV","",""],[5,"UNSIGNED_INT_2_10_10_10_REV","",""],[5,"MIRRORED_REPEAT","",""],[5,"ALIASED_LINE_WIDTH_RANGE","",""],[5,"TEXTURE0","",""],[5,"TEXTURE1","",""],[5,"TEXTURE2","",""],[5,"TEXTURE3","",""],[5,"TEXTURE4","",""],[5,"TEXTURE5","",""],[5,"TEXTURE6","",""],[5,"TEXTURE7","",""],[5,"TEXTURE8","",""],[5,"TEXTURE9","",""],[5,"TEXTURE10","",""],[5,"TEXTURE11","",""],[5,"TEXTURE12","",""],[5,"TEXTURE13","",""],[5,"TEXTURE14","",""],[5,"TEXTURE15","",""],[5,"TEXTURE16","",""],[5,"TEXTURE17","",""],[5,"TEXTURE18","",""],[5,"TEXTURE19","",""],[5,"TEXTURE20","",""],[5,"TEXTURE21","",""],[5,"TEXTURE22","",""],[5,"TEXTURE23","",""],[5,"TEXTURE24","",""],[5,"TEXTURE25","",""],[5,"TEXTURE26","",""],[5,"TEXTURE27","",""],[5,"TEXTURE28","",""],[5,"TEXTURE29","",""],[5,"TEXTURE30","",""],[5,"TEXTURE31","",""],[5,"ACTIVE_TEXTURE","",""],[5,"MAX_RENDERBUFFER_SIZE","",""],[5,"COMPRESSED_RGB","",""],[5,"COMPRESSED_RGBA","",""],[5,"TEXTURE_COMPRESSION_HINT","",""],[5,"UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","",""],[5,"UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","",""],[5,"TEXTURE_RECTANGLE","",""],[5,"TEXTURE_BINDING_RECTANGLE","",""],[5,"PROXY_TEXTURE_RECTANGLE","",""],[5,"MAX_RECTANGLE_TEXTURE_SIZE","",""],[5,"DEPTH_STENCIL","",""],[5,"UNSIGNED_INT_24_8","",""],[5,"MAX_TEXTURE_LOD_BIAS","",""],[5,"TEXTURE_MAX_ANISOTROPY_EXT","",""],[5,"MAX_TEXTURE_MAX_ANISOTROPY_EXT","",""],[5,"TEXTURE_LOD_BIAS","",""],[5,"INCR_WRAP","",""],[5,"DECR_WRAP","",""],[5,"TEXTURE_CUBE_MAP","",""],[5,"TEXTURE_BINDING_CUBE_MAP","",""],[5,"TEXTURE_CUBE_MAP_POSITIVE_X","",""],[5,"TEXTURE_CUBE_MAP_NEGATIVE_X","",""],[5,"TEXTURE_CUBE_MAP_POSITIVE_Y","",""],[5,"TEXTURE_CUBE_MAP_NEGATIVE_Y","",""],[5,"TEXTURE_CUBE_MAP_POSITIVE_Z","",""],[5,"TEXTURE_CUBE_MAP_NEGATIVE_Z","",""],[5,"PROXY_TEXTURE_CUBE_MAP","",""],[5,"MAX_CUBE_MAP_TEXTURE_SIZE","",""],[5,"SRC1_ALPHA","",""],[5,"VERTEX_ARRAY_BINDING","",""],[5,"VERTEX_ATTRIB_ARRAY_ENABLED","",""],[5,"VERTEX_ATTRIB_ARRAY_SIZE","",""],[5,"VERTEX_ATTRIB_ARRAY_STRIDE","",""],[5,"VERTEX_ATTRIB_ARRAY_TYPE","",""],[5,"CURRENT_VERTEX_ATTRIB","",""],[5,"VERTEX_PROGRAM_POINT_SIZE","",""],[5,"PROGRAM_POINT_SIZE","",""],[5,"VERTEX_ATTRIB_ARRAY_POINTER","",""],[5,"DEPTH_CLAMP","",""],[5,"TEXTURE_COMPRESSED_IMAGE_SIZE","",""],[5,"TEXTURE_COMPRESSED","",""],[5,"NUM_COMPRESSED_TEXTURE_FORMATS","",""],[5,"COMPRESSED_TEXTURE_FORMATS","",""],[5,"PROGRAM_BINARY_LENGTH","",""],[5,"VERTEX_ATTRIB_ARRAY_LONG","",""],[5,"BUFFER_SIZE","",""],[5,"BUFFER_USAGE","",""],[5,"NUM_PROGRAM_BINARY_FORMATS","",""],[5,"PROGRAM_BINARY_FORMATS","",""],[5,"STENCIL_BACK_FUNC","",""],[5,"STENCIL_BACK_FAIL","",""],[5,"STENCIL_BACK_PASS_DEPTH_FAIL","",""],[5,"STENCIL_BACK_PASS_DEPTH_PASS","",""],[5,"RGBA32F","",""],[5,"RGB32F","",""],[5,"RGBA16F","",""],[5,"RGB16F","",""],[5,"MAX_DRAW_BUFFERS","",""],[5,"DRAW_BUFFER0","",""],[5,"DRAW_BUFFER1","",""],[5,"DRAW_BUFFER2","",""],[5,"DRAW_BUFFER3","",""],[5,"DRAW_BUFFER4","",""],[5,"DRAW_BUFFER5","",""],[5,"DRAW_BUFFER6","",""],[5,"DRAW_BUFFER7","",""],[5,"DRAW_BUFFER8","",""],[5,"DRAW_BUFFER9","",""],[5,"DRAW_BUFFER10","",""],[5,"DRAW_BUFFER11","",""],[5,"DRAW_BUFFER12","",""],[5,"DRAW_BUFFER13","",""],[5,"DRAW_BUFFER14","",""],[5,"DRAW_BUFFER15","",""],[5,"BLEND_EQUATION_ALPHA","",""],[5,"TEXTURE_DEPTH_SIZE","",""],[5,"TEXTURE_COMPARE_MODE","",""],[5,"TEXTURE_COMPARE_FUNC","",""],[5,"COMPARE_REF_TO_TEXTURE","",""],[5,"TEXTURE_CUBE_MAP_SEAMLESS","",""],[5,"QUERY_COUNTER_BITS","",""],[5,"CURRENT_QUERY","",""],[5,"QUERY_RESULT","",""],[5,"QUERY_RESULT_AVAILABLE","",""],[5,"MAX_VERTEX_ATTRIBS","",""],[5,"VERTEX_ATTRIB_ARRAY_NORMALIZED","",""],[5,"MAX_TESS_CONTROL_INPUT_COMPONENTS","",""],[5,"MAX_TESS_EVALUATION_INPUT_COMPONENTS","",""],[5,"MAX_TEXTURE_IMAGE_UNITS","",""],[5,"GEOMETRY_SHADER_INVOCATIONS","",""],[5,"ARRAY_BUFFER","",""],[5,"ELEMENT_ARRAY_BUFFER","",""],[5,"ARRAY_BUFFER_BINDING","",""],[5,"ELEMENT_ARRAY_BUFFER_BINDING","",""],[5,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","",""],[5,"READ_ONLY","",""],[5,"WRITE_ONLY","",""],[5,"READ_WRITE","",""],[5,"BUFFER_ACCESS","",""],[5,"BUFFER_MAPPED","",""],[5,"BUFFER_MAP_POINTER","",""],[5,"TIME_ELAPSED","",""],[5,"STREAM_DRAW","",""],[5,"STREAM_READ","",""],[5,"STREAM_COPY","",""],[5,"STATIC_DRAW","",""],[5,"STATIC_READ","",""],[5,"STATIC_COPY","",""],[5,"DYNAMIC_DRAW","",""],[5,"DYNAMIC_READ","",""],[5,"DYNAMIC_COPY","",""],[5,"PIXEL_PACK_BUFFER","",""],[5,"PIXEL_UNPACK_BUFFER","",""],[5,"PIXEL_PACK_BUFFER_BINDING","",""],[5,"PIXEL_UNPACK_BUFFER_BINDING","",""],[5,"DEPTH24_STENCIL8","",""],[5,"TEXTURE_STENCIL_SIZE","",""],[5,"SRC1_COLOR","",""],[5,"ONE_MINUS_SRC1_COLOR","",""],[5,"ONE_MINUS_SRC1_ALPHA","",""],[5,"MAX_DUAL_SOURCE_DRAW_BUFFERS","",""],[5,"VERTEX_ATTRIB_ARRAY_INTEGER","",""],[5,"VERTEX_ATTRIB_ARRAY_DIVISOR","",""],[5,"MAX_ARRAY_TEXTURE_LAYERS","",""],[5,"MIN_PROGRAM_TEXEL_OFFSET","",""],[5,"MAX_PROGRAM_TEXEL_OFFSET","",""],[5,"SAMPLES_PASSED","",""],[5,"GEOMETRY_VERTICES_OUT","",""],[5,"GEOMETRY_INPUT_TYPE","",""],[5,"GEOMETRY_OUTPUT_TYPE","",""],[5,"SAMPLER_BINDING","",""],[5,"CLAMP_READ_COLOR","",""],[5,"FIXED_ONLY","",""],[5,"UNIFORM_BUFFER","",""],[5,"UNIFORM_BUFFER_BINDING","",""],[5,"UNIFORM_BUFFER_START","",""],[5,"UNIFORM_BUFFER_SIZE","",""],[5,"MAX_VERTEX_UNIFORM_BLOCKS","",""],[5,"MAX_FRAGMENT_UNIFORM_BLOCKS","",""],[5,"MAX_COMBINED_UNIFORM_BLOCKS","",""],[5,"MAX_UNIFORM_BUFFER_BINDINGS","",""],[5,"MAX_UNIFORM_BLOCK_SIZE","",""],[5,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","",""],[5,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","",""],[5,"UNIFORM_BUFFER_OFFSET_ALIGNMENT","",""],[5,"ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","",""],[5,"ACTIVE_UNIFORM_BLOCKS","",""],[5,"UNIFORM_TYPE","",""],[5,"UNIFORM_SIZE","",""],[5,"UNIFORM_NAME_LENGTH","",""],[5,"UNIFORM_BLOCK_INDEX","",""],[5,"UNIFORM_OFFSET","",""],[5,"UNIFORM_ARRAY_STRIDE","",""],[5,"UNIFORM_MATRIX_STRIDE","",""],[5,"UNIFORM_IS_ROW_MAJOR","",""],[5,"UNIFORM_BLOCK_BINDING","",""],[5,"UNIFORM_BLOCK_DATA_SIZE","",""],[5,"UNIFORM_BLOCK_NAME_LENGTH","",""],[5,"UNIFORM_BLOCK_ACTIVE_UNIFORMS","",""],[5,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","",""],[5,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","",""],[5,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","",""],[5,"FRAGMENT_SHADER","",""],[5,"VERTEX_SHADER","",""],[5,"MAX_FRAGMENT_UNIFORM_COMPONENTS","",""],[5,"MAX_VERTEX_UNIFORM_COMPONENTS","",""],[5,"MAX_VARYING_FLOATS","",""],[5,"MAX_VARYING_COMPONENTS","",""],[5,"MAX_VERTEX_TEXTURE_IMAGE_UNITS","",""],[5,"MAX_COMBINED_TEXTURE_IMAGE_UNITS","",""],[5,"SHADER_TYPE","",""],[5,"FLOAT_VEC2","",""],[5,"FLOAT_VEC3","",""],[5,"FLOAT_VEC4","",""],[5,"INT_VEC2","",""],[5,"INT_VEC3","",""],[5,"INT_VEC4","",""],[5,"BOOL","",""],[5,"BOOL_VEC2","",""],[5,"BOOL_VEC3","",""],[5,"BOOL_VEC4","",""],[5,"FLOAT_MAT2","",""],[5,"FLOAT_MAT3","",""],[5,"FLOAT_MAT4","",""],[5,"SAMPLER_1D","",""],[5,"SAMPLER_2D","",""],[5,"SAMPLER_3D","",""],[5,"SAMPLER_CUBE","",""],[5,"SAMPLER_1D_SHADOW","",""],[5,"SAMPLER_2D_SHADOW","",""],[5,"SAMPLER_2D_RECT","",""],[5,"SAMPLER_2D_RECT_SHADOW","",""],[5,"FLOAT_MAT2x3","",""],[5,"FLOAT_MAT2x4","",""],[5,"FLOAT_MAT3x2","",""],[5,"FLOAT_MAT3x4","",""],[5,"FLOAT_MAT4x2","",""],[5,"FLOAT_MAT4x3","",""],[5,"DELETE_STATUS","",""],[5,"COMPILE_STATUS","",""],[5,"LINK_STATUS","",""],[5,"VALIDATE_STATUS","",""],[5,"INFO_LOG_LENGTH","",""],[5,"ATTACHED_SHADERS","",""],[5,"ACTIVE_UNIFORMS","",""],[5,"ACTIVE_UNIFORM_MAX_LENGTH","",""],[5,"SHADER_SOURCE_LENGTH","",""],[5,"ACTIVE_ATTRIBUTES","",""],[5,"ACTIVE_ATTRIBUTE_MAX_LENGTH","",""],[5,"FRAGMENT_SHADER_DERIVATIVE_HINT","",""],[5,"SHADING_LANGUAGE_VERSION","",""],[5,"CURRENT_PROGRAM","",""],[5,"IMPLEMENTATION_COLOR_READ_TYPE","",""],[5,"IMPLEMENTATION_COLOR_READ_FORMAT","",""],[5,"TEXTURE_RED_TYPE","",""],[5,"TEXTURE_GREEN_TYPE","",""],[5,"TEXTURE_BLUE_TYPE","",""],[5,"TEXTURE_ALPHA_TYPE","",""],[5,"TEXTURE_DEPTH_TYPE","",""],[5,"UNSIGNED_NORMALIZED","",""],[5,"TEXTURE_1D_ARRAY","",""],[5,"PROXY_TEXTURE_1D_ARRAY","",""],[5,"TEXTURE_2D_ARRAY","",""],[5,"PROXY_TEXTURE_2D_ARRAY","",""],[5,"TEXTURE_BINDING_1D_ARRAY","",""],[5,"TEXTURE_BINDING_2D_ARRAY","",""],[5,"MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","",""],[5,"TEXTURE_BUFFER","",""],[5,"MAX_TEXTURE_BUFFER_SIZE","",""],[5,"TEXTURE_BINDING_BUFFER","",""],[5,"TEXTURE_BUFFER_DATA_STORE_BINDING","",""],[5,"ANY_SAMPLES_PASSED","",""],[5,"SAMPLE_SHADING","",""],[5,"MIN_SAMPLE_SHADING_VALUE","",""],[5,"R11F_G11F_B10F","",""],[5,"UNSIGNED_INT_10F_11F_11F_REV","",""],[5,"RGB9_E5","",""],[5,"UNSIGNED_INT_5_9_9_9_REV","",""],[5,"TEXTURE_SHARED_SIZE","",""],[5,"SRGB","",""],[5,"SRGB8","",""],[5,"SRGB_ALPHA","",""],[5,"SRGB8_ALPHA8","",""],[5,"COMPRESSED_SRGB","",""],[5,"COMPRESSED_SRGB_ALPHA","",""],[5,"TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","",""],[5,"TRANSFORM_FEEDBACK_BUFFER_MODE","",""],[5,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","",""],[5,"TRANSFORM_FEEDBACK_VARYINGS","",""],[5,"TRANSFORM_FEEDBACK_BUFFER_START","",""],[5,"TRANSFORM_FEEDBACK_BUFFER_SIZE","",""],[5,"PRIMITIVES_GENERATED","",""],[5,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","",""],[5,"RASTERIZER_DISCARD","",""],[5,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","",""],[5,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","",""],[5,"INTERLEAVED_ATTRIBS","",""],[5,"SEPARATE_ATTRIBS","",""],[5,"TRANSFORM_FEEDBACK_BUFFER","",""],[5,"TRANSFORM_FEEDBACK_BUFFER_BINDING","",""],[5,"POINT_SPRITE_COORD_ORIGIN","",""],[5,"LOWER_LEFT","",""],[5,"UPPER_LEFT","",""],[5,"STENCIL_BACK_REF","",""],[5,"STENCIL_BACK_VALUE_MASK","",""],[5,"STENCIL_BACK_WRITEMASK","",""],[5,"DRAW_FRAMEBUFFER_BINDING","",""],[5,"FRAMEBUFFER_BINDING","",""],[5,"RENDERBUFFER_BINDING","",""],[5,"READ_FRAMEBUFFER","",""],[5,"DRAW_FRAMEBUFFER","",""],[5,"READ_FRAMEBUFFER_BINDING","",""],[5,"RENDERBUFFER_SAMPLES","",""],[5,"DEPTH_COMPONENT32F","",""],[5,"DEPTH32F_STENCIL8","",""],[5,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","",""],[5,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","",""],[5,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","",""],[5,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","",""],[5,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","",""],[5,"FRAMEBUFFER_COMPLETE","",""],[5,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT","",""],[5,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","",""],[5,"FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","",""],[5,"FRAMEBUFFER_INCOMPLETE_READ_BUFFER","",""],[5,"FRAMEBUFFER_UNSUPPORTED","",""],[5,"MAX_COLOR_ATTACHMENTS","",""],[5,"COLOR_ATTACHMENT0","",""],[5,"COLOR_ATTACHMENT1","",""],[5,"COLOR_ATTACHMENT2","",""],[5,"COLOR_ATTACHMENT3","",""],[5,"COLOR_ATTACHMENT4","",""],[5,"COLOR_ATTACHMENT5","",""],[5,"COLOR_ATTACHMENT6","",""],[5,"COLOR_ATTACHMENT7","",""],[5,"COLOR_ATTACHMENT8","",""],[5,"COLOR_ATTACHMENT9","",""],[5,"COLOR_ATTACHMENT10","",""],[5,"COLOR_ATTACHMENT11","",""],[5,"COLOR_ATTACHMENT12","",""],[5,"COLOR_ATTACHMENT13","",""],[5,"COLOR_ATTACHMENT14","",""],[5,"COLOR_ATTACHMENT15","",""],[5,"DEPTH_ATTACHMENT","",""],[5,"STENCIL_ATTACHMENT","",""],[5,"FRAMEBUFFER","",""],[5,"RENDERBUFFER","",""],[5,"RENDERBUFFER_WIDTH","",""],[5,"RENDERBUFFER_HEIGHT","",""],[5,"RENDERBUFFER_INTERNAL_FORMAT","",""],[5,"STENCIL_INDEX1","",""],[5,"STENCIL_INDEX4","",""],[5,"STENCIL_INDEX8","",""],[5,"STENCIL_INDEX16","",""],[5,"RENDERBUFFER_RED_SIZE","",""],[5,"RENDERBUFFER_GREEN_SIZE","",""],[5,"RENDERBUFFER_BLUE_SIZE","",""],[5,"RENDERBUFFER_ALPHA_SIZE","",""],[5,"RENDERBUFFER_DEPTH_SIZE","",""],[5,"RENDERBUFFER_STENCIL_SIZE","",""],[5,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","",""],[5,"MAX_SAMPLES","",""],[5,"RGB565","",""],[5,"PRIMITIVE_RESTART_FIXED_INDEX","",""],[5,"ANY_SAMPLES_PASSED_CONSERVATIVE","",""],[5,"MAX_ELEMENT_INDEX","",""],[5,"RGBA32UI","",""],[5,"RGB32UI","",""],[5,"RGBA16UI","",""],[5,"RGB16UI","",""],[5,"RGBA8UI","",""],[5,"RGB8UI","",""],[5,"RGBA32I","",""],[5,"RGB32I","",""],[5,"RGBA16I","",""],[5,"RGB16I","",""],[5,"RGBA8I","",""],[5,"RGB8I","",""],[5,"RED_INTEGER","",""],[5,"GREEN_INTEGER","",""],[5,"BLUE_INTEGER","",""],[5,"RGB_INTEGER","",""],[5,"RGBA_INTEGER","",""],[5,"BGR_INTEGER","",""],[5,"BGRA_INTEGER","",""],[5,"INT_2_10_10_10_REV","",""],[5,"FRAMEBUFFER_ATTACHMENT_LAYERED","",""],[5,"FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","",""],[5,"FLOAT_32_UNSIGNED_INT_24_8_REV","",""],[5,"FRAMEBUFFER_SRGB","",""],[5,"COMPRESSED_RED_RGTC1","",""],[5,"COMPRESSED_SIGNED_RED_RGTC1","",""],[5,"COMPRESSED_RG_RGTC2","",""],[5,"COMPRESSED_SIGNED_RG_RGTC2","",""],[5,"SAMPLER_1D_ARRAY","",""],[5,"SAMPLER_2D_ARRAY","",""],[5,"SAMPLER_BUFFER","",""],[5,"SAMPLER_1D_ARRAY_SHADOW","",""],[5,"SAMPLER_2D_ARRAY_SHADOW","",""],[5,"SAMPLER_CUBE_SHADOW","",""],[5,"UNSIGNED_INT_VEC2","",""],[5,"UNSIGNED_INT_VEC3","",""],[5,"UNSIGNED_INT_VEC4","",""],[5,"INT_SAMPLER_1D","",""],[5,"INT_SAMPLER_2D","",""],[5,"INT_SAMPLER_3D","",""],[5,"INT_SAMPLER_CUBE","",""],[5,"INT_SAMPLER_2D_RECT","",""],[5,"INT_SAMPLER_1D_ARRAY","",""],[5,"INT_SAMPLER_2D_ARRAY","",""],[5,"INT_SAMPLER_BUFFER","",""],[5,"UNSIGNED_INT_SAMPLER_1D","",""],[5,"UNSIGNED_INT_SAMPLER_2D","",""],[5,"UNSIGNED_INT_SAMPLER_3D","",""],[5,"UNSIGNED_INT_SAMPLER_CUBE","",""],[5,"UNSIGNED_INT_SAMPLER_2D_RECT","",""],[5,"UNSIGNED_INT_SAMPLER_1D_ARRAY","",""],[5,"UNSIGNED_INT_SAMPLER_2D_ARRAY","",""],[5,"UNSIGNED_INT_SAMPLER_BUFFER","",""],[5,"GEOMETRY_SHADER","",""],[5,"MAX_GEOMETRY_UNIFORM_COMPONENTS","",""],[5,"MAX_GEOMETRY_OUTPUT_VERTICES","",""],[5,"MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","",""],[5,"ACTIVE_SUBROUTINES","",""],[5,"ACTIVE_SUBROUTINE_UNIFORMS","",""],[5,"MAX_SUBROUTINES","",""],[5,"MAX_SUBROUTINE_UNIFORM_LOCATIONS","",""],[5,"LOW_FLOAT","",""],[5,"MEDIUM_FLOAT","",""],[5,"HIGH_FLOAT","",""],[5,"LOW_INT","",""],[5,"MEDIUM_INT","",""],[5,"HIGH_INT","",""],[5,"SHADER_BINARY_FORMATS","",""],[5,"NUM_SHADER_BINARY_FORMATS","",""],[5,"SHADER_COMPILER","",""],[5,"MAX_VERTEX_UNIFORM_VECTORS","",""],[5,"MAX_VARYING_VECTORS","",""],[5,"MAX_FRAGMENT_UNIFORM_VECTORS","",""],[5,"QUERY_WAIT","",""],[5,"QUERY_NO_WAIT","",""],[5,"QUERY_BY_REGION_WAIT","",""],[5,"QUERY_BY_REGION_NO_WAIT","",""],[5,"MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","",""],[5,"MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","",""],[5,"TRANSFORM_FEEDBACK","",""],[5,"TRANSFORM_FEEDBACK_BUFFER_PAUSED","",""],[5,"TRANSFORM_FEEDBACK_BUFFER_ACTIVE","",""],[5,"TRANSFORM_FEEDBACK_BINDING","",""],[5,"TIMESTAMP","",""],[5,"TEXTURE_SWIZZLE_R","",""],[5,"TEXTURE_SWIZZLE_G","",""],[5,"TEXTURE_SWIZZLE_B","",""],[5,"TEXTURE_SWIZZLE_A","",""],[5,"TEXTURE_SWIZZLE_RGBA","",""],[5,"ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","",""],[5,"ACTIVE_SUBROUTINE_MAX_LENGTH","",""],[5,"ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","",""],[5,"NUM_COMPATIBLE_SUBROUTINES","",""],[5,"COMPATIBLE_SUBROUTINES","",""],[5,"QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","",""],[5,"FIRST_VERTEX_CONVENTION","",""],[5,"LAST_VERTEX_CONVENTION","",""],[5,"PROVOKING_VERTEX","",""],[5,"SAMPLE_POSITION","",""],[5,"SAMPLE_MASK","",""],[5,"SAMPLE_MASK_VALUE","",""],[5,"MAX_SAMPLE_MASK_WORDS","",""],[5,"MAX_GEOMETRY_SHADER_INVOCATIONS","",""],[5,"MIN_FRAGMENT_INTERPOLATION_OFFSET","",""],[5,"MAX_FRAGMENT_INTERPOLATION_OFFSET","",""],[5,"FRAGMENT_INTERPOLATION_OFFSET_BITS","",""],[5,"MIN_PROGRAM_TEXTURE_GATHER_OFFSET","",""],[5,"MAX_PROGRAM_TEXTURE_GATHER_OFFSET","",""],[5,"MAX_TRANSFORM_FEEDBACK_BUFFERS","",""],[5,"MAX_VERTEX_STREAMS","",""],[5,"PATCH_VERTICES","",""],[5,"PATCH_DEFAULT_INNER_LEVEL","",""],[5,"PATCH_DEFAULT_OUTER_LEVEL","",""],[5,"TESS_CONTROL_OUTPUT_VERTICES","",""],[5,"TESS_GEN_MODE","",""],[5,"TESS_GEN_SPACING","",""],[5,"TESS_GEN_VERTEX_ORDER","",""],[5,"TESS_GEN_POINT_MODE","",""],[5,"ISOLINES","",""],[5,"FRACTIONAL_ODD","",""],[5,"FRACTIONAL_EVEN","",""],[5,"MAX_PATCH_VERTICES","",""],[5,"MAX_TESS_GEN_LEVEL","",""],[5,"MAX_TESS_CONTROL_UNIFORM_COMPONENTS","",""],[5,"MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","",""],[5,"MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","",""],[5,"MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","",""],[5,"MAX_TESS_CONTROL_OUTPUT_COMPONENTS","",""],[5,"MAX_TESS_PATCH_COMPONENTS","",""],[5,"MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","",""],[5,"MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","",""],[5,"TESS_EVALUATION_SHADER","",""],[5,"TESS_CONTROL_SHADER","",""],[5,"MAX_TESS_CONTROL_UNIFORM_BLOCKS","",""],[5,"MAX_TESS_EVALUATION_UNIFORM_BLOCKS","",""],[5,"COMPRESSED_RGBA_BPTC_UNORM","",""],[5,"COMPRESSED_SRGB_ALPHA_BPTC_UNORM","",""],[5,"COMPRESSED_RGB_BPTC_SIGNED_FLOAT","",""],[5,"COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","",""],[5,"COPY_READ_BUFFER","",""],[5,"COPY_WRITE_BUFFER","",""],[5,"MAX_IMAGE_UNITS","",""],[5,"MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","",""],[5,"MAX_COMBINED_SHADER_OUTPUT_RESOURCES","",""],[5,"IMAGE_BINDING_NAME","",""],[5,"IMAGE_BINDING_LEVEL","",""],[5,"IMAGE_BINDING_LAYERED","",""],[5,"IMAGE_BINDING_LAYER","",""],[5,"IMAGE_BINDING_ACCESS","",""],[5,"DRAW_INDIRECT_BUFFER","",""],[5,"DRAW_INDIRECT_BUFFER_BINDING","",""],[5,"DOUBLE_MAT2","",""],[5,"DOUBLE_MAT3","",""],[5,"DOUBLE_MAT4","",""],[5,"DOUBLE_MAT2x3","",""],[5,"DOUBLE_MAT2x4","",""],[5,"DOUBLE_MAT3x2","",""],[5,"DOUBLE_MAT3x4","",""],[5,"DOUBLE_MAT4x2","",""],[5,"DOUBLE_MAT4x3","",""],[5,"VERTEX_BINDING_BUFFER","",""],[5,"R8_SNORM","",""],[5,"RG8_SNORM","",""],[5,"RGB8_SNORM","",""],[5,"RGBA8_SNORM","",""],[5,"R16_SNORM","",""],[5,"RG16_SNORM","",""],[5,"RGB16_SNORM","",""],[5,"RGBA16_SNORM","",""],[5,"SIGNED_NORMALIZED","",""],[5,"PRIMITIVE_RESTART","",""],[5,"PRIMITIVE_RESTART_INDEX","",""],[5,"DOUBLE_VEC2","",""],[5,"DOUBLE_VEC3","",""],[5,"DOUBLE_VEC4","",""],[5,"TEXTURE_CUBE_MAP_ARRAY","",""],[5,"TEXTURE_BINDING_CUBE_MAP_ARRAY","",""],[5,"PROXY_TEXTURE_CUBE_MAP_ARRAY","",""],[5,"SAMPLER_CUBE_MAP_ARRAY","",""],[5,"SAMPLER_CUBE_MAP_ARRAY_SHADOW","",""],[5,"INT_SAMPLER_CUBE_MAP_ARRAY","",""],[5,"UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","",""],[5,"IMAGE_1D","",""],[5,"IMAGE_2D","",""],[5,"IMAGE_3D","",""],[5,"IMAGE_2D_RECT","",""],[5,"IMAGE_CUBE","",""],[5,"IMAGE_BUFFER","",""],[5,"IMAGE_1D_ARRAY","",""],[5,"IMAGE_2D_ARRAY","",""],[5,"IMAGE_CUBE_MAP_ARRAY","",""],[5,"IMAGE_2D_MULTISAMPLE","",""],[5,"IMAGE_2D_MULTISAMPLE_ARRAY","",""],[5,"INT_IMAGE_1D","",""],[5,"INT_IMAGE_2D","",""],[5,"INT_IMAGE_3D","",""],[5,"INT_IMAGE_2D_RECT","",""],[5,"INT_IMAGE_CUBE","",""],[5,"INT_IMAGE_BUFFER","",""],[5,"INT_IMAGE_1D_ARRAY","",""],[5,"INT_IMAGE_2D_ARRAY","",""],[5,"INT_IMAGE_CUBE_MAP_ARRAY","",""],[5,"INT_IMAGE_2D_MULTISAMPLE","",""],[5,"INT_IMAGE_2D_MULTISAMPLE_ARRAY","",""],[5,"UNSIGNED_INT_IMAGE_1D","",""],[5,"UNSIGNED_INT_IMAGE_2D","",""],[5,"UNSIGNED_INT_IMAGE_3D","",""],[5,"UNSIGNED_INT_IMAGE_2D_RECT","",""],[5,"UNSIGNED_INT_IMAGE_CUBE","",""],[5,"UNSIGNED_INT_IMAGE_BUFFER","",""],[5,"UNSIGNED_INT_IMAGE_1D_ARRAY","",""],[5,"UNSIGNED_INT_IMAGE_2D_ARRAY","",""],[5,"UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","",""],[5,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","",""],[5,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","",""],[5,"MAX_IMAGE_SAMPLES","",""],[5,"IMAGE_BINDING_FORMAT","",""],[5,"RGB10_A2UI","",""],[5,"MIN_MAP_BUFFER_ALIGNMENT","",""],[5,"IMAGE_FORMAT_COMPATIBILITY_TYPE","",""],[5,"IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","",""],[5,"IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","",""],[5,"MAX_VERTEX_IMAGE_UNIFORMS","",""],[5,"MAX_TESS_CONTROL_IMAGE_UNIFORMS","",""],[5,"MAX_TESS_EVALUATION_IMAGE_UNIFORMS","",""],[5,"MAX_GEOMETRY_IMAGE_UNIFORMS","",""],[5,"MAX_FRAGMENT_IMAGE_UNIFORMS","",""],[5,"MAX_COMBINED_IMAGE_UNIFORMS","",""],[5,"SHADER_STORAGE_BUFFER","",""],[5,"SHADER_STORAGE_BUFFER_BINDING","",""],[5,"SHADER_STORAGE_BUFFER_START","",""],[5,"SHADER_STORAGE_BUFFER_SIZE","",""],[5,"MAX_VERTEX_SHADER_STORAGE_BLOCKS","",""],[5,"MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","",""],[5,"MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","",""],[5,"MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","",""],[5,"MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","",""],[5,"MAX_COMPUTE_SHADER_STORAGE_BLOCKS","",""],[5,"MAX_COMBINED_SHADER_STORAGE_BLOCKS","",""],[5,"MAX_SHADER_STORAGE_BUFFER_BINDINGS","",""],[5,"MAX_SHADER_STORAGE_BLOCK_SIZE","",""],[5,"SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","",""],[5,"DEPTH_STENCIL_TEXTURE_MODE","",""],[5,"MAX_COMPUTE_WORK_GROUP_INVOCATIONS","",""],[5,"UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","",""],[5,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","",""],[5,"DISPATCH_INDIRECT_BUFFER","",""],[5,"DISPATCH_INDIRECT_BUFFER_BINDING","",""],[5,"TEXTURE_2D_MULTISAMPLE","",""],[5,"PROXY_TEXTURE_2D_MULTISAMPLE","",""],[5,"TEXTURE_2D_MULTISAMPLE_ARRAY","",""],[5,"PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","",""],[5,"TEXTURE_BINDING_2D_MULTISAMPLE","",""],[5,"TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","",""],[5,"TEXTURE_SAMPLES","",""],[5,"TEXTURE_FIXED_SAMPLE_LOCATIONS","",""],[5,"SAMPLER_2D_MULTISAMPLE","",""],[5,"INT_SAMPLER_2D_MULTISAMPLE","",""],[5,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","",""],[5,"SAMPLER_2D_MULTISAMPLE_ARRAY","",""],[5,"INT_SAMPLER_2D_MULTISAMPLE_ARRAY","",""],[5,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","",""],[5,"MAX_COLOR_TEXTURE_SAMPLES","",""],[5,"MAX_DEPTH_TEXTURE_SAMPLES","",""],[5,"MAX_INTEGER_SAMPLES","",""],[5,"MAX_SERVER_WAIT_TIMEOUT","",""],[5,"OBJECT_TYPE","",""],[5,"SYNC_CONDITION","",""],[5,"SYNC_STATUS","",""],[5,"SYNC_FLAGS","",""],[5,"SYNC_FENCE","",""],[5,"SYNC_GPU_COMMANDS_COMPLETE","",""],[5,"UNSIGNALED","",""],[5,"SIGNALED","",""],[5,"ALREADY_SIGNALED","",""],[5,"TIMEOUT_EXPIRED","",""],[5,"CONDITION_SATISFIED","",""],[5,"WAIT_FAILED","",""],[5,"BUFFER_ACCESS_FLAGS","",""],[5,"BUFFER_MAP_LENGTH","",""],[5,"BUFFER_MAP_OFFSET","",""],[5,"MAX_VERTEX_OUTPUT_COMPONENTS","",""],[5,"MAX_GEOMETRY_INPUT_COMPONENTS","",""],[5,"MAX_GEOMETRY_OUTPUT_COMPONENTS","",""],[5,"MAX_FRAGMENT_INPUT_COMPONENTS","",""],[5,"CONTEXT_PROFILE_MASK","",""],[5,"UNPACK_COMPRESSED_BLOCK_WIDTH","",""],[5,"UNPACK_COMPRESSED_BLOCK_HEIGHT","",""],[5,"UNPACK_COMPRESSED_BLOCK_DEPTH","",""],[5,"UNPACK_COMPRESSED_BLOCK_SIZE","",""],[5,"PACK_COMPRESSED_BLOCK_WIDTH","",""],[5,"PACK_COMPRESSED_BLOCK_HEIGHT","",""],[5,"PACK_COMPRESSED_BLOCK_DEPTH","",""],[5,"PACK_COMPRESSED_BLOCK_SIZE","",""],[5,"TEXTURE_IMMUTABLE_FORMAT","",""],[5,"MAX_DEBUG_MESSAGE_LENGTH","",""],[5,"MAX_DEBUG_LOGGED_MESSAGES","",""],[5,"DEBUG_LOGGED_MESSAGES","",""],[5,"DEBUG_SEVERITY_HIGH","",""],[5,"DEBUG_SEVERITY_MEDIUM","",""],[5,"DEBUG_SEVERITY_LOW","",""],[5,"TEXTURE_BUFFER_OFFSET","",""],[5,"TEXTURE_BUFFER_SIZE","",""],[5,"TEXTURE_BUFFER_OFFSET_ALIGNMENT","",""],[5,"COMPUTE_SHADER","",""],[5,"MAX_COMPUTE_UNIFORM_BLOCKS","",""],[5,"MAX_COMPUTE_TEXTURE_IMAGE_UNITS","",""],[5,"MAX_COMPUTE_IMAGE_UNIFORMS","",""],[5,"MAX_COMPUTE_WORK_GROUP_COUNT","",""],[5,"MAX_COMPUTE_WORK_GROUP_SIZE","",""],[5,"COMPRESSED_R11_EAC","",""],[5,"COMPRESSED_SIGNED_R11_EAC","",""],[5,"COMPRESSED_RG11_EAC","",""],[5,"COMPRESSED_SIGNED_RG11_EAC","",""],[5,"COMPRESSED_RGB8_ETC2","",""],[5,"COMPRESSED_SRGB8_ETC2","",""],[5,"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","",""],[5,"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","",""],[5,"COMPRESSED_RGBA8_ETC2_EAC","",""],[5,"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","",""],[5,"ATOMIC_COUNTER_BUFFER","",""],[5,"ATOMIC_COUNTER_BUFFER_BINDING","",""],[5,"ATOMIC_COUNTER_BUFFER_START","",""],[5,"ATOMIC_COUNTER_BUFFER_SIZE","",""],[5,"ATOMIC_COUNTER_BUFFER_DATA_SIZE","",""],[5,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","",""],[5,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","",""],[5,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","",""],[5,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","",""],[5,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","",""],[5,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","",""],[5,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","",""],[5,"MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","",""],[5,"MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","",""],[5,"MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","",""],[5,"MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","",""],[5,"MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","",""],[5,"MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","",""],[5,"MAX_VERTEX_ATOMIC_COUNTERS","",""],[5,"MAX_TESS_CONTROL_ATOMIC_COUNTERS","",""],[5,"MAX_TESS_EVALUATION_ATOMIC_COUNTERS","",""],[5,"MAX_GEOMETRY_ATOMIC_COUNTERS","",""],[5,"MAX_FRAGMENT_ATOMIC_COUNTERS","",""],[5,"MAX_COMBINED_ATOMIC_COUNTERS","",""],[5,"MAX_ATOMIC_COUNTER_BUFFER_SIZE","",""],[5,"ACTIVE_ATOMIC_COUNTER_BUFFERS","",""],[5,"UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","",""],[5,"UNSIGNED_INT_ATOMIC_COUNTER","",""],[5,"MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","",""],[5,"DEBUG_OUTPUT","",""],[5,"UNIFORM","",""],[5,"UNIFORM_BLOCK","",""],[5,"PROGRAM_INPUT","",""],[5,"PROGRAM_OUTPUT","",""],[5,"BUFFER_VARIABLE","",""],[5,"SHADER_STORAGE_BLOCK","",""],[5,"IS_PER_PATCH","",""],[5,"VERTEX_SUBROUTINE","",""],[5,"TESS_CONTROL_SUBROUTINE","",""],[5,"TESS_EVALUATION_SUBROUTINE","",""],[5,"GEOMETRY_SUBROUTINE","",""],[5,"FRAGMENT_SUBROUTINE","",""],[5,"COMPUTE_SUBROUTINE","",""],[5,"VERTEX_SUBROUTINE_UNIFORM","",""],[5,"TESS_CONTROL_SUBROUTINE_UNIFORM","",""],[5,"TESS_EVALUATION_SUBROUTINE_UNIFORM","",""],[5,"GEOMETRY_SUBROUTINE_UNIFORM","",""],[5,"FRAGMENT_SUBROUTINE_UNIFORM","",""],[5,"COMPUTE_SUBROUTINE_UNIFORM","",""],[5,"TRANSFORM_FEEDBACK_VARYING","",""],[5,"ACTIVE_RESOURCES","",""],[5,"MAX_NAME_LENGTH","",""],[5,"MAX_NUM_ACTIVE_VARIABLES","",""],[5,"MAX_NUM_COMPATIBLE_SUBROUTINES","",""],[5,"NAME_LENGTH","",""],[5,"TYPE","",""],[5,"ARRAY_SIZE","",""],[5,"OFFSET","",""],[5,"BLOCK_INDEX","",""],[5,"ARRAY_STRIDE","",""],[5,"MATRIX_STRIDE","",""],[5,"IS_ROW_MAJOR","",""],[5,"ATOMIC_COUNTER_BUFFER_INDEX","",""],[5,"BUFFER_BINDING","",""],[5,"BUFFER_DATA_SIZE","",""],[5,"NUM_ACTIVE_VARIABLES","",""],[5,"ACTIVE_VARIABLES","",""],[5,"REFERENCED_BY_VERTEX_SHADER","",""],[5,"REFERENCED_BY_TESS_CONTROL_SHADER","",""],[5,"REFERENCED_BY_TESS_EVALUATION_SHADER","",""],[5,"REFERENCED_BY_GEOMETRY_SHADER","",""],[5,"REFERENCED_BY_FRAGMENT_SHADER","",""],[5,"REFERENCED_BY_COMPUTE_SHADER","",""],[5,"TOP_LEVEL_ARRAY_SIZE","",""],[5,"TOP_LEVEL_ARRAY_STRIDE","",""],[5,"LOCATION","",""],[5,"LOCATION_INDEX","",""],[5,"FRAMEBUFFER_DEFAULT_WIDTH","",""],[5,"FRAMEBUFFER_DEFAULT_HEIGHT","",""],[5,"FRAMEBUFFER_DEFAULT_LAYERS","",""],[5,"FRAMEBUFFER_DEFAULT_SAMPLES","",""],[5,"FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","",""],[5,"MAX_FRAMEBUFFER_WIDTH","",""],[5,"MAX_FRAMEBUFFER_HEIGHT","",""],[5,"MAX_FRAMEBUFFER_LAYERS","",""],[5,"MAX_FRAMEBUFFER_SAMPLES","",""],[5,"NUM_SAMPLE_COUNTS","",""],[10,"new","","",0]],"paths":[[1,"FnPtr"]]};

searchIndex['nalgebra'] = {"items":[[0,"","nalgebra","# nalgebra"],[0,"na","","**nalgebra** prelude."],[1,"Identity","nalgebra::na","Special identity matrix. All its operation are no-ops."],[1,"DMat","","Matrix with dimensions unknown at compile-time."],[1,"DVec","","Heap allocated, dynamically sized vector."],[11,"at","","Components of the vector. Contains as much elements as the vector dimension.",0],[1,"DVec1","","Stack-allocated, dynamically sized vector with a maximum size of 1."],[1,"DVec2","","Stack-allocated, dynamically sized vector with a maximum size of 2."],[1,"DVec3","","Stack-allocated, dynamically sized vector with a maximum size of 3."],[1,"DVec4","","Stack-allocated, dynamically sized vector with a maximum size of 4."],[1,"DVec5","","Stack-allocated, dynamically sized vector with a maximum size of 5."],[1,"DVec6","","Stack-allocated, dynamically sized vector with a maximum size of 6."],[1,"Iso2","","Two dimensional isometry."],[11,"rotation","","The rotation applicable by this isometry.",1],[11,"translation","","The translation applicable by this isometry.",1],[1,"Iso3","","Three dimensional isometry."],[11,"rotation","","The rotation applicable by this isometry.",2],[11,"translation","","The translation applicable by this isometry.",2],[1,"Iso4","","Four dimensional isometry."],[11,"rotation","","The rotation applicable by this isometry.",3],[11,"translation","","The translation applicable by this isometry.",3],[1,"Mat1","","Square matrix of dimension 1."],[11,"m11","","",4],[1,"Mat2","","Square matrix of dimension 2."],[11,"m11","","",5],[11,"m21","","",5],[11,"m12","","",5],[11,"m22","","",5],[1,"Mat3","","Square matrix of dimension 3."],[11,"m11","","",6],[11,"m21","","",6],[11,"m31","","",6],[11,"m12","","",6],[11,"m22","","",6],[11,"m32","","",6],[11,"m13","","",6],[11,"m23","","",6],[11,"m33","","",6],[1,"Mat4","","Square matrix of dimension 4."],[11,"m11","","",7],[11,"m21","","",7],[11,"m31","","",7],[11,"m41","","",7],[11,"m12","","",7],[11,"m22","","",7],[11,"m32","","",7],[11,"m42","","",7],[11,"m13","","",7],[11,"m23","","",7],[11,"m33","","",7],[11,"m43","","",7],[11,"m14","","",7],[11,"m24","","",7],[11,"m34","","",7],[11,"m44","","",7],[1,"Mat5","","Square matrix of dimension 5."],[11,"m11","","",8],[11,"m21","","",8],[11,"m31","","",8],[11,"m41","","",8],[11,"m51","","",8],[11,"m12","","",8],[11,"m22","","",8],[11,"m32","","",8],[11,"m42","","",8],[11,"m52","","",8],[11,"m13","","",8],[11,"m23","","",8],[11,"m33","","",8],[11,"m43","","",8],[11,"m53","","",8],[11,"m14","","",8],[11,"m24","","",8],[11,"m34","","",8],[11,"m44","","",8],[11,"m54","","",8],[11,"m15","","",8],[11,"m25","","",8],[11,"m35","","",8],[11,"m45","","",8],[11,"m55","","",8],[1,"Mat6","","Square matrix of dimension 6."],[11,"m11","","",9],[11,"m21","","",9],[11,"m31","","",9],[11,"m41","","",9],[11,"m51","","",9],[11,"m61","","",9],[11,"m12","","",9],[11,"m22","","",9],[11,"m32","","",9],[11,"m42","","",9],[11,"m52","","",9],[11,"m62","","",9],[11,"m13","","",9],[11,"m23","","",9],[11,"m33","","",9],[11,"m43","","",9],[11,"m53","","",9],[11,"m63","","",9],[11,"m14","","",9],[11,"m24","","",9],[11,"m34","","",9],[11,"m44","","",9],[11,"m54","","",9],[11,"m64","","",9],[11,"m15","","",9],[11,"m25","","",9],[11,"m35","","",9],[11,"m45","","",9],[11,"m55","","",9],[11,"m65","","",9],[11,"m16","","",9],[11,"m26","","",9],[11,"m36","","",9],[11,"m46","","",9],[11,"m56","","",9],[11,"m66","","",9],[1,"Rot2","","Two dimensional rotation matrix."],[1,"Rot3","","Three dimensional rotation matrix."],[1,"Rot4","","Four dimensional rotation matrix."],[1,"Vec0","","Vector of dimension 0."],[1,"Vec1","","Vector of dimension 1."],[11,"x","","First component of the vector.",10],[1,"Vec2","","Vector of dimension 2."],[11,"x","","First component of the vector.",11],[11,"y","","Second component of the vector.",11],[1,"Vec3","","Vector of dimension 3."],[11,"x","","First component of the vector.",12],[11,"y","","Second component of the vector.",12],[11,"z","","Third component of the vector.",12],[1,"Vec4","","Vector of dimension 4."],[11,"x","","First component of the vector.",13],[11,"y","","Second component of the vector.",13],[11,"z","","Third component of the vector.",13],[11,"w","","Fourth component of the vector.",13],[1,"Vec5","","Vector of dimension 5."],[11,"x","","First component of the vector.",14],[11,"y","","Second component of the vector.",14],[11,"z","","Third component of the vector.",14],[11,"w","","Fourth component of the vector.",14],[11,"a","","Fifth of the vector.",14],[1,"Vec6","","Vector of dimension 6."],[11,"x","","First component of the vector.",15],[11,"y","","Second component of the vector.",15],[11,"z","","Third component of the vector.",15],[11,"w","","Fourth component of the vector.",15],[11,"a","","Fifth of the vector.",15],[11,"b","","Sixth component of the vector.",15],[2,"PartialOrdering","","Result of a partial ordering."],[12,"PartialLess","","Result of a strict comparison.",16],[12,"PartialEqual","","Equality relationship.",16],[12,"PartialGreater","","Result of a strict comparison.",16],[12,"NotComparable","","Result of a comparison between two objects that are not comparable.",16],[3,"qr","","QR decomposition using Householder reflections."],[3,"eigen_qr","","Eigendecomposition of a square matrix using the qr algorithm."],[3,"householder_matrix","","Get the householder matrix corresponding to a reflexion to the hyperplane\ndefined by `vec`. It can be a reflexion contained in a subspace."],[3,"clamp","","Change the input value to ensure it is on the range `[min, max]`."],[3,"max","","Same as `cmp::max`."],[3,"min","","Same as `cmp::min`."],[3,"inf","","Returns the infimum of `a` and `b`."],[3,"sup","","Returns the supremum of `a` and `b`."],[3,"partial_cmp","","Compare `a` and `b` using a partial ordering relation."],[3,"partial_lt","","Returns `true` iff `a` and `b` are comparable and `a < b`."],[3,"partial_le","","Returns `true` iff `a` and `b` are comparable and `a <= b`."],[3,"partial_gt","","Returns `true` iff `a` and `b` are comparable and `a > b`."],[3,"partial_ge","","Returns `true` iff `a` and `b` are comparable and `a >= b`."],[3,"partial_min","","Return the minimum of `a` and `b` if they are comparable."],[3,"partial_max","","Return the maximum of `a` and `b` if they are comparable."],[3,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`."],[3,"identity","","Create a special identity object."],[3,"zero","","Create a zero-valued value."],[3,"one","","Create a one-valued value."],[3,"perspective3d","","Computes a projection matrix given the frustrum near plane width, height, the field of\nview, and the distance to the clipping planes (`znear` and `zfar`)."],[3,"translation","","Gets the translation applicable by `m`."],[3,"inv_translation","","Gets the inverse translation applicable by `m`."],[3,"append_translation","","Applies the translation `v` to a copy of `m`."],[3,"translate","","Applies a translation to a vector."],[3,"inv_translate","","Applies an inverse translation to a vector."],[3,"rotation","","Gets the rotation applicable by `m`."],[3,"inv_rotation","","Gets the inverse rotation applicable by `m`."],[3,"append_rotation","","Applies the rotation `v` to a copy of `m`."],[3,"prepend_rotation","","Pre-applies the rotation `v` to a copy of `m`."],[3,"rotate","","Applies a rotation to a vector."],[3,"inv_rotate","","Applies an inverse rotation to a vector."],[3,"append_rotation_wrt_point","","Rotates a copy of `m` by `amount` using `center` as the pivot point."],[3,"append_rotation_wrt_center","","Rotates a copy of `m` by `amount` using `m.translation()` as the pivot point."],[3,"to_rot_mat","","Builds a rotation matrix from `r`."],[3,"absolute_rotate","","Applies a rotation using the absolute values of its components."],[3,"transformation","","Gets the transformation applicable by `m`."],[3,"inv_transformation","","Gets the inverse transformation applicable by `m`."],[3,"append_transformation","","Gets a transformed copy of `m`."],[3,"transform","","Applies a transformation to a vector."],[3,"inv_transform","","Applies an inverse transformation to a vector."],[3,"dot","","Computes the dot product of two vectors."],[3,"sub_dot","","Computes a subtraction followed by a dot product."],[3,"norm","","Computes the L2 norm of a vector."],[3,"sqnorm","","Computes the squared L2 norm of a vector."],[3,"normalize","","Gets the normalized version of a vector."],[3,"det","","Computes the determinant of a square matrix."],[3,"cross","","Computes the cross product of two vectors."],[3,"cross_matrix","","Given a vector, computes the matrix which, when multiplied by another vector, computes a cross\nproduct."],[3,"to_homogeneous","","Converts a matrix or vector to homogeneous coordinates."],[3,"from_homogeneous","","Converts a matrix or vector from homogeneous coordinates."],[3,"sample_sphere","","Samples the unit sphere living on the dimension as the samples types."],[3,"approx_eq","","Tests approximate equality."],[3,"approx_eq_eps","","Tests approximate equality using a custom epsilon."],[3,"abs","","Computes a component-wise absolute value."],[3,"inv","","Gets an inverted copy of a matrix."],[3,"transpose","","Gets a transposed copy of a matrix."],[3,"outer","","Computes the outer product of two vectors."],[3,"cov","","Computes the covariance of a set of observations."],[3,"mean","","Computes the mean of a set of observations."],[3,"new_identity","","Construct the identity matrix for a given dimension"],[3,"canonical_basis","","Computes the canonical basis for a given dimension."],[3,"orthonormal_subspace_basis","","Computes the basis of the orthonormal subspace of a given vector."],[3,"diag","","Gets the diagonal of a square matrix."],[3,"dim","","Gets the dimension an object lives in."],[3,"cast","","Converts an object from one type to another."],[0,"overload","","Traits to work around the language limitations related to operator overloading."],[6,"Vec1MulRhs","nalgebra::na::overload",""],[9,"binop","","Applies the binary operation represented by this trait.",17],[6,"Vec2MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",18],[6,"Vec3MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",19],[6,"Vec4MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",20],[6,"Vec5MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",21],[6,"Vec6MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",22],[6,"Vec1DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",23],[6,"Vec2DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",24],[6,"Vec3DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",25],[6,"Vec4DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",26],[6,"Vec5DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",27],[6,"Vec6DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",28],[6,"Vec1AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",29],[6,"Vec2AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",30],[6,"Vec3AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",31],[6,"Vec4AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",32],[6,"Vec5AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",33],[6,"Vec6AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",34],[6,"Vec1SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",35],[6,"Vec2SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",36],[6,"Vec3SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",37],[6,"Vec4SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",38],[6,"Vec5SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",39],[6,"Vec6SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",40],[6,"Mat1MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",41],[6,"Mat2MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",42],[6,"Mat3MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",43],[6,"Mat4MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",44],[6,"Mat5MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",45],[6,"Mat6MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",46],[6,"Mat1DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",47],[6,"Mat2DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",48],[6,"Mat3DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",49],[6,"Mat4DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",50],[6,"Mat5DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",51],[6,"Mat6DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",52],[6,"Mat1AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",53],[6,"Mat2AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",54],[6,"Mat3AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",55],[6,"Mat4AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",56],[6,"Mat5AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",57],[6,"Mat6AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",58],[6,"Mat1SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",59],[6,"Mat2SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",60],[6,"Mat3SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",61],[6,"Mat4SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",62],[6,"Mat5SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",63],[6,"Mat6SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",64],[6,"Absolute","nalgebra::na","Trait of objects having an absolute value.\nThis is useful if the object does not have the same type as its absolute value."],[9,"abs","","Computes some absolute value of this object.\nTypically, this will make all component of a matrix or vector positive.",65],[6,"AbsoluteRotate","","Composition of a rotation and an absolute value."],[9,"absolute_rotate","","This is the same as:",66],[6,"AnyVec","","Trait grouping most common operations on vectors."],[6,"ApproxEq","","Trait for testing approximate equality"],[9,"approx_epsilon","","Default epsilon for approximation.",67],[9,"approx_eq_eps","","Tests approximate equality using a custom epsilon.",67],[10,"approx_eq","","Tests approximate equality.",67],[6,"Basis","","Traits of objects which can form a basis (typically vectors)."],[9,"canonical_basis","","Iterates through the canonical basis of the space in which this object lives.",68],[9,"orthonormal_subspace_basis","","Iterates through a basis of the subspace orthogonal to `self`.",68],[6,"Cast","","Traits of objects which can be created from an object of type `T`."],[9,"from","","Converts an element of type `T` to an element of type `Self`.",69],[6,"Col","","Trait to access columns of a matrix or vector."],[9,"ncols","","The number of column of this matrix or vector.",70],[9,"col","","Reads the `i`-th column of `self`.",70],[9,"set_col","","Writes the `i`-th column of `self`.",70],[6,"ColSlice","","Trait to access part of a column of a matrix"],[9,"col_slice","","Returns a view to a slice of a column of a matrix.",71],[6,"RowSlice","","Trait to access part of a row of a matrix"],[9,"row_slice","","Returns a view to a slice of a row of a matrix.",72],[6,"Cov","","Trait for computing the covariance of a set of data."],[9,"cov","","Computes the covariance of the obsevations stored by `m`:",73],[10,"cov_to","","Computes the covariance of the obsevations stored by `m`:",73],[6,"Cross","","Trait of elements having a cross product."],[9,"cross","","Computes the cross product between two elements (usually vectors).",74],[6,"CrossMatrix","","Trait of elements having a cross product operation which can be expressed as a matrix."],[9,"cross_matrix","","The matrix associated to any cross product with this vector. I.e. `v.cross(anything)` =\n`v.cross_matrix().rmul(anything)`.",75],[6,"Det","","Trait of objects having a determinant. Typically used by square matrices."],[9,"det","","Returns the determinant of `m`.",76],[6,"Diag","","Trait to get the diagonal of square matrices."],[9,"from_diag","","Creates a new matrix with the given diagonal.",77],[9,"set_diag","","Sets the diagonal of this matrix.",77],[9,"diag","","The diagonal of this matrix.",77],[6,"Dim","","Trait of objects having a spacial dimension known at compile time."],[9,"dim","","The dimension of the object.",78],[6,"Dot","","Traits of objects having a dot product."],[9,"dot","","Computes the dot (inner) product of two vectors.",79],[9,"sub_dot","","Short-cut to compute the projection of a point on a vector, but without\ncomputing intermediate vectors.\nThe following equation must be verified:",79],[6,"Eye","","Trait for constructing the identity matrix"],[9,"new_identity","","Return the identity matrix of specified dimension",80],[6,"FloatVec","","Trait of vector with components implementing the `Float` trait."],[6,"FloatVecExt","","Trait grouping uncommon, low-level and borderline (from the mathematical point of view)\noperations on vectors."],[6,"FromHomogeneous","","Traits of objects which can be build from an homogeneous coordinate form."],[9,"from","","Builds an object from its homogeneous coordinate form.",81],[6,"Indexable","","This is a workaround of current Rust limitations."],[9,"at","","Reads the `i`-th element of `self`.",82],[9,"set","","Writes to the `i`-th element of `self`.",82],[9,"swap","","Swaps the `i`-th element of `self` with its `j`-th element.",82],[9,"shape","","Returns the shape of the iterable range.",82],[9,"unsafe_at","","Reads the `i`-th element of `self`.",82],[9,"unsafe_set","","Writes to the `i`-th element of `self`.",82],[6,"Inv","","Trait of objects having an inverse. Typically used to implement matrix inverse."],[9,"inv_cpy","","Returns the inverse of `m`.",83],[9,"inv","","In-place version of `inverse`.",83],[6,"Iterable","","This is a workaround of current Rust limitations."],[9,"iter","","Gets a vector-like read-only iterator.",84],[6,"IterableMut","","This is a workaround of current Rust limitations."],[9,"mut_iter","","Gets a vector-like read-write iterator.",85],[6,"LMul","","Trait of objects having a left multiplication with another element."],[9,"lmul","","Computes `v * self`",86],[6,"Mat","","Trait of matrices."],[6,"Mean","","Trait for computing the covariance of a set of data."],[9,"mean","","Computes the mean of the observations stored by `v`.\n \n  * For matrices, observations are stored in its rows.\n  * For vectors, observations are stored in its components (thus are 1-dimensional).",87],[6,"Norm","","Traits of objects having an euclidian norm."],[10,"norm","","Computes the norm of `self`.",88],[9,"sqnorm","","Computes the squared norm of `self`.",88],[9,"normalize_cpy","","Gets the normalized version of a copy of `v`.",88],[9,"normalize","","Normalizes `self`.",88],[6,"Outer","","Traits of objects having an outer product."],[9,"outer","","Computes the outer product: `a * b`",89],[6,"PartialOrd","","Pointwise ordering operations."],[9,"inf","","Returns the infimum of `a` and `b`.",90],[9,"sup","","Returns the supremum of `a` and `b`.",90],[9,"partial_cmp","","Compare `a` and `b` using a partial ordering relation.",90],[10,"partial_le","","Returns `true` iff `a` and `b` are comparable and `a <= b`.",90],[10,"partial_lt","","Returns `true` iff `a` and `b` are comparable and `a < b`.",90],[10,"partial_ge","","Returns `true` iff `a` and `b` are comparable and `a >= b`.",90],[10,"partial_gt","","Returns `true` iff `a` and `b` are comparable and `a > b`.",90],[10,"partial_min","","Return the minimum of `a` and `b` if they are comparable.",90],[10,"partial_max","","Return the maximum of `a` and `b` if they are comparable.",90],[10,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",90],[6,"RMul","","Trait of objects having a right multiplication with another element."],[9,"rmul","","Computes `self * v`",91],[6,"Rotate","","Trait of objects able to rotate other objects."],[9,"rotate","","Applies a rotation to `v`.",92],[9,"inv_rotate","","Applies an inverse rotation to `v`.",92],[6,"Rotation","","Trait of object which can represent a rotation, and to which new rotations can be appended. A\nrotation is assumed to be an isometry without translation and without reflexion."],[9,"rotation","","Gets the rotation associated with `self`.",93],[9,"inv_rotation","","Gets the inverse rotation associated with `self`.",93],[9,"append_rotation","","Appends a rotation to this object.",93],[9,"append_rotation_cpy","","Appends the rotation `amount` to a copy of `t`.",93],[9,"prepend_rotation","","Prepends a rotation to this object.",93],[9,"prepend_rotation_cpy","","Prepends the rotation `amount` to a copy of `t`.",93],[9,"set_rotation","","Sets the rotation of `self`.",93],[6,"RotationMatrix","","Trait of transformation having a rotation extractable as a rotation matrix. This can typically\nbe implemented by quaternions to convert them to a rotation matrix."],[9,"to_rot_mat","","Gets the rotation matrix represented by `self`.",94],[6,"RotationWithTranslation","","Various composition of rotation and translation."],[10,"append_rotation_wrt_point_cpy","","Applies a rotation centered on a specific point.",95],[10,"append_rotation_wrt_point","","Rotates `self` using a specific center of rotation.",95],[10,"append_rotation_wrt_center_cpy","","Applies a rotation centered on the translation of `m`.\n \n# Arguments\n  * `t` - the object to be rotated.\n  * `amount` - the rotation to apply.",95],[10,"append_rotation_wrt_center","","Applies a rotation centered on the translation of `m`.",95],[6,"Row","","Trait to access rows of a matrix or a vector."],[9,"nrows","","The number of column of `self`.",96],[9,"row","","Reads the `i`-th row of `self`.",96],[9,"set_row","","Writes the `i`-th row of `self`.",96],[6,"ScalarAdd","","Trait of objects having an addition with a scalar."],[9,"add_s","","Gets the result of `self + n`.",97],[6,"ScalarSub","","Trait of objects having a subtraction with a scalar."],[9,"sub_s","","Gets the result of `self - n`.",98],[6,"ScalarMul","","Trait of objects having a multiplication with a scalar."],[9,"mul_s","","Gets the result of `self * n`.",99],[6,"ScalarDiv","","Trait of objects having a division by a scalar."],[9,"div_s","","Gets the result of `self / n`.",100],[6,"ToHomogeneous","","Traits of objects which can be put in homogeneous coordinates form."],[9,"to_homogeneous","","Gets the homogeneous coordinates form of this object.",101],[6,"Transform","","Trait of objects able to transform other objects."],[9,"transform","","Applies a transformation to `v`.",102],[9,"inv_transform","","Applies an inverse transformation to `v`.",102],[6,"Transformation","","Trait of object which represent a transformation, and to which new transformations can\nbe appended."],[9,"transformation","","Gets the transformation of `self`.",103],[9,"inv_transformation","","Gets the inverse transformation of `self`.",103],[9,"append_transformation","","Appends a transformation to this object.",103],[9,"append_transformation_cpy","","Appends the transformation `amount` to a copy of `t`.",103],[9,"prepend_transformation","","Prepends a transformation to this object.",103],[9,"prepend_transformation_cpy","","Prepends the transformation `amount` to a copy of `t`.",103],[9,"set_transformation","","Sets the transformation of `self`.",103],[6,"Translate","","Trait of objects able to rotate other objects. This is typically implemented by matrices which\nrotate vectors."],[9,"translate","","Apply a translation to an object.",104],[9,"inv_translate","","Apply an inverse translation to an object.",104],[6,"Translation","","Trait of object which represent a translation, and to wich new translation\ncan be appended."],[9,"translation","","Gets the translation associated with this object.",105],[9,"inv_translation","","Gets the inverse translation associated with this object.",105],[9,"append_translation","","Appends a translation to this object.",105],[9,"append_translation_cpy","","Appends the translation `amount` to a copy of `t`.",105],[9,"prepend_translation","","Prepends a translation to this object.",105],[9,"prepend_translation_cpy","","Prepends the translation `amount` to a copy of `t`.",105],[9,"set_translation","","Sets the translation.",105],[6,"Transpose","","Trait of objects which can be transposed."],[9,"transpose_cpy","","Computes the transpose of a matrix.",106],[9,"transpose","","In-place version of `transposed`.",106],[6,"UniformSphereSample","","Trait of vectors able to sample a unit sphere."],[9,"sample","","Iterate through the samples.",107],[6,"VecExt","","Trait grouping uncommon, low-level and borderline (from the mathematical point of view)\noperations on vectors."]],"paths":[[1,"DVec"],[1,"Iso2"],[1,"Iso3"],[1,"Iso4"],[1,"Mat1"],[1,"Mat2"],[1,"Mat3"],[1,"Mat4"],[1,"Mat5"],[1,"Mat6"],[1,"Vec1"],[1,"Vec2"],[1,"Vec3"],[1,"Vec4"],[1,"Vec5"],[1,"Vec6"],[2,"PartialOrdering"],[6,"Vec1MulRhs"],[6,"Vec2MulRhs"],[6,"Vec3MulRhs"],[6,"Vec4MulRhs"],[6,"Vec5MulRhs"],[6,"Vec6MulRhs"],[6,"Vec1DivRhs"],[6,"Vec2DivRhs"],[6,"Vec3DivRhs"],[6,"Vec4DivRhs"],[6,"Vec5DivRhs"],[6,"Vec6DivRhs"],[6,"Vec1AddRhs"],[6,"Vec2AddRhs"],[6,"Vec3AddRhs"],[6,"Vec4AddRhs"],[6,"Vec5AddRhs"],[6,"Vec6AddRhs"],[6,"Vec1SubRhs"],[6,"Vec2SubRhs"],[6,"Vec3SubRhs"],[6,"Vec4SubRhs"],[6,"Vec5SubRhs"],[6,"Vec6SubRhs"],[6,"Mat1MulRhs"],[6,"Mat2MulRhs"],[6,"Mat3MulRhs"],[6,"Mat4MulRhs"],[6,"Mat5MulRhs"],[6,"Mat6MulRhs"],[6,"Mat1DivRhs"],[6,"Mat2DivRhs"],[6,"Mat3DivRhs"],[6,"Mat4DivRhs"],[6,"Mat5DivRhs"],[6,"Mat6DivRhs"],[6,"Mat1AddRhs"],[6,"Mat2AddRhs"],[6,"Mat3AddRhs"],[6,"Mat4AddRhs"],[6,"Mat5AddRhs"],[6,"Mat6AddRhs"],[6,"Mat1SubRhs"],[6,"Mat2SubRhs"],[6,"Mat3SubRhs"],[6,"Mat4SubRhs"],[6,"Mat5SubRhs"],[6,"Mat6SubRhs"],[6,"Absolute"],[6,"AbsoluteRotate"],[6,"ApproxEq"],[6,"Basis"],[6,"Cast"],[6,"Col"],[6,"ColSlice"],[6,"RowSlice"],[6,"Cov"],[6,"Cross"],[6,"CrossMatrix"],[6,"Det"],[6,"Diag"],[6,"Dim"],[6,"Dot"],[6,"Eye"],[6,"FromHomogeneous"],[6,"Indexable"],[6,"Inv"],[6,"Iterable"],[6,"IterableMut"],[6,"LMul"],[6,"Mean"],[6,"Norm"],[6,"Outer"],[6,"PartialOrd"],[6,"RMul"],[6,"Rotate"],[6,"Rotation"],[6,"RotationMatrix"],[6,"RotationWithTranslation"],[6,"Row"],[6,"ScalarAdd"],[6,"ScalarSub"],[6,"ScalarMul"],[6,"ScalarDiv"],[6,"ToHomogeneous"],[6,"Transform"],[6,"Transformation"],[6,"Translate"],[6,"Translation"],[6,"Transpose"],[6,"UniformSphereSample"]]};

searchIndex['glfw'] = {"items":[[0,"","glfw","An ideomatic wrapper for the GLFW library."],[1,"ShowAliases","","Formats the type using aliases rather than the default variant names."],[1,"Callback","",""],[11,"f","","",0],[11,"data","","",0],[1,"VidMode","","Describes a single video mode."],[11,"width","","",1],[11,"height","","",1],[11,"red_bits","","",1],[11,"green_bits","","",1],[11,"blue_bits","","",1],[11,"refresh_rate","","",1],[1,"GammaRamp","","Describes the gamma ramp of a monitor."],[11,"red","","",2],[11,"green","","",2],[11,"blue","","",2],[1,"Glfw","","A token from which to call various GLFW functions. It can be obtained by\ncalling the `init` function. This cannot be sent to other tasks, and should\nonly be initialized on the main platform thread. Whilst this might make\nperforming some operations harder, this is to ensure thread safety is enforced\nstatically. The context can be safely cloned or implicitly copied if need be\nfor convenience."],[1,"Monitor","","A struct that wraps a `*GLFWmonitor` handle."],[1,"Modifiers","","Key modifiers"],[1,"FlushedMessages","","An iterator that yeilds until no more messages are contained in the\n`Receiver`'s queue."],[1,"Window","","A struct that wraps a `*GLFWwindow` handle."],[11,"ptr","","",3],[11,"glfw","","",3],[11,"is_shared","","",3],[1,"RenderContext","","A rendering context that can be shared between tasks."],[1,"Joystick","","A joystick handle."],[11,"id","","",4],[11,"glfw","","",4],[2,"Action","","Input actions."],[12,"Release","","",5],[12,"Press","","",5],[12,"Repeat","","",5],[2,"Key","","Input keys."],[12,"KeySpace","","",6],[12,"KeyApostrophe","","",6],[12,"KeyComma","","",6],[12,"KeyMinus","","",6],[12,"KeyPeriod","","",6],[12,"KeySlash","","",6],[12,"Key0","","",6],[12,"Key1","","",6],[12,"Key2","","",6],[12,"Key3","","",6],[12,"Key4","","",6],[12,"Key5","","",6],[12,"Key6","","",6],[12,"Key7","","",6],[12,"Key8","","",6],[12,"Key9","","",6],[12,"KeySemicolon","","",6],[12,"KeyEqual","","",6],[12,"KeyA","","",6],[12,"KeyB","","",6],[12,"KeyC","","",6],[12,"KeyD","","",6],[12,"KeyE","","",6],[12,"KeyF","","",6],[12,"KeyG","","",6],[12,"KeyH","","",6],[12,"KeyI","","",6],[12,"KeyJ","","",6],[12,"KeyK","","",6],[12,"KeyL","","",6],[12,"KeyM","","",6],[12,"KeyN","","",6],[12,"KeyO","","",6],[12,"KeyP","","",6],[12,"KeyQ","","",6],[12,"KeyR","","",6],[12,"KeyS","","",6],[12,"KeyT","","",6],[12,"KeyU","","",6],[12,"KeyV","","",6],[12,"KeyW","","",6],[12,"KeyX","","",6],[12,"KeyY","","",6],[12,"KeyZ","","",6],[12,"KeyLeftBracket","","",6],[12,"KeyBackslash","","",6],[12,"KeyRightBracket","","",6],[12,"KeyGraveAccent","","",6],[12,"KeyWorld1","","",6],[12,"KeyWorld2","","",6],[12,"KeyEscape","","",6],[12,"KeyEnter","","",6],[12,"KeyTab","","",6],[12,"KeyBackspace","","",6],[12,"KeyInsert","","",6],[12,"KeyDelete","","",6],[12,"KeyRight","","",6],[12,"KeyLeft","","",6],[12,"KeyDown","","",6],[12,"KeyUp","","",6],[12,"KeyPageUp","","",6],[12,"KeyPageDown","","",6],[12,"KeyHome","","",6],[12,"KeyEnd","","",6],[12,"KeyCapsLock","","",6],[12,"KeyScrollLock","","",6],[12,"KeyNumLock","","",6],[12,"KeyPrintScreen","","",6],[12,"KeyPause","","",6],[12,"KeyF1","","",6],[12,"KeyF2","","",6],[12,"KeyF3","","",6],[12,"KeyF4","","",6],[12,"KeyF5","","",6],[12,"KeyF6","","",6],[12,"KeyF7","","",6],[12,"KeyF8","","",6],[12,"KeyF9","","",6],[12,"KeyF10","","",6],[12,"KeyF11","","",6],[12,"KeyF12","","",6],[12,"KeyF13","","",6],[12,"KeyF14","","",6],[12,"KeyF15","","",6],[12,"KeyF16","","",6],[12,"KeyF17","","",6],[12,"KeyF18","","",6],[12,"KeyF19","","",6],[12,"KeyF20","","",6],[12,"KeyF21","","",6],[12,"KeyF22","","",6],[12,"KeyF23","","",6],[12,"KeyF24","","",6],[12,"KeyF25","","",6],[12,"KeyKp0","","",6],[12,"KeyKp1","","",6],[12,"KeyKp2","","",6],[12,"KeyKp3","","",6],[12,"KeyKp4","","",6],[12,"KeyKp5","","",6],[12,"KeyKp6","","",6],[12,"KeyKp7","","",6],[12,"KeyKp8","","",6],[12,"KeyKp9","","",6],[12,"KeyKpDecimal","","",6],[12,"KeyKpDivide","","",6],[12,"KeyKpMultiply","","",6],[12,"KeyKpSubtract","","",6],[12,"KeyKpAdd","","",6],[12,"KeyKpEnter","","",6],[12,"KeyKpEqual","","",6],[12,"KeyLeftShift","","",6],[12,"KeyLeftControl","","",6],[12,"KeyLeftAlt","","",6],[12,"KeyLeftSuper","","",6],[12,"KeyRightShift","","",6],[12,"KeyRightControl","","",6],[12,"KeyRightAlt","","",6],[12,"KeyRightSuper","","",6],[12,"KeyMenu","","",6],[2,"MouseButton","","Mouse buttons. The `MouseButtonLeft`, `MouseButtonRight`, and\n`MouseButtonMiddle` aliases are supplied for convenience."],[12,"MouseButton1","","The left mouse button. A `MouseButtonLeft` alias is provided to improve clarity.",7],[12,"MouseButton2","","The right mouse button. A `MouseButtonRight` alias is provided to improve clarity.",7],[12,"MouseButton3","","The middle mouse button. A `MouseButtonMiddle` alias is provided to improve clarity.",7],[12,"MouseButton4","","",7],[12,"MouseButton5","","",7],[12,"MouseButton6","","",7],[12,"MouseButton7","","",7],[12,"MouseButton8","","",7],[2,"Error","","Tokens corresponding to various error types."],[12,"NotInitialized","","",8],[12,"NoCurrentContext","","",8],[12,"InvalidEnum","","",8],[12,"InvalidValue","","",8],[12,"OutOfMemory","","",8],[12,"ApiUnavailable","","",8],[12,"VersionUnavailable","","",8],[12,"PlatformError","","",8],[12,"FormatUnavailable","","",8],[2,"CursorMode","","Cursor modes."],[12,"CursorNormal","","",9],[12,"CursorHidden","","",9],[12,"CursorDisabled","","",9],[2,"InitError","","An error that might be returned when `glfw::init` is called."],[12,"AlreadyInitialized","","The library was already initialized.",10],[12,"InternalInitError","","An internal error occured when trying to initialize the library.",10],[2,"MonitorEvent","","Monitor events."],[12,"Connected","","",11],[12,"Disconnected","","",11],[2,"WindowHint","","Window hints that can be set using the `window_hint` function."],[12,"RedBits","","Specifies the desired bit depth of the red component of the default framebuffer.",12],[12,"GreenBits","","Specifies the desired bit depth of the green component of the default framebuffer.",12],[12,"BlueBits","","Specifies the desired bit depth of the blue component of the default framebuffer.",12],[12,"AlphaBits","","Specifies the desired bit depth of the alpha component of the default framebuffer.",12],[12,"DepthBits","","Specifies the desired bit depth of the depth component of the default framebuffer.",12],[12,"StencilBits","","Specifies the desired bit depth of the stencil component of the default framebuffer.",12],[12,"AccumRedBits","","Specifies the desired bit depth of the red component of the accumulation framebuffer.",12],[12,"AccumGreenBits","","Specifies the desired bit depth of the green component of the accumulation framebuffer.",12],[12,"AccumBlueBits","","Specifies the desired bit depth of the blue component of the accumulation framebuffer.",12],[12,"AccumAlphaBits","","Specifies the desired bit depth of the alpha component of the accumulation framebuffer.",12],[12,"AuxBuffers","","Specifies the desired number of auxiliary buffers.",12],[12,"Stereo","","Specifies whether to use stereoscopic rendering.",12],[12,"Samples","","Specifies the desired number of samples to use for multisampling. Zero\ndisables multisampling.",12],[12,"SRgbCapable","","Specifies whether the framebuffer should be sRGB capable.",12],[12,"RefreshRate","","Specifies the desired refresh rate for full screen windows. If set to\nzero, the highest available refresh rate will be used.",12],[12,"ClientApi","","Specifies which `ClientApi` to create the context for.",12],[12,"ContextVersionMajor","","Specifies the major client API version that the created context must be\ncompatible with.",12],[12,"ContextVersionMinor","","Specifies the minor client API version that the created context must be\ncompatible with.",12],[12,"ContextVersion","","Specifies the client API version that the created context must be\ncompatible with. This is the same as successive calls to `window_hint`\nfunction with the `ContextVersionMajor` and `ContextVersionMinor` hints.",12],[12,"ContextRobustness","","Specifies the `ContextRobustness` strategy to be used.",12],[12,"OpenglForwardCompat","","Specifies whether the OpenGL context should be forward-compatible, i.e.\none where all functionality deprecated in the requested version of\nOpenGL is removed. This may only be used if the requested OpenGL version\nis 3.0 or above.",12],[12,"OpenglDebugContext","","Specifies whether to create a debug OpenGL context, which may have\nadditional error and performance issue reporting functionality.",12],[12,"OpenglProfile","","Specifies which OpenGL profile to create the context for. If requesting\nan OpenGL version below 3.2, `OpenGlAnyProfile` must be used.",12],[12,"Resizable","","Specifies whether the window will be resizable by the user. Even if this\nis set to `false`, the window can still be resized using the\n`Window::set_size` function.",12],[12,"Visible","","Specifies whether the window will be visible on creation.",12],[12,"Decorated","","Specifies whether the window will have platform-specific decorations\nsuch as a border, a close widget, etc.",12],[2,"ClientApi","","Client API tokens."],[12,"OpenGlApi","","",13],[12,"OpenGlEsApi","","",13],[2,"ContextRobustness","","Context robustness tokens."],[12,"NoRobustness","","",14],[12,"NoResetNotification","","",14],[12,"LoseContextOnReset","","",14],[2,"OpenGlProfile","","OpenGL profile tokens."],[12,"OpenGlAnyProfile","","",15],[12,"OpenGlCoreProfile","","",15],[12,"OpenGlCompatProfile","","",15],[2,"WindowMode","","Describes the mode of a window"],[12,"FullScreen","","Full screen mode. Contains the monitor on which the window is displayed.",16],[12,"Windowed","","Windowed mode.",16],[2,"WindowEvent","","Window event messages."],[12,"PosEvent","","",17],[12,"SizeEvent","","",17],[12,"CloseEvent","","",17],[12,"RefreshEvent","","",17],[12,"FocusEvent","","",17],[12,"IconifyEvent","","",17],[12,"FramebufferSizeEvent","","",17],[12,"MouseButtonEvent","","",17],[12,"CursorPosEvent","","",17],[12,"CursorEnterEvent","","",17],[12,"ScrollEvent","","",17],[12,"KeyEvent","","",17],[12,"CharEvent","","",17],[2,"JoystickId","","Joystick identifier tokens."],[12,"Joystick1","","",18],[12,"Joystick2","","",18],[12,"Joystick3","","",18],[12,"Joystick4","","",18],[12,"Joystick5","","",18],[12,"Joystick6","","",18],[12,"Joystick7","","",18],[12,"Joystick8","","",18],[12,"Joystick9","","",18],[12,"Joystick10","","",18],[12,"Joystick11","","",18],[12,"Joystick12","","",18],[12,"Joystick13","","",18],[12,"Joystick14","","",18],[12,"Joystick15","","",18],[12,"Joystick16","","",18],[3,"fail_on_errors","","The function to be used with the `FAIL_ON_ERRORS` callback."],[3,"log_errors","","The function to be used with the `LOG_ERRORS` callback."],[3,"init","","Initializes the GLFW library. This must be called on the main platform\nthread."],[3,"get_version","","Wrapper for `glfwGetVersion`."],[3,"get_version_string","","Wrapper for `glfwGetVersionString`."],[3,"flush_messages","","Returns an iterator that yeilds until no more messages are contained in the\n`Receiver`'s queue. This is useful for event handling where the blocking\nbehaviour of `Receiver::iter` is undesirable."],[3,"make_context_current","","Wrapper for `glfwMakeContextCurrent`."],[0,"ffi","","Low-level function bindings and constants pertaining to the underlying\nGLFW library."],[1,"GLFWgammaramp","glfw::ffi",""],[11,"red","","",19],[11,"green","","",19],[11,"blue","","",19],[11,"size","","",19],[1,"GLFWvidmode","",""],[11,"width","","",20],[11,"height","","",20],[11,"redBits","","",20],[11,"greenBits","","",20],[11,"blueBits","","",20],[11,"refreshRate","","",20],[2,"GLFWmonitor","",""],[2,"GLFWwindow","",""],[13,"glfwInit","",""],[13,"glfwTerminate","",""],[13,"glfwGetVersion","",""],[13,"glfwGetVersionString","",""],[13,"glfwSetErrorCallback","",""],[13,"glfwGetMonitors","",""],[13,"glfwGetPrimaryMonitor","",""],[13,"glfwGetMonitorPos","",""],[13,"glfwGetMonitorPhysicalSize","",""],[13,"glfwGetMonitorName","",""],[13,"glfwSetMonitorCallback","",""],[13,"glfwGetVideoModes","",""],[13,"glfwGetVideoMode","",""],[13,"glfwSetGamma","",""],[13,"glfwGetGammaRamp","",""],[13,"glfwSetGammaRamp","",""],[13,"glfwDefaultWindowHints","",""],[13,"glfwWindowHint","",""],[13,"glfwCreateWindow","",""],[13,"glfwDestroyWindow","",""],[13,"glfwWindowShouldClose","",""],[13,"glfwSetWindowShouldClose","",""],[13,"glfwSetWindowTitle","",""],[13,"glfwGetWindowPos","",""],[13,"glfwSetWindowPos","",""],[13,"glfwGetWindowSize","",""],[13,"glfwSetWindowSize","",""],[13,"glfwGetFramebufferSize","",""],[13,"glfwIconifyWindow","",""],[13,"glfwRestoreWindow","",""],[13,"glfwShowWindow","",""],[13,"glfwHideWindow","",""],[13,"glfwGetWindowMonitor","",""],[13,"glfwGetWindowAttrib","",""],[13,"glfwSetWindowUserPointer","",""],[13,"glfwGetWindowUserPointer","",""],[13,"glfwSetWindowPosCallback","",""],[13,"glfwSetWindowSizeCallback","",""],[13,"glfwSetWindowCloseCallback","",""],[13,"glfwSetWindowRefreshCallback","",""],[13,"glfwSetWindowFocusCallback","",""],[13,"glfwSetWindowIconifyCallback","",""],[13,"glfwSetFramebufferSizeCallback","",""],[13,"glfwPollEvents","",""],[13,"glfwWaitEvents","",""],[13,"glfwGetInputMode","",""],[13,"glfwSetInputMode","",""],[13,"glfwGetKey","",""],[13,"glfwGetMouseButton","",""],[13,"glfwGetCursorPos","",""],[13,"glfwSetCursorPos","",""],[13,"glfwSetKeyCallback","",""],[13,"glfwSetCharCallback","",""],[13,"glfwSetMouseButtonCallback","",""],[13,"glfwSetCursorPosCallback","",""],[13,"glfwSetCursorEnterCallback","",""],[13,"glfwSetScrollCallback","",""],[13,"glfwJoystickPresent","",""],[13,"glfwGetJoystickAxes","",""],[13,"glfwGetJoystickButtons","",""],[13,"glfwGetJoystickName","",""],[13,"glfwSetClipboardString","",""],[13,"glfwGetClipboardString","",""],[13,"glfwGetTime","",""],[13,"glfwSetTime","",""],[13,"glfwMakeContextCurrent","",""],[13,"glfwGetCurrentContext","",""],[13,"glfwSwapBuffers","",""],[13,"glfwSwapInterval","",""],[13,"glfwExtensionSupported","",""],[13,"glfwGetProcAddress","",""],[13,"glfwGetX11Window","",""],[13,"glfwGetX11Display","",""],[13,"glfwGetGLXContext","",""],[4,"GLFWglproc","",""],[4,"GLFWerrorfun","",""],[4,"GLFWwindowposfun","",""],[4,"GLFWwindowsizefun","",""],[4,"GLFWwindowclosefun","",""],[4,"GLFWwindowrefreshfun","",""],[4,"GLFWwindowfocusfun","",""],[4,"GLFWwindowiconifyfun","",""],[4,"GLFWframebuffersizefun","",""],[4,"GLFWmousebuttonfun","",""],[4,"GLFWcursorposfun","",""],[4,"GLFWcursorenterfun","",""],[4,"GLFWscrollfun","",""],[4,"GLFWkeyfun","",""],[4,"GLFWcharfun","",""],[4,"GLFWmonitorfun","",""],[5,"FALSE","",""],[5,"TRUE","",""],[5,"RELEASE","",""],[5,"PRESS","",""],[5,"REPEAT","",""],[5,"KEY_SPACE","",""],[5,"KEY_APOSTROPHE","",""],[5,"KEY_COMMA","",""],[5,"KEY_MINUS","",""],[5,"KEY_PERIOD","",""],[5,"KEY_SLASH","",""],[5,"KEY_0","",""],[5,"KEY_1","",""],[5,"KEY_2","",""],[5,"KEY_3","",""],[5,"KEY_4","",""],[5,"KEY_5","",""],[5,"KEY_6","",""],[5,"KEY_7","",""],[5,"KEY_8","",""],[5,"KEY_9","",""],[5,"KEY_SEMICOLON","",""],[5,"KEY_EQUAL","",""],[5,"KEY_A","",""],[5,"KEY_B","",""],[5,"KEY_C","",""],[5,"KEY_D","",""],[5,"KEY_E","",""],[5,"KEY_F","",""],[5,"KEY_G","",""],[5,"KEY_H","",""],[5,"KEY_I","",""],[5,"KEY_J","",""],[5,"KEY_K","",""],[5,"KEY_L","",""],[5,"KEY_M","",""],[5,"KEY_N","",""],[5,"KEY_O","",""],[5,"KEY_P","",""],[5,"KEY_Q","",""],[5,"KEY_R","",""],[5,"KEY_S","",""],[5,"KEY_T","",""],[5,"KEY_U","",""],[5,"KEY_V","",""],[5,"KEY_W","",""],[5,"KEY_X","",""],[5,"KEY_Y","",""],[5,"KEY_Z","",""],[5,"KEY_LEFT_BRACKET","",""],[5,"KEY_BACKSLASH","",""],[5,"KEY_RIGHT_BRACKET","",""],[5,"KEY_GRAVE_ACCENT","",""],[5,"KEY_WORLD_1","",""],[5,"KEY_WORLD_2","",""],[5,"KEY_ESCAPE","",""],[5,"KEY_ENTER","",""],[5,"KEY_TAB","",""],[5,"KEY_BACKSPACE","",""],[5,"KEY_INSERT","",""],[5,"KEY_DELETE","",""],[5,"KEY_RIGHT","",""],[5,"KEY_LEFT","",""],[5,"KEY_DOWN","",""],[5,"KEY_UP","",""],[5,"KEY_PAGE_UP","",""],[5,"KEY_PAGE_DOWN","",""],[5,"KEY_HOME","",""],[5,"KEY_END","",""],[5,"KEY_CAPS_LOCK","",""],[5,"KEY_SCROLL_LOCK","",""],[5,"KEY_NUM_LOCK","",""],[5,"KEY_PRINT_SCREEN","",""],[5,"KEY_PAUSE","",""],[5,"KEY_F1","",""],[5,"KEY_F2","",""],[5,"KEY_F3","",""],[5,"KEY_F4","",""],[5,"KEY_F5","",""],[5,"KEY_F6","",""],[5,"KEY_F7","",""],[5,"KEY_F8","",""],[5,"KEY_F9","",""],[5,"KEY_F10","",""],[5,"KEY_F11","",""],[5,"KEY_F12","",""],[5,"KEY_F13","",""],[5,"KEY_F14","",""],[5,"KEY_F15","",""],[5,"KEY_F16","",""],[5,"KEY_F17","",""],[5,"KEY_F18","",""],[5,"KEY_F19","",""],[5,"KEY_F20","",""],[5,"KEY_F21","",""],[5,"KEY_F22","",""],[5,"KEY_F23","",""],[5,"KEY_F24","",""],[5,"KEY_F25","",""],[5,"KEY_KP_0","",""],[5,"KEY_KP_1","",""],[5,"KEY_KP_2","",""],[5,"KEY_KP_3","",""],[5,"KEY_KP_4","",""],[5,"KEY_KP_5","",""],[5,"KEY_KP_6","",""],[5,"KEY_KP_7","",""],[5,"KEY_KP_8","",""],[5,"KEY_KP_9","",""],[5,"KEY_KP_DECIMAL","",""],[5,"KEY_KP_DIVIDE","",""],[5,"KEY_KP_MULTIPLY","",""],[5,"KEY_KP_SUBTRACT","",""],[5,"KEY_KP_ADD","",""],[5,"KEY_KP_ENTER","",""],[5,"KEY_KP_EQUAL","",""],[5,"KEY_LEFT_SHIFT","",""],[5,"KEY_LEFT_CONTROL","",""],[5,"KEY_LEFT_ALT","",""],[5,"KEY_LEFT_SUPER","",""],[5,"KEY_RIGHT_SHIFT","",""],[5,"KEY_RIGHT_CONTROL","",""],[5,"KEY_RIGHT_ALT","",""],[5,"KEY_RIGHT_SUPER","",""],[5,"KEY_MENU","",""],[5,"KEY_LAST","",""],[5,"MOD_SHIFT","",""],[5,"MOD_CONTROL","",""],[5,"MOD_ALT","",""],[5,"MOD_SUPER","",""],[5,"JOYSTICK_1","",""],[5,"JOYSTICK_2","",""],[5,"JOYSTICK_3","",""],[5,"JOYSTICK_4","",""],[5,"JOYSTICK_5","",""],[5,"JOYSTICK_6","",""],[5,"JOYSTICK_7","",""],[5,"JOYSTICK_8","",""],[5,"JOYSTICK_9","",""],[5,"JOYSTICK_10","",""],[5,"JOYSTICK_11","",""],[5,"JOYSTICK_12","",""],[5,"JOYSTICK_13","",""],[5,"JOYSTICK_14","",""],[5,"JOYSTICK_15","",""],[5,"JOYSTICK_16","",""],[5,"JOYSTICK_LAST","",""],[5,"MOUSE_BUTTON_1","",""],[5,"MOUSE_BUTTON_2","",""],[5,"MOUSE_BUTTON_3","",""],[5,"MOUSE_BUTTON_4","",""],[5,"MOUSE_BUTTON_5","",""],[5,"MOUSE_BUTTON_6","",""],[5,"MOUSE_BUTTON_7","",""],[5,"MOUSE_BUTTON_8","",""],[5,"MOUSE_BUTTON_LEFT","",""],[5,"MOUSE_BUTTON_RIGHT","",""],[5,"MOUSE_BUTTON_MIDDLE","",""],[5,"MOUSE_BUTTON_LAST","",""],[5,"NOT_INITIALIZED","",""],[5,"NO_CURRENT_CONTEXT","",""],[5,"INVALID_ENUM","",""],[5,"INVALID_VALUE","",""],[5,"OUT_OF_MEMORY","",""],[5,"API_UNAVAILABLE","",""],[5,"VERSION_UNAVAILABLE","",""],[5,"PLATFORM_ERROR","",""],[5,"FORMAT_UNAVAILABLE","",""],[5,"FOCUSED","",""],[5,"ICONIFIED","",""],[5,"RESIZABLE","",""],[5,"VISIBLE","",""],[5,"DECORATED","",""],[5,"RED_BITS","",""],[5,"GREEN_BITS","",""],[5,"BLUE_BITS","",""],[5,"ALPHA_BITS","",""],[5,"DEPTH_BITS","",""],[5,"STENCIL_BITS","",""],[5,"ACCUM_RED_BITS","",""],[5,"ACCUM_GREEN_BITS","",""],[5,"ACCUM_BLUE_BITS","",""],[5,"ACCUM_ALPHA_BITS","",""],[5,"AUX_BUFFERS","",""],[5,"STEREO","",""],[5,"SAMPLES","",""],[5,"SRGB_CAPABLE","",""],[5,"REFRESH_RATE","",""],[5,"CLIENT_API","",""],[5,"CONTEXT_VERSION_MAJOR","",""],[5,"CONTEXT_VERSION_MINOR","",""],[5,"CONTEXT_REVISION","",""],[5,"CONTEXT_ROBUSTNESS","",""],[5,"OPENGL_FORWARD_COMPAT","",""],[5,"OPENGL_DEBUG_CONTEXT","",""],[5,"OPENGL_PROFILE","",""],[5,"OPENGL_API","",""],[5,"OPENGL_ES_API","",""],[5,"NO_ROBUSTNESS","",""],[5,"NO_RESET_NOTIFICATION","",""],[5,"LOSE_CONTEXT_ON_RESET","",""],[5,"OPENGL_ANY_PROFILE","",""],[5,"OPENGL_CORE_PROFILE","",""],[5,"OPENGL_COMPAT_PROFILE","",""],[5,"CURSOR","",""],[5,"STICKY_KEYS","",""],[5,"STICKY_MOUSE_BUTTONS","",""],[5,"CURSOR_NORMAL","",""],[5,"CURSOR_HIDDEN","",""],[5,"CURSOR_DISABLED","",""],[5,"CONNECTED","",""],[5,"DISCONNECTED","",""],[4,"ErrorCallback","glfw","An error callback. This can be supplied with some user data to be passed to\nthe callback function when it is triggered."],[4,"GLProc","","An OpenGL process address."],[4,"MonitorCallback","","An monitor callback. This can be supplied with some user data to be passed\nto the callback function when it is triggered."],[4,"Scancode","",""],[5,"FAIL_ON_ERRORS","","A callback that triggers a task failure when an error is encountered."],[5,"LOG_ERRORS","","A callback that logs each error as it is encountered without triggering a\ntask failure."],[5,"Shift","",""],[5,"Control","",""],[5,"Alt","",""],[5,"Super","",""],[6,"Context","","Methods common to renderable contexts"],[9,"window_ptr","","Returns the pointer to the underlying `GLFWwindow`.",21],[10,"swap_buffers","","Swaps the front and back buffers of the window. If the swap interval is\ngreater than zero, the GPU driver waits the specified number of screen\nupdates before swapping the buffers.",21],[10,"is_current","","Returns `true` if the window is the current context.",21],[10,"make_current","","Wrapper for `glfwMakeContextCurrent`",21],[10,"fmt","","",5],[10,"eq","","",5],[10,"ne","","",5],[10,"hash","","",5],[10,"clone","","",5],[10,"fmt","","",6],[10,"eq","","",6],[10,"ne","","",6],[10,"hash","","",6],[10,"clone","","",6],[10,"fmt","","",7],[10,"eq","","",7],[10,"ne","","",7],[10,"hash","","",7],[10,"clone","","",7],[10,"fmt","","",22],[10,"fmt","","",8],[10,"eq","","",8],[10,"ne","","",8],[10,"hash","","",8],[10,"clone","","",8],[10,"fmt","","",9],[10,"eq","","",9],[10,"ne","","",9],[10,"hash","","",9],[10,"clone","","",9],[10,"clone","","",23],[10,"fmt","","",10],[10,"eq","","",10],[10,"ne","","",10],[10,"set_error_callback","","Sets the error callback, overwriting the previous one stored.",23],[10,"set_monitor_callback","","Sets the monitor callback, overwriting the previous one stored.",23],[10,"with_primary_monitor","","Supplies the primary monitor to the closure provided, if it exists.\nThis is usually the monitor where elements like the Windows task bar or\nthe OS X menu bar is located.",23],[10,"with_connected_monitors","","Supplies a vector of the currently connected monitors to the closure\nprovided.",23],[10,"window_hint","","This is used to set the window hints for the next call to\n`Glfw::create_window`. The hints can be reset to their default values\nusing calling the `Glfw::default_window_hints` function.",23],[10,"default_window_hints","","Resets the window hints previously set by the `window_hint` function to\ntheir default values.",23],[10,"create_window","","Creates a new window.",23],[10,"make_context_current","","Makes the context of the specified window current. If no window is given\nthen the current context is detached.",23],[10,"get_x11_display","","Wrapper for `glfwGetX11Display`",23],[10,"poll_events","","Immediately process the received events.",23],[10,"wait_events","","Sleep until at least one event has been recieved, and then perform the\nequivalent of `Glfw::poll_events`.",23],[10,"get_time","","Returns the current value of the GLFW timer. Unless the timer has been\nset using `glfw::set_time`, the timer measures time elapsed since GLFW\nwas initialized.",23],[10,"set_time","","Sets the value of the GLFW timer.",23],[10,"set_swap_interval","","Sets the number of screen updates to wait before swapping the buffers of\nthe current context and returning from `Window::swap_buffers`.",23],[10,"extension_supported","","Returns `true` if the specified OpenGL or context creation API extension\nis supported by the current context.",23],[10,"get_proc_address","","Returns the address of the specified client API or extension function\nif it is supported by the current context.",23],[10,"get_joystick","","Constructs a `Joystick` handle corresponding to the supplied `JoystickId`.",23],[10,"get_pos","","Wrapper for `glfwGetMonitorPos`.",24],[10,"get_physical_size","","Wrapper for `glfwGetMonitorPhysicalSize`.",24],[10,"get_name","","Wrapper for `glfwGetMonitorName`.",24],[10,"get_video_modes","","Wrapper for `glfwGetVideoModes`.",24],[10,"get_video_mode","","Wrapper for `glfwGetVideoMode`.",24],[10,"set_gamma","","Wrapper for `glfwSetGamma`.",24],[10,"get_gamma_ramp","","Wrapper for `glfwGetGammaRamp`.",24],[10,"set_gamma_ramp","","Wrapper for `glfwSetGammaRamp`.",24],[10,"fmt","","Returns a string representation of the video mode.",1],[10,"fmt","","",13],[10,"eq","","",13],[10,"ne","","",13],[10,"clone","","",13],[10,"fmt","","",14],[10,"eq","","",14],[10,"ne","","",14],[10,"clone","","",14],[10,"fmt","","",15],[10,"eq","","",15],[10,"ne","","",15],[10,"clone","","",15],[10,"hash","","",25],[10,"cmp","","",25],[10,"partial_cmp","","",25],[10,"lt","","",25],[10,"le","","",25],[10,"gt","","",25],[10,"ge","","",25],[10,"clone","","",25],[10,"eq","","",25],[10,"ne","","",25],[10,"empty","","Returns an empty set of flags.",25],[10,"all","","Returns the set containing all flags.",25],[10,"bits","","Returns the raw value of the flags currently stored.",25],[10,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",25],[10,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",25],[10,"is_empty","","Returns `true` if no flags are currently stored.",25],[10,"is_all","","Returns `true` if all flags are currently set.",25],[10,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",25],[10,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",25],[10,"insert","","Inserts the specified flags in-place.",25],[10,"remove","","Removes the specified flags in-place.",25],[10,"bitor","","Returns the union of the two sets of flags.",25],[10,"bitand","","Returns the intersection between the two sets of flags.",25],[10,"sub","","Returns the set difference of the two sets of flags.",25],[10,"not","","Returns the complement of this set of flags.",25],[10,"fmt","","",25],[10,"clone","","",17],[10,"fmt","","",17],[10,"next","","",26],[10,"create_shared","","Wrapper for `glfwCreateWindow`.",3],[10,"close","","Calling this method forces the destructor to be called, closing the\nwindow.",3],[10,"render_context","","Returns a render context that can be shared between tasks, allowing\nfor concurrent rendering.",3],[10,"should_close","","Wrapper for `glfwWindowShouldClose`.",3],[10,"set_should_close","","Wrapper for `glfwSetWindowShouldClose`.",3],[10,"set_title","","Sets the title of the window.",3],[10,"get_pos","","Wrapper for `glfwGetWindowPos`.",3],[10,"set_pos","","Wrapper for `glfwSetWindowPos`.",3],[10,"get_size","","Wrapper for `glfwGetWindowSize`.",3],[10,"set_size","","Wrapper for `glfwSetWindowSize`.",3],[10,"get_framebuffer_size","","Wrapper for `glfwGetFramebufferSize`.",3],[10,"iconify","","Wrapper for `glfwIconifyWindow`.",3],[10,"restore","","Wrapper for `glfwRestoreWindow`.",3],[10,"show","","Wrapper for `glfwShowWindow`.",3],[10,"hide","","Wrapper for `glfwHideWindow`.",3],[10,"with_window_mode","","Returns whether the window is fullscreen or windowed.",3],[10,"is_focused","","Wrapper for `glfwGetWindowAttrib` called with `FOCUSED`.",3],[10,"is_iconified","","Wrapper for `glfwGetWindowAttrib` called with `ICONIFIED`.",3],[10,"get_client_api","","Wrapper for `glfwGetWindowAttrib` called with `CLIENT_API`.",3],[10,"get_context_version","","Wrapper for `glfwGetWindowAttrib` called with\n`CONTEXT_VERSION_MAJOR`, `CONTEXT_VERSION_MINOR` and `CONTEXT_REVISION`.",3],[10,"get_context_robustness","","Wrapper for `glfwGetWindowAttrib` called with `CONTEXT_ROBUSTNESS`.",3],[10,"is_opengl_forward_compat","","Wrapper for `glfwGetWindowAttrib` called with `OPENGL_FORWARD_COMPAT`.",3],[10,"is_opengl_debug_context","","Wrapper for `glfwGetWindowAttrib` called with `OPENGL_DEBUG_CONTEXT`.",3],[10,"get_opengl_profile","","Wrapper for `glfwGetWindowAttrib` called with `OPENGL_PROFILE`.",3],[10,"is_resizable","","Wrapper for `glfwGetWindowAttrib` called with `RESIZABLE`.",3],[10,"is_visible","","Wrapper for `glfwGetWindowAttrib` called with `VISIBLE`.",3],[10,"is_decorated","","Wrapper for `glfwGetWindowAttrib` called with `DECORATED`.",3],[10,"set_pos_polling","","Wrapper for `glfwSetWindowPosCallback`.",3],[10,"set_all_polling","","",3],[10,"set_size_polling","","Wrapper for `glfwSetWindowSizeCallback`.",3],[10,"set_close_polling","","Wrapper for `glfwSetWindowCloseCallback`.",3],[10,"set_refresh_polling","","Wrapper for `glfwSetWindowRefreshCallback`.",3],[10,"set_focus_polling","","Wrapper for `glfwSetWindowFocusCallback`.",3],[10,"set_iconify_polling","","Wrapper for `glfwSetWindowIconifyCallback`.",3],[10,"set_framebuffer_size_polling","","Wrapper for `glfwSetFramebufferSizeCallback`.",3],[10,"get_cursor_mode","","Wrapper for `glfwGetInputMode` called with `CURSOR`.",3],[10,"set_cursor_mode","","Wrapper for `glfwSetInputMode` called with `CURSOR`.",3],[10,"has_sticky_keys","","Wrapper for `glfwGetInputMode` called with `STICKY_KEYS`.",3],[10,"set_sticky_keys","","Wrapper for `glfwSetInputMode` called with `STICKY_KEYS`.",3],[10,"has_sticky_mouse_buttons","","Wrapper for `glfwGetInputMode` called with `STICKY_MOUSE_BUTTONS`.",3],[10,"set_sticky_mouse_buttons","","Wrapper for `glfwSetInputMode` called with `STICKY_MOUSE_BUTTONS`.",3],[10,"get_key","","Wrapper for `glfwGetKey`.",3],[10,"get_mouse_button","","Wrapper for `glfwGetMouseButton`.",3],[10,"get_cursor_pos","","Wrapper for `glfwGetCursorPos`.",3],[10,"set_cursor_pos","","Wrapper for `glfwSetCursorPos`.",3],[10,"set_key_polling","","Wrapper for `glfwSetKeyCallback`.",3],[10,"set_char_polling","","Wrapper for `glfwSetCharCallback`.",3],[10,"set_mouse_button_polling","","Wrapper for `glfwSetMouseButtonCallback`.",3],[10,"set_cursor_pos_polling","","Wrapper for `glfwSetCursorPosCallback`.",3],[10,"set_cursor_enter_polling","","Wrapper for `glfwSetCursorEnterCallback`.",3],[10,"set_scroll_polling","","Wrapper for `glfwSetScrollCallback`.",3],[10,"set_clipboard_string","","Wrapper for `glfwGetClipboardString`.",3],[10,"get_clipboard_string","","Wrapper for `glfwGetClipboardString`.",3],[10,"get_x11_window","","Wrapper for `glfwGetX11Window`",3],[10,"get_glx_context","","Wrapper for `glfwGetGLXContext`",3],[10,"drop","","Closes the window and performs the necessary cleanups. This will block\nuntil all associated `RenderContext`s were also dropped, and emit a\n`debug!` message to that effect.",3],[10,"window_ptr","","",3],[10,"window_ptr","","",27],[10,"fmt","","",18],[10,"hash","","",18],[10,"eq","","",18],[10,"ne","","",18],[10,"clone","","",18],[10,"is_present","","Wrapper for `glfwJoystickPresent`.",4],[10,"get_axes","","Wrapper for `glfwGetJoystickAxes`.",4],[10,"get_buttons","","Wrapper for `glfwGetJoystickButtons`.",4],[10,"get_name","","Wrapper for `glfwGetJoystickName`.",4]],"paths":[[1,"Callback"],[1,"VidMode"],[1,"GammaRamp"],[1,"Window"],[1,"Joystick"],[2,"Action"],[2,"Key"],[2,"MouseButton"],[2,"Error"],[2,"CursorMode"],[2,"InitError"],[2,"MonitorEvent"],[2,"WindowHint"],[2,"ClientApi"],[2,"ContextRobustness"],[2,"OpenGlProfile"],[2,"WindowMode"],[2,"WindowEvent"],[2,"JoystickId"],[1,"GLFWgammaramp"],[1,"GLFWvidmode"],[6,"Context"],[1,"ShowAliases"],[1,"Glfw"],[1,"Monitor"],[1,"Modifiers"],[1,"FlushedMessages"],[1,"RenderContext"]]};

searchIndex['gl_generator'] = {"items":[[0,"","gl_generator",""],[0,"static_gen","",""],[1,"StaticGenerator","gl_generator::static_gen",""],[10,"write","","",0],[0,"struct_gen","gl_generator",""],[1,"StructGenerator","gl_generator::struct_gen",""],[10,"write","","",1],[0,"registry","gl_generator",""],[1,"Registry","gl_generator::registry",""],[11,"groups","","",2],[11,"enums","","",2],[11,"cmds","","",2],[11,"features","","",2],[11,"extensions","","",2],[1,"EnumIterator","",""],[1,"CmdIterator","",""],[1,"Group","",""],[11,"name","","",3],[11,"enums","","",3],[1,"EnumNs","",""],[11,"namespace","","",4],[11,"group","","",4],[11,"ty","","",4],[11,"start","","",4],[11,"end","","",4],[11,"vendor","","",4],[11,"comment","","",4],[11,"defs","","",4],[1,"Enum","",""],[11,"ident","","",5],[11,"value","","",5],[11,"alias","","",5],[11,"ty","","",5],[1,"CmdNs","",""],[11,"namespace","","",6],[11,"defs","","",6],[1,"Binding","",""],[11,"ident","","",7],[11,"ty","","",7],[11,"group","","",7],[1,"Cmd","",""],[11,"proto","","",8],[11,"params","","",8],[11,"is_safe","","",8],[11,"alias","","",8],[11,"vecequiv","","",8],[11,"glx","","",8],[1,"Feature","",""],[11,"api","","",9],[11,"name","","",9],[11,"number","","",9],[11,"requires","","",9],[11,"removes","","",9],[1,"Require","",""],[11,"comment","","",10],[11,"enums","","A reference to the earlier types, by name",10],[11,"commands","","A reference to the earlier types, by name",10],[1,"Remove","",""],[11,"profile","","",11],[11,"comment","","",11],[11,"enums","","A reference to the earlier types, by name",11],[11,"commands","","A reference to the earlier types, by name",11],[1,"Extension","",""],[11,"name","","",12],[11,"supported","","which apis this extension is defined for (see Feature.api)",12],[11,"requires","","",12],[1,"GlxOpcode","",""],[11,"ty","","",13],[11,"opcode","","",13],[11,"name","","",13],[11,"comment","","",13],[1,"Filter","",""],[11,"extensions","","",14],[11,"profile","","",14],[11,"version","","",14],[11,"api","","",14],[2,"Ns","",""],[12,"Gl","","",15],[12,"Glx","","",15],[12,"Wgl","","",15],[6,"FromXML","",""],[9,"convert","","",16],[10,"from_str","","",15],[10,"fmt","","",15],[10,"fmt","","",15],[10,"from_xml","","Generate a registry from the supplied XML string",2],[10,"get_tys","","Returns a set of all the types used in the supplied registry. This is useful\nfor working out what conversions are needed for the specific registry.",2],[10,"enum_iter","","",2],[10,"cmd_iter","","",2],[10,"next","","",17],[10,"next","","",18],[10,"clone","","",9],[10,"clone","","",10],[10,"clone","","",11],[10,"clone","","",12],[10,"convert","","",10],[10,"convert","","",11],[10,"convert","","",9],[10,"convert","","",12],[10,"convert","collections::string","",19],[0,"ty","gl_generator",""],[3,"to_return_suffix","gl_generator::ty",""],[3,"to_rust_ty","","Converts a C style type definition to the Rust equivalent"],[4,"Src","",""],[5,"GL_ALIASES","",""],[5,"X_ALIASES","",""],[5,"GLX_ALIASES","",""],[5,"WIN_ALIASES","",""],[5,"WGL_ALIASES","",""]],"paths":[[1,"StaticGenerator"],[1,"StructGenerator"],[1,"Registry"],[1,"Group"],[1,"EnumNs"],[1,"Enum"],[1,"CmdNs"],[1,"Binding"],[1,"Cmd"],[1,"Feature"],[1,"Require"],[1,"Remove"],[1,"Extension"],[1,"GlxOpcode"],[1,"Filter"],[2,"Ns"],[6,"FromXML"],[1,"EnumIterator"],[1,"CmdIterator"],[1,"String"]]};

searchIndex['link_glfw'] = {"items":[[0,"","link_glfw",""],[3,"registrar","",""],[3,"expand","",""]],"paths":[]};

searchIndex['dim3'] = {"items":[],"paths":[]};

searchIndex['xml'] = {"items":[[0,"","xml","This crate currently provides almost XML 1.0/1.1-compliant pull parser."],[0,"macros","","Contains several macros used in this crate."],[0,"common","","Contains several types used throughout the library."],[1,"Error","xml::common","XML parsing error."],[1,"Name","","XML qualified name."],[11,"prefix","","An XML namespace prefix.",0],[11,"namespace","","An XML namespace identifier.",0],[11,"local_name","","Local (namespace-less) name.",0],[1,"Attribute","","XML element attribute."],[11,"name","","Qualified name of the attribute.",1],[11,"value","","Attribute value.",1],[2,"XmlVersion","","XML version enumeration."],[12,"Version10","","XML version 1.0.",2],[12,"Version11","","XML version 1.1.",2],[3,"is_whitespace_char","","Checks whether the given character is a white space character (`S`)\nas is defined by XML 1.1 specification, [section 2.3][1]."],[3,"is_name_start_char","","Checks whether the given character is a name start character (`NameStartChar`)\nas is defined by XML 1.1 specification, [section 2.3][1]."],[3,"is_name_char","","Checks whether the given character is a name character (`NameChar`)\nas is defined by XML 1.1 specification, [section 2.3][1]."],[3,"parse_name","","Parses given string slice into an XML qualified name."],[3,"escape_str","","Performs escaping of common XML characters."],[6,"HasPosition","","Represents a thing which has a position inside some textual document."],[9,"row","","Returns a line number inside the document.",3],[9,"col","","Returns a column number inside the document.",3],[6,"OptionOps","","Contains additional operations on optional values."],[9,"execute","","Executes given action on an optional value, if it is present. Otherwise\nit is a no-op.",4],[10,"eq","","",5],[10,"ne","","",5],[10,"clone","","",5],[10,"fmt","","",5],[10,"row","","",5],[10,"col","","",5],[10,"new","","Creates a new error using position information from the provided\n`HasPosition` object and a message.",5],[10,"new_full","","Creates a new error using provided position information and a message.",5],[10,"msg","","Returns a reference to a message which is contained inside this error.",5],[10,"eq","","",0],[10,"ne","","",0],[10,"clone","","",0],[10,"fmt","","",0],[10,"new_local","","Returns a `Name` instance representing plain local name.",0],[10,"new","","Returns a `Name` instance representing qualified name with the\ngiven prefix and namespace URI.",0],[10,"prefix_ref","","Returns a slice with namespace prefix of this name, if it is present.",0],[10,"namespace_ref","","Returns a slice with namespace URI of this name, if it is present.",0],[10,"to_str_proper","","Returns correct XML representation of this local name and prefix.",0],[10,"eq","","",1],[10,"ne","","",1],[10,"clone","","",1],[10,"fmt","","",1],[10,"new","","Returns an `Attribute` instance with the given qualified name and value.",1],[10,"new_local","","Returns an `Attribute` instance with plain local name and the given value.",1],[10,"eq","","",2],[10,"ne","","",2],[10,"clone","","",2],[10,"fmt","","",2],[10,"execute","core::option","",6],[0,"namespace","xml",""],[1,"Namespace","xml::namespace","Namespace is a map from prefixes to namespace URIs."],[1,"NamespaceMappings","","An iterator over mappings from prefixes to URIs in a namespace."],[1,"NamespaceStack","","Namespace stack is a sequence of namespaces."],[1,"NamespaceStackMappings","","An iterator over mappings from prefixes to URIs in a namespace stack."],[5,"NS_XMLNS_PREFIX","",""],[5,"NS_XMLNS_URI","",""],[5,"NS_XML_PREFIX","",""],[5,"NS_XML_URI","",""],[5,"NS_EMPTY_URI","",""],[6,"NamespaceIterable","","Denotes something which contains namespace URI mappings."],[9,"uri_mappings","","",7],[10,"clone","","",8],[10,"eq","","",8],[10,"ne","","",8],[10,"empty","","Returns an empty namespace.",8],[10,"is_empty","","Checks whether this namespace is empty.",8],[10,"is_essentially_empty","","Checks whether this namespace is essentially empty, that is, it does not contain\nanything but default mappings.",8],[10,"put","","Puts a mapping into this namespace.",8],[10,"get","","Queries the namespace for the given prefix.",8],[10,"next","","",9],[10,"uri_mappings","","",8],[10,"eq","","",10],[10,"ne","","",10],[10,"clone","","",10],[10,"empty","","Returns an empty namespace stack.",10],[10,"default","","Returns a namespace stack with default items in it.",10],[10,"push_empty","","Adds an empty namespace to the top of this stack.",10],[10,"pop","","Removes a namespace at the top of the stack.",10],[10,"peek","","Returns a namespace at the top of the stack, leaving the stack intact.",10],[10,"put","","Puts a mapping into the topmost namespace in this stack.",10],[10,"get","","Performs a search for the given prefix in the whole stack.",10],[10,"squash","","Combines this stack of namespaces into a single namespace.",10],[10,"next","","",11],[10,"uri_mappings","","",10],[0,"reader","xml","Contains high-level interface for a pull-based XML parser."],[1,"EventReader","xml::reader","Simple wrapper around an `std::io::Buffer` which provides pull-based XML parsing."],[1,"Events","","XML events iterator, created by `events()` method on `Parser`."],[0,"config","","Contains parser configuration object."],[1,"ParserConfig","xml::reader::config","Parser configuration structure."],[11,"trim_whitespace","","Whether or not should whitespace be removed. Default is false.",12],[11,"whitespace_to_characters","","Whether or not should whitespace be converted to characters.\nDefault is false.",12],[11,"cdata_to_characters","","Whether or not should CDATA be converted to characters.\nDefault is false.",12],[11,"ignore_comments","","Whether or not should comments be omitted. Default is true.",12],[11,"coalesce_characters","","Whether or not should sequential `Characters` events be merged.\nDefault is true.",12],[10,"new","","Returns a new config with default values.",12],[10,"trim_whitespace","","Sets the field to the provided value and returns updated config object.",12],[10,"whitespace_to_characters","","Sets the field to the provided value and returns updated config object.",12],[10,"cdata_to_characters","","Sets the field to the provided value and returns updated config object.",12],[10,"ignore_comments","","Sets the field to the provided value and returns updated config object.",12],[10,"coalesce_characters","","Sets the field to the provided value and returns updated config object.",12],[0,"events","xml::reader","Contains `XmlEvent` datatype, instances of which are emitted by the parser."],[2,"XmlEvent","xml::reader::events","An element of an XML input stream."],[12,"StartDocument","","Corresponds to XML document declaration.",13],[11,"version","xml::reader::events::XmlEvent","XML version.",13],[11,"encoding","","XML document encoding.",13],[11,"standalone","","XML standalone declaration.",13],[12,"EndDocument","xml::reader::events","Denotes to the end of the document stream.",13],[12,"ProcessingInstruction","","Denotes an XML processing instruction.",13],[11,"name","xml::reader::events::XmlEvent","Processing instruction target.",13],[11,"data","","Processing instruction content.",13],[12,"StartElement","xml::reader::events","Denotes a beginning of an XML element.",13],[11,"name","xml::reader::events::XmlEvent","Qualified name of the element.",13],[11,"attributes","","A list of attributes associated with the element.\n \nCurrently attributes are not checked for duplicates (TODO)",13],[11,"namespace","","Contents of the namespace mapping at this point of the document.",13],[12,"EndElement","xml::reader::events","Denotes an end of an XML document.",13],[11,"name","xml::reader::events::XmlEvent","Qualified name of the element.",13],[12,"CData","xml::reader::events","Denotes CDATA content.",13],[12,"Comment","","Denotes a comment.",13],[12,"Characters","","Denotes character data outside of tags.",13],[12,"Whitespace","","Denotes a chunk of whitespace outside of tags.",13],[12,"Error","","Denotes parsing error.",13],[10,"clone","","",13],[10,"eq","","",13],[10,"ne","","",13],[10,"fmt","","",13],[10,"as_writer_event","","",13],[10,"new","xml::reader","Creates a new parser, consuming given `Buffer`.",14],[10,"new_with_config","","Creates a new parser with the provded configuration, consuming given `Buffer`.",14],[10,"next","","Pulls and returns next XML event from the stream.",14],[10,"events","","Returns an iterator over XML events.",14],[10,"next","","",15],[10,"new_from_string","","Convenience method to create a reader from an owned string.",14],[10,"new_from_bytes","","Convenience method to create a reader from an owned vector of bytes.",14],[10,"new_from_str_slice","","Convenience method to create a reader from a string slice.",14],[10,"new_from_bytes_slice","","Convenience method to create a reader from a slice of bytes.",14],[0,"writer","xml",""],[1,"EventWriter","xml::writer",""],[0,"config","",""],[1,"EmitterConfig","xml::writer::config",""],[11,"line_separator","","",16],[11,"indent_string","","",16],[11,"perform_indent","","",16],[11,"write_document_declaration","","",16],[11,"normalize_empty_elements","","",16],[11,"cdata_to_characters","","",16],[10,"new","","",16],[10,"line_separator","","Sets the field to the provided value and returns updated config object.",16],[10,"indent_string","","Sets the field to the provided value and returns updated config object.",16],[10,"perform_indent","","Sets the field to the provided value and returns updated config object.",16],[10,"write_document_declaration","","Sets the field to the provided value and returns updated config object.",16],[10,"normalize_empty_elements","","Sets the field to the provided value and returns updated config object.",16],[10,"cdata_to_characters","","Sets the field to the provided value and returns updated config object.",16],[0,"events","xml::writer",""],[2,"XmlEvent","xml::writer::events","An element of an XML output stream."],[12,"StartDocument","","Corresponds to XML document declaration.",17],[11,"version","xml::writer::events::XmlEvent","XML version.",17],[11,"encoding","","XML document encoding.",17],[11,"standalone","","XML standalone declaration.",17],[12,"ProcessingInstruction","xml::writer::events","Denotes an XML processing instruction.",17],[11,"name","xml::writer::events::XmlEvent","Processing instruction target.",17],[11,"data","","Processing instruction content.",17],[12,"StartElement","xml::writer::events","Denotes a beginning of an XML element.",17],[11,"name","xml::writer::events::XmlEvent","Qualified name of the element.",17],[11,"attributes","","A list of attributes associated with the element.\n \nCurrently attributes are not checked for duplicates (TODO).",17],[11,"namespace","","Contents of the namespace mapping at this point of the document.",17],[12,"EndElement","xml::writer::events","Denotes an end of an XML document.",17],[11,"name","xml::writer::events::XmlEvent","Qualified name of the element.",17],[12,"CData","xml::writer::events","Denotes CDATA content.",17],[12,"Comment","","Denotes a comment.",17],[12,"Characters","","Denotes character data outside of tags.",17],[4,"EventWriterResult","xml::writer",""],[10,"new","","",18],[10,"new_with_config","","",18],[10,"write","","",18],[10,"new_into_mem","","",18],[10,"new_into_mem_config","","",18]],"paths":[[1,"Name"],[1,"Attribute"],[2,"XmlVersion"],[6,"HasPosition"],[6,"OptionOps"],[1,"Error"],[2,"Option"],[6,"NamespaceIterable"],[1,"Namespace"],[1,"NamespaceMappings"],[1,"NamespaceStack"],[1,"NamespaceStackMappings"],[1,"ParserConfig"],[2,"XmlEvent"],[1,"EventReader"],[1,"Events"],[1,"EmitterConfig"],[2,"XmlEvent"],[1,"EventWriter"]]};

searchIndex['stb_image'] = {"items":[[0,"","stb_image",""],[0,"stb_image","",""],[0,"bindgen","stb_image::stb_image",""],[1,"stbi_io_callbacks","stb_image::stb_image::bindgen",""],[13,"stbi_load_from_memory","",""],[13,"stbi_load","",""],[13,"stbi_load_from_file","",""],[13,"stbi_load_from_callbacks","",""],[13,"stbi_loadf_from_memory","",""],[13,"stbi_loadf","",""],[13,"stbi_loadf_from_file","",""],[13,"stbi_loadf_from_callbacks","",""],[13,"stbi_hdr_to_ldr_gamma","",""],[13,"stbi_hdr_to_ldr_scale","",""],[13,"stbi_ldr_to_hdr_gamma","",""],[13,"stbi_ldr_to_hdr_scale","",""],[13,"stbi_is_hdr_from_callbacks","",""],[13,"stbi_is_hdr_from_memory","",""],[13,"stbi_is_hdr","",""],[13,"stbi_is_hdr_from_file","",""],[13,"stbi_failure_reason","",""],[13,"stbi_image_free","",""],[13,"stbi_info_from_memory","",""],[13,"stbi_info_from_callbacks","",""],[13,"stbi_info","",""],[13,"stbi_info_from_file","",""],[13,"stbi_set_unpremultiply_on_load","",""],[13,"stbi_convert_iphone_png_to_rgb","",""],[13,"stbi_zlib_decode_malloc_guesssize","",""],[13,"stbi_zlib_decode_malloc","",""],[13,"stbi_zlib_decode_buffer","",""],[13,"stbi_zlib_decode_noheader_malloc","",""],[13,"stbi_zlib_decode_noheader_buffer","",""],[4,"stbi_uc","",""],[0,"image","stb_image",""],[1,"Image","stb_image::image",""],[11,"width","","",0],[11,"height","","",0],[11,"depth","","",0],[11,"data","","",0],[2,"LoadResult","",""],[12,"Error","","",1],[12,"ImageU8","","",1],[12,"ImageF32","","",1],[3,"new_image","",""],[3,"load","",""],[3,"load_with_depth","",""],[3,"load_from_memory","",""],[3,"load_from_memory_with_depth","",""],[10,"from_result","","",1]],"paths":[[1,"Image"],[2,"LoadResult"]]};

searchIndex['semver'] = {"items":[[0,"","semver","Semantic version parsing and comparison."],[1,"Version","","Represents a version number conforming to the semantic versioning scheme."],[11,"major","","The major version, to be incremented on incompatible changes.",0],[11,"minor","","The minor version, to be incremented when functionality is added in a\nbackwards-compatible manner.",0],[11,"patch","","The patch version, to be incremented when backwards-compatible bug\nfixes are made.",0],[11,"pre","","The pre-release version identifier, if one exists.",0],[11,"build","","The build metadata, ignored when determining version precedence.",0],[2,"Identifier","","An identifier in the pre-release or build metadata. If the identifier can\nbe parsed as a decimal value, it will be represented with `Numeric`."],[12,"Numeric","","",1],[12,"AlphaNumeric","","",1],[3,"parse","","Parse a string into a semver object."],[10,"hash","","",1],[10,"cmp","","",1],[10,"partial_cmp","","",1],[10,"lt","","",1],[10,"le","","",1],[10,"gt","","",1],[10,"ge","","",1],[10,"eq","","",1],[10,"ne","","",1],[10,"clone","","",1],[10,"fmt","","",1],[10,"clone","","",0],[10,"fmt","","",0],[10,"eq","","",0],[10,"partial_cmp","","",0],[10,"cmp","","",0],[10,"hash","","",0]],"paths":[[1,"Version"],[2,"Identifier"]]};

searchIndex['freetype'] = {"items":[[0,"","freetype",""],[0,"freetype","",""],[1,"struct_FT_MemoryRec_","freetype::freetype",""],[11,"user","","",0],[11,"alloc","","",0],[11,"free","","",0],[11,"realloc","","",0],[1,"struct_FT_StreamRec_","",""],[11,"base","","",1],[11,"size","","",1],[11,"pos","","",1],[11,"descriptor","","",1],[11,"pathname","","",1],[11,"read","","",1],[11,"close","","",1],[11,"memory","","",1],[11,"cursor","","",1],[11,"limit","","",1],[1,"struct_FT_Vector_","",""],[11,"x","","",2],[11,"y","","",2],[1,"struct_FT_BBox_","",""],[11,"xMin","","",3],[11,"yMin","","",3],[11,"xMax","","",3],[11,"yMax","","",3],[1,"struct_FT_Bitmap_","",""],[11,"rows","","",4],[11,"width","","",4],[11,"pitch","","",4],[11,"buffer","","",4],[11,"num_grays","","",4],[11,"pixel_mode","","",4],[11,"palette_mode","","",4],[11,"palette","","",4],[1,"struct_FT_Outline_","",""],[11,"n_contours","","",5],[11,"n_points","","",5],[11,"points","","",5],[11,"tags","","",5],[11,"contours","","",5],[11,"flags","","",5],[1,"struct_FT_Outline_Funcs_","",""],[11,"move_to","","",6],[11,"line_to","","",6],[11,"conic_to","","",6],[11,"cubic_to","","",6],[11,"shift","","",6],[11,"delta","","",6],[1,"struct_FT_Span_","",""],[11,"x","","",7],[11,"len","","",7],[11,"coverage","","",7],[1,"struct_FT_Raster_Params_","",""],[11,"target","","",8],[11,"source","","",8],[11,"flags","","",8],[11,"gray_spans","","",8],[11,"black_spans","","",8],[11,"bit_test","","",8],[11,"bit_set","","",8],[11,"user","","",8],[11,"clip_box","","",8],[1,"struct_FT_Raster_Funcs_","",""],[11,"glyph_format","","",9],[11,"raster_new","","",9],[11,"raster_reset","","",9],[11,"raster_set_mode","","",9],[11,"raster_render","","",9],[11,"raster_done","","",9],[1,"struct_FT_UnitVector_","",""],[11,"x","","",10],[11,"y","","",10],[1,"struct_FT_Matrix_","",""],[11,"xx","","",11],[11,"xy","","",11],[11,"yx","","",11],[11,"yy","","",11],[1,"struct_FT_Data_","",""],[11,"pointer","","",12],[11,"length","","",12],[1,"struct_FT_Generic_","",""],[11,"data","","",13],[11,"finalizer","","",13],[1,"struct_FT_ListNodeRec_","",""],[11,"prev","","",14],[11,"next","","",14],[11,"data","","",14],[1,"struct_FT_ListRec_","",""],[11,"head","","",15],[11,"tail","","",15],[1,"struct_FT_Glyph_Metrics_","",""],[11,"width","","",16],[11,"height","","",16],[11,"horiBearingX","","",16],[11,"horiBearingY","","",16],[11,"horiAdvance","","",16],[11,"vertBearingX","","",16],[11,"vertBearingY","","",16],[11,"vertAdvance","","",16],[1,"struct_FT_Bitmap_Size_","",""],[11,"height","","",17],[11,"width","","",17],[11,"size","","",17],[11,"x_ppem","","",17],[11,"y_ppem","","",17],[1,"struct_FT_CharMapRec_","",""],[11,"face","","",18],[11,"encoding","","",18],[11,"platform_id","","",18],[11,"encoding_id","","",18],[1,"struct_FT_FaceRec_","",""],[11,"num_faces","","",19],[11,"face_index","","",19],[11,"face_flags","","",19],[11,"style_flags","","",19],[11,"num_glyphs","","",19],[11,"family_name","","",19],[11,"style_name","","",19],[11,"num_fixed_sizes","","",19],[11,"available_sizes","","",19],[11,"num_charmaps","","",19],[11,"charmaps","","",19],[11,"generic","","",19],[11,"bbox","","",19],[11,"units_per_EM","","",19],[11,"ascender","","",19],[11,"descender","","",19],[11,"height","","",19],[11,"max_advance_width","","",19],[11,"max_advance_height","","",19],[11,"underline_position","","",19],[11,"underline_thickness","","",19],[11,"glyph","","",19],[11,"size","","",19],[11,"charmap","","",19],[11,"driver","","",19],[11,"memory","","",19],[11,"stream","","",19],[11,"sizes_list","","",19],[11,"autohint","","",19],[11,"extensions","","",19],[11,"internal","","",19],[1,"struct_FT_Size_Metrics_","",""],[11,"x_ppem","","",20],[11,"y_ppem","","",20],[11,"x_scale","","",20],[11,"y_scale","","",20],[11,"ascender","","",20],[11,"descender","","",20],[11,"height","","",20],[11,"max_advance","","",20],[1,"struct_FT_SizeRec_","",""],[11,"face","","",21],[11,"generic","","",21],[11,"metrics","","",21],[11,"internal","","",21],[1,"struct_FT_GlyphSlotRec_","",""],[11,"library","","",22],[11,"face","","",22],[11,"next","","",22],[11,"reserved","","",22],[11,"generic","","",22],[11,"metrics","","",22],[11,"linearHoriAdvance","","",22],[11,"linearVertAdvance","","",22],[11,"advance","","",22],[11,"format","","",22],[11,"bitmap","","",22],[11,"bitmap_left","","",22],[11,"bitmap_top","","",22],[11,"outline","","",22],[11,"num_subglyphs","","",22],[11,"subglyphs","","",22],[11,"control_data","","",22],[11,"control_len","","",22],[11,"lsb_delta","","",22],[11,"rsb_delta","","",22],[11,"other","","",22],[11,"internal","","",22],[1,"struct_FT_Parameter_","",""],[11,"tag","","",23],[11,"data","","",23],[1,"struct_FT_Open_Args_","",""],[11,"flags","","",24],[11,"memory_base","","",24],[11,"memory_size","","",24],[11,"pathname","","",24],[11,"stream","","",24],[11,"driver","","",24],[11,"num_params","","",24],[11,"params","","",24],[1,"struct_FT_Size_RequestRec_","",""],[11,"_type","","",25],[11,"width","","",25],[11,"height","","",25],[11,"horiResolution","","",25],[11,"vertResolution","","",25],[13,"FT_Init_FreeType","",""],[13,"FT_New_Library","",""],[13,"FT_Add_Default_Modules","",""],[13,"FT_Done_FreeType","",""],[13,"FT_New_Face","",""],[13,"FT_New_Memory_Face","",""],[13,"FT_Open_Face","",""],[13,"FT_Attach_File","",""],[13,"FT_Attach_Stream","",""],[13,"FT_Reference_Face","",""],[13,"FT_Done_Face","",""],[13,"FT_Select_Size","",""],[13,"FT_Request_Size","",""],[13,"FT_Set_Char_Size","",""],[13,"FT_Set_Pixel_Sizes","",""],[13,"FT_Load_Glyph","",""],[13,"FT_Load_Char","",""],[13,"FT_Set_Transform","",""],[13,"FT_Render_Glyph","",""],[13,"FT_Get_Kerning","",""],[13,"FT_Get_Track_Kerning","",""],[13,"FT_Get_Glyph_Name","",""],[13,"FT_Get_Postscript_Name","",""],[13,"FT_Select_Charmap","",""],[13,"FT_Set_Charmap","",""],[13,"FT_Get_Charmap_Index","",""],[13,"FT_Get_Char_Index","",""],[13,"FT_Get_First_Char","",""],[13,"FT_Get_Next_Char","",""],[13,"FT_Get_Name_Index","",""],[13,"FT_Get_SubGlyph_Info","",""],[13,"FT_Get_FSType_Flags","",""],[13,"FT_Face_GetCharVariantIndex","",""],[13,"FT_Face_GetCharVariantIsDefault","",""],[13,"FT_Face_GetVariantSelectors","",""],[13,"FT_Face_GetVariantsOfChar","",""],[13,"FT_Face_GetCharsOfVariant","",""],[13,"FT_MulDiv","",""],[13,"FT_MulFix","",""],[13,"FT_DivFix","",""],[13,"FT_RoundFix","",""],[13,"FT_CeilFix","",""],[13,"FT_FloorFix","",""],[13,"FT_Vector_Transform","",""],[13,"FT_Library_Version","",""],[13,"FT_Face_CheckTrueTypePatents","",""],[13,"FT_Face_SetUnpatentedHinting","",""],[13,"FT_Get_Sfnt_Table","",""],[4,"FT_Int16","",""],[4,"FT_UInt16","",""],[4,"FT_Int32","",""],[4,"FT_UInt32","",""],[4,"FT_Fast","",""],[4,"FT_UFast","",""],[4,"FT_Memory","",""],[4,"FT_Alloc_Func","",""],[4,"FT_Free_Func","",""],[4,"FT_Realloc_Func","",""],[4,"FT_Stream","",""],[4,"union_FT_StreamDesc_","",""],[4,"FT_StreamDesc","",""],[4,"FT_Stream_IoFunc","",""],[4,"FT_Stream_CloseFunc","",""],[4,"FT_StreamRec","",""],[4,"FT_Pos","",""],[4,"FT_Vector","",""],[4,"FT_BBox","",""],[4,"enum_FT_Sfnt_Tag_","",""],[4,"FT_Sfnt_Tag","",""],[4,"enum_FT_Pixel_Mode_","",""],[4,"FT_Pixel_Mode","",""],[4,"FT_Bitmap","",""],[4,"FT_Outline","",""],[4,"FT_Outline_MoveToFunc","",""],[4,"FT_Outline_LineToFunc","",""],[4,"FT_Outline_ConicToFunc","",""],[4,"FT_Outline_CubicToFunc","",""],[4,"FT_Outline_Funcs","",""],[4,"enum_FT_Glyph_Format_","",""],[4,"FT_Glyph_Format","",""],[4,"struct_FT_RasterRec_","",""],[4,"FT_Raster","",""],[4,"FT_Span","",""],[4,"FT_SpanFunc","",""],[4,"FT_Raster_BitTest_Func","",""],[4,"FT_Raster_BitSet_Func","",""],[4,"FT_Raster_Params","",""],[4,"FT_Raster_NewFunc","",""],[4,"FT_Raster_DoneFunc","",""],[4,"FT_Raster_ResetFunc","",""],[4,"FT_Raster_SetModeFunc","",""],[4,"FT_Raster_RenderFunc","",""],[4,"FT_Raster_Funcs","",""],[4,"FT_Bool","",""],[4,"FT_FWord","",""],[4,"FT_UFWord","",""],[4,"FT_Char","",""],[4,"FT_Byte","",""],[4,"FT_Bytes","",""],[4,"FT_Tag","",""],[4,"FT_String","",""],[4,"FT_Short","",""],[4,"FT_UShort","",""],[4,"FT_Int","",""],[4,"FT_UInt","",""],[4,"FT_Long","",""],[4,"FT_ULong","",""],[4,"FT_F2Dot14","",""],[4,"FT_F26Dot6","",""],[4,"FT_Fixed","",""],[4,"FT_Error","",""],[4,"FT_Pointer","",""],[4,"FT_Offset","",""],[4,"FT_PtrDist","",""],[4,"FT_UnitVector","",""],[4,"FT_Matrix","",""],[4,"FT_Data","",""],[4,"FT_Generic_Finalizer","",""],[4,"FT_Generic","",""],[4,"FT_ListNode","",""],[4,"FT_List","",""],[4,"FT_ListNodeRec","",""],[4,"FT_ListRec","",""],[4,"FT_Glyph_Metrics","",""],[4,"FT_Bitmap_Size","",""],[4,"struct_FT_LibraryRec_","",""],[4,"FT_Library","",""],[4,"struct_FT_ModuleRec_","",""],[4,"FT_Module","",""],[4,"struct_FT_DriverRec_","",""],[4,"FT_Driver","",""],[4,"struct_FT_RendererRec_","",""],[4,"FT_Renderer","",""],[4,"FT_Face","",""],[4,"FT_Size","",""],[4,"FT_GlyphSlot","",""],[4,"FT_CharMap","",""],[4,"enum_FT_Encoding_","",""],[4,"FT_Encoding","",""],[4,"FT_CharMapRec","",""],[4,"struct_FT_Face_InternalRec_","",""],[4,"FT_Face_Internal","",""],[4,"FT_FaceRec","",""],[4,"struct_FT_Size_InternalRec_","",""],[4,"FT_Size_Internal","",""],[4,"FT_Size_Metrics","",""],[4,"FT_SizeRec","",""],[4,"struct_FT_SubGlyphRec_","",""],[4,"FT_SubGlyph","",""],[4,"struct_FT_Slot_InternalRec_","",""],[4,"FT_Slot_Internal","",""],[4,"FT_GlyphSlotRec","",""],[4,"FT_Parameter","",""],[4,"FT_Open_Args","",""],[4,"enum_FT_Size_Request_Type_","",""],[4,"FT_Size_Request_Type","",""],[4,"FT_Size_RequestRec","",""],[4,"FT_Size_Request","",""],[4,"enum_FT_Render_Mode_","",""],[4,"FT_Render_Mode","",""],[4,"enum_FT_Kerning_Mode_","",""],[4,"FT_Kerning_Mode","",""],[4,"enum_unnamed1","",""],[4,"enum_unnamed2","",""],[5,"ft_sfnt_head","",""],[5,"ft_sfnt_maxp","",""],[5,"ft_sfnt_os2","",""],[5,"ft_sfnt_hhea","",""],[5,"ft_sfnt_vhea","",""],[5,"ft_sfnt_post","",""],[5,"ft_sfnt_pclt","",""],[5,"ft_sfnt_max","",""],[5,"FT_PIXEL_MODE_NONE","",""],[5,"FT_PIXEL_MODE_MONO","",""],[5,"FT_PIXEL_MODE_GRAY","",""],[5,"FT_PIXEL_MODE_GRAY2","",""],[5,"FT_PIXEL_MODE_GRAY4","",""],[5,"FT_PIXEL_MODE_LCD","",""],[5,"FT_PIXEL_MODE_LCD_V","",""],[5,"FT_PIXEL_MODE_MAX","",""],[5,"FT_GLYPH_FORMAT_NONE","",""],[5,"FT_GLYPH_FORMAT_COMPOSITE","",""],[5,"FT_GLYPH_FORMAT_BITMAP","",""],[5,"FT_GLYPH_FORMAT_OUTLINE","",""],[5,"FT_GLYPH_FORMAT_PLOTTER","",""],[5,"FT_ENCODING_NONE","",""],[5,"FT_ENCODING_MS_SYMBOL","",""],[5,"FT_ENCODING_UNICODE","",""],[5,"FT_ENCODING_SJIS","",""],[5,"FT_ENCODING_GB2312","",""],[5,"FT_ENCODING_BIG5","",""],[5,"FT_ENCODING_WANSUNG","",""],[5,"FT_ENCODING_JOHAB","",""],[5,"FT_ENCODING_MS_SJIS","",""],[5,"FT_ENCODING_MS_GB2312","",""],[5,"FT_ENCODING_MS_BIG5","",""],[5,"FT_ENCODING_MS_WANSUNG","",""],[5,"FT_ENCODING_MS_JOHAB","",""],[5,"FT_ENCODING_ADOBE_STANDARD","",""],[5,"FT_ENCODING_ADOBE_EXPERT","",""],[5,"FT_ENCODING_ADOBE_CUSTOM","",""],[5,"FT_ENCODING_ADOBE_LATIN_1","",""],[5,"FT_ENCODING_OLD_LATIN_2","",""],[5,"FT_ENCODING_APPLE_ROMAN","",""],[5,"FT_LOAD_DEFAULT","",""],[5,"FT_LOAD_NO_SCALE","",""],[5,"FT_LOAD_NO_HINTING","",""],[5,"FT_LOAD_RENDER","",""],[5,"FT_LOAD_NO_BITMAP","",""],[5,"FT_LOAD_VERTICAL_LAYOUT","",""],[5,"FT_LOAD_FORCE_AUTOHINT","",""],[5,"FT_LOAD_CROP_BITMAP","",""],[5,"FT_LOAD_PENDANTIC","",""],[5,"FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH","",""],[5,"FT_LOAD_NO_RECURSE","",""],[5,"FT_LOAD_IGNORE_TRANSFORM","",""],[5,"FT_LOAD_MONOCHROME","",""],[5,"FT_LOAD_LINEAR_DESIGN","",""],[5,"FT_LOAD_NO_AUTOHINT","",""],[5,"FT_STYLE_FLAG_ITALIC","",""],[5,"FT_STYLE_FLAG_BOLD","",""],[5,"FT_SIZE_REQUEST_TYPE_NOMINAL","",""],[5,"FT_SIZE_REQUEST_TYPE_REAL_DIM","",""],[5,"FT_SIZE_REQUEST_TYPE_BBOX","",""],[5,"FT_SIZE_REQUEST_TYPE_CELL","",""],[5,"FT_SIZE_REQUEST_TYPE_SCALES","",""],[5,"FT_SIZE_REQUEST_TYPE_MAX","",""],[5,"FT_RENDER_MODE_NORMAL","",""],[5,"FT_RENDER_MODE_LIGHT","",""],[5,"FT_RENDER_MODE_MONO","",""],[5,"FT_RENDER_MODE_LCD","",""],[5,"FT_RENDER_MODE_LCD_V","",""],[5,"FT_RENDER_MODE_MAX","",""],[5,"FT_KERNING_DEFAULT","",""],[5,"FT_KERNING_UNFITTED","",""],[5,"FT_KERNING_UNSCALED","",""],[5,"FT_Mod_Err_Base","",""],[5,"FT_Mod_Err_Autofit","",""],[5,"FT_Mod_Err_BDF","",""],[5,"FT_Mod_Err_Cache","",""],[5,"FT_Mod_Err_CFF","",""],[5,"FT_Mod_Err_CID","",""],[5,"FT_Mod_Err_Gzip","",""],[5,"FT_Mod_Err_LZW","",""],[5,"FT_Mod_Err_OTvalid","",""],[5,"FT_Mod_Err_PCF","",""],[5,"FT_Mod_Err_PFR","",""],[5,"FT_Mod_Err_PSaux","",""],[5,"FT_Mod_Err_PShinter","",""],[5,"FT_Mod_Err_PSnames","",""],[5,"FT_Mod_Err_Raster","",""],[5,"FT_Mod_Err_SFNT","",""],[5,"FT_Mod_Err_Smooth","",""],[5,"FT_Mod_Err_TrueType","",""],[5,"FT_Mod_Err_Type1","",""],[5,"FT_Mod_Err_Type42","",""],[5,"FT_Mod_Err_Winfonts","",""],[5,"FT_Mod_Err_Max","",""],[5,"FT_Err_Ok","",""],[5,"FT_Err_Cannot_Open_Resource","",""],[5,"FT_Err_Unknown_File_Format","",""],[5,"FT_Err_Invalid_File_Format","",""],[5,"FT_Err_Invalid_Version","",""],[5,"FT_Err_Lower_Module_Version","",""],[5,"FT_Err_Invalid_Argument","",""],[5,"FT_Err_Unimplemented_Feature","",""],[5,"FT_Err_Invalid_Table","",""],[5,"FT_Err_Invalid_Offset","",""],[5,"FT_Err_Array_Too_Large","",""],[5,"FT_Err_Invalid_Glyph_Index","",""],[5,"FT_Err_Invalid_Character_Code","",""],[5,"FT_Err_Invalid_Glyph_Format","",""],[5,"FT_Err_Cannot_Render_Glyph","",""],[5,"FT_Err_Invalid_Outline","",""],[5,"FT_Err_Invalid_Composite","",""],[5,"FT_Err_Too_Many_Hints","",""],[5,"FT_Err_Invalid_Pixel_Size","",""],[5,"FT_Err_Invalid_Handle","",""],[5,"FT_Err_Invalid_Library_Handle","",""],[5,"FT_Err_Invalid_Driver_Handle","",""],[5,"FT_Err_Invalid_Face_Handle","",""],[5,"FT_Err_Invalid_Size_Handle","",""],[5,"FT_Err_Invalid_Slot_Handle","",""],[5,"FT_Err_Invalid_CharMap_Handle","",""],[5,"FT_Err_Invalid_Cache_Handle","",""],[5,"FT_Err_Invalid_Stream_Handle","",""],[5,"FT_Err_Too_Many_Drivers","",""],[5,"FT_Err_Too_Many_Extensions","",""],[5,"FT_Err_Out_Of_Memory","",""],[5,"FT_Err_Unlisted_Object","",""],[5,"FT_Err_Cannot_Open_Stream","",""],[5,"FT_Err_Invalid_Stream_Seek","",""],[5,"FT_Err_Invalid_Stream_Skip","",""],[5,"FT_Err_Invalid_Stream_Read","",""],[5,"FT_Err_Invalid_Stream_Operation","",""],[5,"FT_Err_Invalid_Frame_Operation","",""],[5,"FT_Err_Nested_Frame_Access","",""],[5,"FT_Err_Invalid_Frame_Read","",""],[5,"FT_Err_Raster_Uninitialized","",""],[5,"FT_Err_Raster_Corrupted","",""],[5,"FT_Err_Raster_Overflow","",""],[5,"FT_Err_Raster_Negative_Height","",""],[5,"FT_Err_Too_Many_Caches","",""],[5,"FT_Err_Invalid_Opcode","",""],[5,"FT_Err_Too_Few_Arguments","",""],[5,"FT_Err_Stack_Overflow","",""],[5,"FT_Err_Code_Overflow","",""],[5,"FT_Err_Bad_Argument","",""],[5,"FT_Err_Divide_By_Zero","",""],[5,"FT_Err_Invalid_Reference","",""],[5,"FT_Err_Debug_OpCode","",""],[5,"FT_Err_ENDF_In_Exec_Stream","",""],[5,"FT_Err_Nested_DEFS","",""],[5,"FT_Err_Invalid_CodeRange","",""],[5,"FT_Err_Execution_Too_Long","",""],[5,"FT_Err_Too_Many_Function_Defs","",""],[5,"FT_Err_Too_Many_Instruction_Defs","",""],[5,"FT_Err_Table_Missing","",""],[5,"FT_Err_Horiz_Header_Missing","",""],[5,"FT_Err_Locations_Missing","",""],[5,"FT_Err_Name_Table_Missing","",""],[5,"FT_Err_CMap_Table_Missing","",""],[5,"FT_Err_Hmtx_Table_Missing","",""],[5,"FT_Err_Post_Table_Missing","",""],[5,"FT_Err_Invalid_Horiz_Metrics","",""],[5,"FT_Err_Invalid_CharMap_Format","",""],[5,"FT_Err_Invalid_PPem","",""],[5,"FT_Err_Invalid_Vert_Metrics","",""],[5,"FT_Err_Could_Not_Find_Context","",""],[5,"FT_Err_Invalid_Post_Table_Format","",""],[5,"FT_Err_Invalid_Post_Table","",""],[5,"FT_Err_Syntax_Error","",""],[5,"FT_Err_Stack_Underflow","",""],[5,"FT_Err_Ignore","",""],[5,"FT_Err_No_Unicode_Glyph_Name","",""],[5,"FT_Err_Missing_Startfont_Field","",""],[5,"FT_Err_Missing_Font_Field","",""],[5,"FT_Err_Missing_Size_Field","",""],[5,"FT_Err_Missing_Fontboundingbox_Field","",""],[5,"FT_Err_Missing_Chars_Field","",""],[5,"FT_Err_Missing_Startchar_Field","",""],[5,"FT_Err_Missing_Encoding_Field","",""],[5,"FT_Err_Missing_Bbx_Field","",""],[5,"FT_Err_Bbx_Too_Big","",""],[5,"FT_Err_Corrupted_Font_Header","",""],[5,"FT_Err_Corrupted_Font_Glyphs","",""],[5,"FT_Err_Max","",""],[6,"FTErrorMethods","",""],[9,"succeeded","","",26],[10,"succeeded","","",27],[0,"tt_os2","freetype",""],[1,"TT_OS2","freetype::tt_os2",""],[11,"version","","",28],[11,"xAvgCharWidth","","",28],[11,"usWeightClass","","",28],[11,"usWidthClass","","",28],[11,"fsType","","",28],[11,"ySubscriptXSize","","",28],[11,"ySubscriptYSize","","",28],[11,"ySubscriptXOffset","","",28],[11,"ySubscriptYOffset","","",28],[11,"ySuperscriptXSize","","",28],[11,"ySuperscriptYSize","","",28],[11,"ySuperscriptXOffset","","",28],[11,"ySuperscriptYOffset","","",28],[11,"yStrikeoutSize","","",28],[11,"yStrikeoutPosition","","",28],[11,"sFamilyClass","","",28],[11,"panose","","",28],[11,"ulUnicodeRange1","","",28],[11,"ulUnicodeRange2","","",28],[11,"ulUnicodeRange3","","",28],[11,"ulUnicodeRange4","","",28],[11,"ulCodePageRange1","","",28],[11,"ulCodePageRange2","","",28],[11,"sxHeight","","",28],[11,"sCapHeight","","",28],[11,"usDefaultChar","","",28],[11,"usBreakChar","","",28],[11,"usMaxContext","","",28]],"paths":[[1,"struct_FT_MemoryRec_"],[1,"struct_FT_StreamRec_"],[1,"struct_FT_Vector_"],[1,"struct_FT_BBox_"],[1,"struct_FT_Bitmap_"],[1,"struct_FT_Outline_"],[1,"struct_FT_Outline_Funcs_"],[1,"struct_FT_Span_"],[1,"struct_FT_Raster_Params_"],[1,"struct_FT_Raster_Funcs_"],[1,"struct_FT_UnitVector_"],[1,"struct_FT_Matrix_"],[1,"struct_FT_Data_"],[1,"struct_FT_Generic_"],[1,"struct_FT_ListNodeRec_"],[1,"struct_FT_ListRec_"],[1,"struct_FT_Glyph_Metrics_"],[1,"struct_FT_Bitmap_Size_"],[1,"struct_FT_CharMapRec_"],[1,"struct_FT_FaceRec_"],[1,"struct_FT_Size_Metrics_"],[1,"struct_FT_SizeRec_"],[1,"struct_FT_GlyphSlotRec_"],[1,"struct_FT_Parameter_"],[1,"struct_FT_Open_Args_"],[1,"struct_FT_Size_RequestRec_"],[6,"FTErrorMethods"],[4,"FT_Error"],[1,"TT_OS2"]]};

initSearch(searchIndex);
